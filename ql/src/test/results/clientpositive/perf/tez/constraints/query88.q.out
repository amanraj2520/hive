Warning: Shuffle Join MERGEJOIN[367][tables = [$hdt$_0, $hdt$_1]] in Stage 'Reducer 3' is a cross product
Warning: Shuffle Join MERGEJOIN[368][tables = [$hdt$_0, $hdt$_1, $hdt$_2]] in Stage 'Reducer 4' is a cross product
Warning: Shuffle Join MERGEJOIN[369][tables = [$hdt$_0, $hdt$_1, $hdt$_2, $hdt$_3]] in Stage 'Reducer 5' is a cross product
Warning: Shuffle Join MERGEJOIN[370][tables = [$hdt$_0, $hdt$_1, $hdt$_2, $hdt$_3, $hdt$_4]] in Stage 'Reducer 6' is a cross product
Warning: Shuffle Join MERGEJOIN[371][tables = [$hdt$_0, $hdt$_1, $hdt$_2, $hdt$_3, $hdt$_4, $hdt$_5]] in Stage 'Reducer 7' is a cross product
Warning: Shuffle Join MERGEJOIN[372][tables = [$hdt$_0, $hdt$_1, $hdt$_2, $hdt$_3, $hdt$_4, $hdt$_5, $hdt$_6]] in Stage 'Reducer 8' is a cross product
Warning: Shuffle Join MERGEJOIN[373][tables = [$hdt$_0, $hdt$_1, $hdt$_2, $hdt$_3, $hdt$_4, $hdt$_5, $hdt$_6, $hdt$_7]] in Stage 'Reducer 9' is a cross product
PREHOOK: query: explain
select  *
from
 (select count(*) h8_30_to_9
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk   
     and ss_hdemo_sk = household_demographics.hd_demo_sk 
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 8
     and time_dim.t_minute >= 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2)) 
     and store.s_store_name = 'ese') s1,
 (select count(*) h9_to_9_30 
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk 
     and time_dim.t_hour = 9 
     and time_dim.t_minute < 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s2,
 (select count(*) h9_30_to_10 
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 9
     and time_dim.t_minute >= 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s3,
 (select count(*) h10_to_10_30
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 10 
     and time_dim.t_minute < 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s4,
 (select count(*) h10_30_to_11
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 10 
     and time_dim.t_minute >= 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s5,
 (select count(*) h11_to_11_30
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk 
     and time_dim.t_hour = 11
     and time_dim.t_minute < 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s6,
 (select count(*) h11_30_to_12
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 11
     and time_dim.t_minute >= 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s7,
 (select count(*) h12_to_12_30
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 12
     and time_dim.t_minute < 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s8
PREHOOK: type: QUERY
PREHOOK: Input: default@household_demographics
PREHOOK: Input: default@store
PREHOOK: Input: default@store_sales
PREHOOK: Input: default@time_dim
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain
select  *
from
 (select count(*) h8_30_to_9
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk   
     and ss_hdemo_sk = household_demographics.hd_demo_sk 
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 8
     and time_dim.t_minute >= 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2)) 
     and store.s_store_name = 'ese') s1,
 (select count(*) h9_to_9_30 
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk 
     and time_dim.t_hour = 9 
     and time_dim.t_minute < 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s2,
 (select count(*) h9_30_to_10 
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 9
     and time_dim.t_minute >= 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s3,
 (select count(*) h10_to_10_30
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 10 
     and time_dim.t_minute < 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s4,
 (select count(*) h10_30_to_11
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 10 
     and time_dim.t_minute >= 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s5,
 (select count(*) h11_to_11_30
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk 
     and time_dim.t_hour = 11
     and time_dim.t_minute < 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s6,
 (select count(*) h11_30_to_12
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 11
     and time_dim.t_minute >= 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s7,
 (select count(*) h12_to_12_30
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 12
     and time_dim.t_minute < 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s8
POSTHOOK: type: QUERY
POSTHOOK: Input: default@household_demographics
POSTHOOK: Input: default@store
POSTHOOK: Input: default@store_sales
POSTHOOK: Input: default@time_dim
POSTHOOK: Output: hdfs://### HDFS PATH ###
Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Map 17 (BROADCAST_EDGE), Map 18 (BROADCAST_EDGE), Map 19 (BROADCAST_EDGE), Map 20 (BROADCAST_EDGE), Map 21 (BROADCAST_EDGE), Map 22 (BROADCAST_EDGE), Map 23 (BROADCAST_EDGE), Map 24 (BROADCAST_EDGE), Map 25 (BROADCAST_EDGE), Map 26 (BROADCAST_EDGE), Map 27 (BROADCAST_EDGE), Map 28 (BROADCAST_EDGE), Map 29 (BROADCAST_EDGE), Map 30 (BROADCAST_EDGE), Map 31 (BROADCAST_EDGE), Map 32 (BROADCAST_EDGE), Map 33 (BROADCAST_EDGE), Map 34 (BROADCAST_EDGE), Map 35 (BROADCAST_EDGE), Map 36 (BROADCAST_EDGE), Map 37 (BROADCAST_EDGE), Map 38 (BROADCAST_EDGE), Map 39 (BROADCAST_EDGE), Map 40 (BROADCAST_EDGE)
Reducer 10 <- Map 1 (CUSTOM_SIMPLE_EDGE)
Reducer 11 <- Map 1 (CUSTOM_SIMPLE_EDGE)
Reducer 12 <- Map 1 (CUSTOM_SIMPLE_EDGE)
Reducer 13 <- Map 1 (CUSTOM_SIMPLE_EDGE)
Reducer 14 <- Map 1 (CUSTOM_SIMPLE_EDGE)
Reducer 15 <- Map 1 (CUSTOM_SIMPLE_EDGE)
Reducer 16 <- Map 1 (CUSTOM_SIMPLE_EDGE)
Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)
Reducer 3 <- Reducer 10 (XPROD_EDGE), Reducer 2 (XPROD_EDGE)
Reducer 4 <- Reducer 11 (XPROD_EDGE), Reducer 3 (XPROD_EDGE)
Reducer 5 <- Reducer 12 (XPROD_EDGE), Reducer 4 (XPROD_EDGE)
Reducer 6 <- Reducer 13 (XPROD_EDGE), Reducer 5 (XPROD_EDGE)
Reducer 7 <- Reducer 14 (XPROD_EDGE), Reducer 6 (XPROD_EDGE)
Reducer 8 <- Reducer 15 (XPROD_EDGE), Reducer 7 (XPROD_EDGE)
Reducer 9 <- Reducer 16 (XPROD_EDGE), Reducer 8 (XPROD_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 9
      File Output Operator [FS_238]
        Select Operator [SEL_237] (rows=1 width=64)
          Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
          Merge Join Operator [MERGEJOIN_373] (rows=1 width=64)
            Conds:(Inner),Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
          <-Reducer 16 [XPROD_EDGE] vectorized
            XPROD_EDGE [RS_535]
              Group By Operator [GBY_534] (rows=1 width=8)
                Output:["_col0"],aggregations:["count(VALUE._col0)"]
              <-Map 1 [CUSTOM_SIMPLE_EDGE] vectorized
                PARTITION_ONLY_SHUFFLE [RS_519]
                  Group By Operator [GBY_511] (rows=1 width=8)
                    Output:["_col0"],aggregations:["count()"]
                    Map Join Operator [MAPJOIN_503] (rows=1806751 width=8)
                      Conds:SEL_495._col0=RS_469._col0(Inner),HybridGraceHashJoin:true
                    <-Map 40 [BROADCAST_EDGE] vectorized
                      BROADCAST [RS_469]
                        PartitionCols:_col0
                        Select Operator [SEL_468] (rows=155 width=4)
                          Output:["_col0"]
                          Filter Operator [FIL_467] (rows=155 width=92)
                            predicate:(s_store_name = 'ese')
                            TableScan [TS_205] (rows=1704 width=92)
                              default@store,store,Tbl:COMPLETE,Col:COMPLETE,Output:["s_store_sk","s_store_name"]
                    <-Select Operator [SEL_495] (rows=2460956 width=0)
                        Output:["_col0"]
                        Map Join Operator [MAPJOIN_487] (rows=2460956 width=0)
                          Conds:MAPJOIN_479._col1=RS_466._col0(Inner),HybridGraceHashJoin:true,Output:["_col2"]
                        <-Map 39 [BROADCAST_EDGE] vectorized
                          BROADCAST [RS_466]
                            PartitionCols:_col0
                            Select Operator [SEL_465] (rows=1091 width=4)
                              Output:["_col0"]
                              Filter Operator [FIL_464] (rows=1091 width=12)
                                predicate:(((hd_dep_count = 0) and (hd_vehicle_count <= 2)) or ((hd_dep_count = 1) and (hd_vehicle_count <= 3)) or ((hd_dep_count = 3) and (hd_vehicle_count <= 5)))
                                TableScan [TS_195] (rows=7200 width=12)
                                  default@household_demographics,household_demographics,Tbl:COMPLETE,Col:COMPLETE,Output:["hd_demo_sk","hd_dep_count","hd_vehicle_count"]
                        <-Map Join Operator [MAPJOIN_479] (rows=16240953 width=0)
                            Conds:SEL_471._col0=RS_463._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2"]
                          <-Map 38 [BROADCAST_EDGE] vectorized
                            BROADCAST [RS_463]
                              PartitionCols:_col0
                              Select Operator [SEL_462] (rows=1515 width=4)
                                Output:["_col0"]
                                Filter Operator [FIL_461] (rows=1515 width=12)
                                  predicate:((t_hour = 9) and (t_minute < 30))
                                  TableScan [TS_192] (rows=86400 width=12)
                                    default@time_dim,time_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["t_time_sk","t_hour","t_minute"]
                          <-Select Operator [SEL_471] (rows=501695814 width=11)
                              Output:["_col0","_col1","_col2"]
                              Filter Operator [FIL_470] (rows=501695814 width=11)
                                predicate:(ss_hdemo_sk is not null and ss_sold_time_sk is not null and ss_store_sk is not null)
                                TableScan [TS_0] (rows=575995635 width=11)
                                  default@store_sales,store_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["ss_sold_time_sk","ss_hdemo_sk","ss_store_sk"]
                                <-Map 17 [BROADCAST_EDGE] vectorized
                                  BROADCAST [RS_400]
                                    PartitionCols:_col0
                                    Select Operator [SEL_399] (rows=1515 width=4)
                                      Output:["_col0"]
                                      Filter Operator [FIL_398] (rows=1515 width=12)
                                        predicate:((t_hour = 8) and (t_minute >= 30))
                                        TableScan [TS_3] (rows=86400 width=12)
                                          default@time_dim,time_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["t_time_sk","t_hour","t_minute"]
                                <-Map 18 [BROADCAST_EDGE] vectorized
                                  BROADCAST [RS_403]
                                    PartitionCols:_col0
                                    Select Operator [SEL_402] (rows=1091 width=4)
                                      Output:["_col0"]
                                      Filter Operator [FIL_401] (rows=1091 width=12)
                                        predicate:(((hd_dep_count = 0) and (hd_vehicle_count <= 2)) or ((hd_dep_count = 1) and (hd_vehicle_count <= 3)) or ((hd_dep_count = 3) and (hd_vehicle_count <= 5)))
                                        TableScan [TS_6] (rows=7200 width=12)
                                          default@household_demographics,household_demographics,Tbl:COMPLETE,Col:COMPLETE,Output:["hd_demo_sk","hd_dep_count","hd_vehicle_count"]
                                <-Map 19 [BROADCAST_EDGE] vectorized
                                  BROADCAST [RS_406]
                                    PartitionCols:_col0
                                    Select Operator [SEL_405] (rows=155 width=4)
                                      Output:["_col0"]
                                      Filter Operator [FIL_404] (rows=155 width=92)
                                        predicate:(s_store_name = 'ese')
                                        TableScan [TS_16] (rows=1704 width=92)
                                          default@store,store,Tbl:COMPLETE,Col:COMPLETE,Output:["s_store_sk","s_store_name"]
                                <-Map 20 [BROADCAST_EDGE] vectorized
                                  BROADCAST [RS_409]
                                    PartitionCols:_col0
                                    Select Operator [SEL_408] (rows=1515 width=4)
                                      Output:["_col0"]
                                      Filter Operator [FIL_407] (rows=1515 width=12)
                                        predicate:((t_hour = 12) and (t_minute < 30))
                                        TableScan [TS_30] (rows=86400 width=12)
                                          default@time_dim,time_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["t_time_sk","t_hour","t_minute"]
                                <-Map 21 [BROADCAST_EDGE] vectorized
                                  BROADCAST [RS_412]
                                    PartitionCols:_col0
                                    Select Operator [SEL_411] (rows=1091 width=4)
                                      Output:["_col0"]
                                      Filter Operator [FIL_410] (rows=1091 width=12)
                                        predicate:(((hd_dep_count = 0) and (hd_vehicle_count <= 2)) or ((hd_dep_count = 1) and (hd_vehicle_count <= 3)) or ((hd_dep_count = 3) and (hd_vehicle_count <= 5)))
                                        TableScan [TS_33] (rows=7200 width=12)
                                          default@household_demographics,household_demographics,Tbl:COMPLETE,Col:COMPLETE,Output:["hd_demo_sk","hd_dep_count","hd_vehicle_count"]
                                <-Map 22 [BROADCAST_EDGE] vectorized
                                  BROADCAST [RS_415]
                                    PartitionCols:_col0
                                    Select Operator [SEL_414] (rows=155 width=4)
                                      Output:["_col0"]
                                      Filter Operator [FIL_413] (rows=155 width=92)
                                        predicate:(s_store_name = 'ese')
                                        TableScan [TS_43] (rows=1704 width=92)
                                          default@store,store,Tbl:COMPLETE,Col:COMPLETE,Output:["s_store_sk","s_store_name"]
                                <-Map 23 [BROADCAST_EDGE] vectorized
                                  BROADCAST [RS_418]
                                    PartitionCols:_col0
                                    Select Operator [SEL_417] (rows=1515 width=4)
                                      Output:["_col0"]
                                      Filter Operator [FIL_416] (rows=1515 width=12)
                                        predicate:((t_hour = 11) and (t_minute >= 30))
                                        TableScan [TS_57] (rows=86400 width=12)
                                          default@time_dim,time_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["t_time_sk","t_hour","t_minute"]
                                <-Map 24 [BROADCAST_EDGE] vectorized
                                  BROADCAST [RS_421]
                                    PartitionCols:_col0
                                    Select Operator [SEL_420] (rows=1091 width=4)
                                      Output:["_col0"]
                                      Filter Operator [FIL_419] (rows=1091 width=12)
                                        predicate:(((hd_dep_count = 0) and (hd_vehicle_count <= 2)) or ((hd_dep_count = 1) and (hd_vehicle_count <= 3)) or ((hd_dep_count = 3) and (hd_vehicle_count <= 5)))
                                        TableScan [TS_60] (rows=7200 width=12)
                                          default@household_demographics,household_demographics,Tbl:COMPLETE,Col:COMPLETE,Output:["hd_demo_sk","hd_dep_count","hd_vehicle_count"]
                                <-Map 25 [BROADCAST_EDGE] vectorized
                                  BROADCAST [RS_424]
                                    PartitionCols:_col0
                                    Select Operator [SEL_423] (rows=155 width=4)
                                      Output:["_col0"]
                                      Filter Operator [FIL_422] (rows=155 width=92)
                                        predicate:(s_store_name = 'ese')
                                        TableScan [TS_70] (rows=1704 width=92)
                                          default@store,store,Tbl:COMPLETE,Col:COMPLETE,Output:["s_store_sk","s_store_name"]
                                <-Map 26 [BROADCAST_EDGE] vectorized
                                  BROADCAST [RS_427]
                                    PartitionCols:_col0
                                    Select Operator [SEL_426] (rows=1515 width=4)
                                      Output:["_col0"]
                                      Filter Operator [FIL_425] (rows=1515 width=12)
                                        predicate:((t_hour = 11) and (t_minute < 30))
                                        TableScan [TS_84] (rows=86400 width=12)
                                          default@time_dim,time_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["t_time_sk","t_hour","t_minute"]
                                <-Map 27 [BROADCAST_EDGE] vectorized
                                  BROADCAST [RS_430]
                                    PartitionCols:_col0
                                    Select Operator [SEL_429] (rows=1091 width=4)
                                      Output:["_col0"]
                                      Filter Operator [FIL_428] (rows=1091 width=12)
                                        predicate:(((hd_dep_count = 0) and (hd_vehicle_count <= 2)) or ((hd_dep_count = 1) and (hd_vehicle_count <= 3)) or ((hd_dep_count = 3) and (hd_vehicle_count <= 5)))
                                        TableScan [TS_87] (rows=7200 width=12)
                                          default@household_demographics,household_demographics,Tbl:COMPLETE,Col:COMPLETE,Output:["hd_demo_sk","hd_dep_count","hd_vehicle_count"]
                                <-Map 28 [BROADCAST_EDGE] vectorized
                                  BROADCAST [RS_433]
                                    PartitionCols:_col0
                                    Select Operator [SEL_432] (rows=155 width=4)
                                      Output:["_col0"]
                                      Filter Operator [FIL_431] (rows=155 width=92)
                                        predicate:(s_store_name = 'ese')
                                        TableScan [TS_97] (rows=1704 width=92)
                                          default@store,store,Tbl:COMPLETE,Col:COMPLETE,Output:["s_store_sk","s_store_name"]
                                <-Map 29 [BROADCAST_EDGE] vectorized
                                  BROADCAST [RS_436]
                                    PartitionCols:_col0
                                    Select Operator [SEL_435] (rows=1515 width=4)
                                      Output:["_col0"]
                                      Filter Operator [FIL_434] (rows=1515 width=12)
                                        predicate:((t_hour = 10) and (t_minute >= 30))
                                        TableScan [TS_111] (rows=86400 width=12)
                                          default@time_dim,time_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["t_time_sk","t_hour","t_minute"]
                                <-Map 30 [BROADCAST_EDGE] vectorized
                                  BROADCAST [RS_439]
                                    PartitionCols:_col0
                                    Select Operator [SEL_438] (rows=1091 width=4)
                                      Output:["_col0"]
                                      Filter Operator [FIL_437] (rows=1091 width=12)
                                        predicate:(((hd_dep_count = 0) and (hd_vehicle_count <= 2)) or ((hd_dep_count = 1) and (hd_vehicle_count <= 3)) or ((hd_dep_count = 3) and (hd_vehicle_count <= 5)))
                                        TableScan [TS_114] (rows=7200 width=12)
                                          default@household_demographics,household_demographics,Tbl:COMPLETE,Col:COMPLETE,Output:["hd_demo_sk","hd_dep_count","hd_vehicle_count"]
                                <-Map 31 [BROADCAST_EDGE] vectorized
                                  BROADCAST [RS_442]
                                    PartitionCols:_col0
                                    Select Operator [SEL_441] (rows=155 width=4)
                                      Output:["_col0"]
                                      Filter Operator [FIL_440] (rows=155 width=92)
                                        predicate:(s_store_name = 'ese')
                                        TableScan [TS_124] (rows=1704 width=92)
                                          default@store,store,Tbl:COMPLETE,Col:COMPLETE,Output:["s_store_sk","s_store_name"]
                                <-Map 32 [BROADCAST_EDGE] vectorized
                                  BROADCAST [RS_445]
                                    PartitionCols:_col0
                                    Select Operator [SEL_444] (rows=1515 width=4)
                                      Output:["_col0"]
                                      Filter Operator [FIL_443] (rows=1515 width=12)
                                        predicate:((t_hour = 10) and (t_minute < 30))
                                        TableScan [TS_138] (rows=86400 width=12)
                                          default@time_dim,time_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["t_time_sk","t_hour","t_minute"]
                                <-Map 33 [BROADCAST_EDGE] vectorized
                                  BROADCAST [RS_448]
                                    PartitionCols:_col0
                                    Select Operator [SEL_447] (rows=1091 width=4)
                                      Output:["_col0"]
                                      Filter Operator [FIL_446] (rows=1091 width=12)
                                        predicate:(((hd_dep_count = 0) and (hd_vehicle_count <= 2)) or ((hd_dep_count = 1) and (hd_vehicle_count <= 3)) or ((hd_dep_count = 3) and (hd_vehicle_count <= 5)))
                                        TableScan [TS_141] (rows=7200 width=12)
                                          default@household_demographics,household_demographics,Tbl:COMPLETE,Col:COMPLETE,Output:["hd_demo_sk","hd_dep_count","hd_vehicle_count"]
                                <-Map 34 [BROADCAST_EDGE] vectorized
                                  BROADCAST [RS_451]
                                    PartitionCols:_col0
                                    Select Operator [SEL_450] (rows=155 width=4)
                                      Output:["_col0"]
                                      Filter Operator [FIL_449] (rows=155 width=92)
                                        predicate:(s_store_name = 'ese')
                                        TableScan [TS_151] (rows=1704 width=92)
                                          default@store,store,Tbl:COMPLETE,Col:COMPLETE,Output:["s_store_sk","s_store_name"]
                                <-Map 35 [BROADCAST_EDGE] vectorized
                                  BROADCAST [RS_454]
                                    PartitionCols:_col0
                                    Select Operator [SEL_453] (rows=1515 width=4)
                                      Output:["_col0"]
                                      Filter Operator [FIL_452] (rows=1515 width=12)
                                        predicate:((t_hour = 9) and (t_minute >= 30))
                                        TableScan [TS_165] (rows=86400 width=12)
                                          default@time_dim,time_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["t_time_sk","t_hour","t_minute"]
                                <-Map 36 [BROADCAST_EDGE] vectorized
                                  BROADCAST [RS_457]
                                    PartitionCols:_col0
                                    Select Operator [SEL_456] (rows=1091 width=4)
                                      Output:["_col0"]
                                      Filter Operator [FIL_455] (rows=1091 width=12)
                                        predicate:(((hd_dep_count = 0) and (hd_vehicle_count <= 2)) or ((hd_dep_count = 1) and (hd_vehicle_count <= 3)) or ((hd_dep_count = 3) and (hd_vehicle_count <= 5)))
                                        TableScan [TS_168] (rows=7200 width=12)
                                          default@household_demographics,household_demographics,Tbl:COMPLETE,Col:COMPLETE,Output:["hd_demo_sk","hd_dep_count","hd_vehicle_count"]
                                <-Map 37 [BROADCAST_EDGE] vectorized
                                  BROADCAST [RS_460]
                                    PartitionCols:_col0
                                    Select Operator [SEL_459] (rows=155 width=4)
                                      Output:["_col0"]
                                      Filter Operator [FIL_458] (rows=155 width=92)
                                        predicate:(s_store_name = 'ese')
                                        TableScan [TS_178] (rows=1704 width=92)
                                          default@store,store,Tbl:COMPLETE,Col:COMPLETE,Output:["s_store_sk","s_store_name"]
          <-Reducer 8 [XPROD_EDGE]
            XPROD_EDGE [RS_234]
              Merge Join Operator [MERGEJOIN_372] (rows=1 width=56)
                Conds:(Inner),Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"]
              <-Reducer 15 [XPROD_EDGE] vectorized
                XPROD_EDGE [RS_533]
                  Group By Operator [GBY_532] (rows=1 width=8)
                    Output:["_col0"],aggregations:["count(VALUE._col0)"]
                  <-Map 1 [CUSTOM_SIMPLE_EDGE] vectorized
                    PARTITION_ONLY_SHUFFLE [RS_518]
                      Group By Operator [GBY_510] (rows=1 width=8)
                        Output:["_col0"],aggregations:["count()"]
                        Map Join Operator [MAPJOIN_502] (rows=1806751 width=8)
                          Conds:SEL_494._col0=RS_460._col0(Inner),HybridGraceHashJoin:true
                        <- Please refer to the previous Map 37 [BROADCAST_EDGE]
                        <-Select Operator [SEL_494] (rows=2460956 width=0)
                            Output:["_col0"]
                            Map Join Operator [MAPJOIN_486] (rows=2460956 width=0)
                              Conds:MAPJOIN_478._col1=RS_457._col0(Inner),HybridGraceHashJoin:true,Output:["_col2"]
                            <- Please refer to the previous Map 36 [BROADCAST_EDGE]
                            <-Map Join Operator [MAPJOIN_478] (rows=16240953 width=0)
                                Conds:SEL_471._col0=RS_454._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2"]
                              <- Please refer to the previous Map 35 [BROADCAST_EDGE]
                                 Please refer to the previous Select Operator [SEL_471]
              <-Reducer 7 [XPROD_EDGE]
                XPROD_EDGE [RS_231]
                  Merge Join Operator [MERGEJOIN_371] (rows=1 width=48)
                    Conds:(Inner),Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                  <-Reducer 14 [XPROD_EDGE] vectorized
                    XPROD_EDGE [RS_531]
                      Group By Operator [GBY_530] (rows=1 width=8)
                        Output:["_col0"],aggregations:["count(VALUE._col0)"]
                      <-Map 1 [CUSTOM_SIMPLE_EDGE] vectorized
                        PARTITION_ONLY_SHUFFLE [RS_517]
                          Group By Operator [GBY_509] (rows=1 width=8)
                            Output:["_col0"],aggregations:["count()"]
                            Map Join Operator [MAPJOIN_501] (rows=1806751 width=8)
                              Conds:SEL_493._col0=RS_451._col0(Inner),HybridGraceHashJoin:true
                            <- Please refer to the previous Map 34 [BROADCAST_EDGE]
                            <-Select Operator [SEL_493] (rows=2460956 width=0)
                                Output:["_col0"]
                                Map Join Operator [MAPJOIN_485] (rows=2460956 width=0)
                                  Conds:MAPJOIN_477._col1=RS_448._col0(Inner),HybridGraceHashJoin:true,Output:["_col2"]
                                <- Please refer to the previous Map 33 [BROADCAST_EDGE]
                                <-Map Join Operator [MAPJOIN_477] (rows=16240953 width=0)
                                    Conds:SEL_471._col0=RS_445._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2"]
                                  <- Please refer to the previous Map 32 [BROADCAST_EDGE]
                                     Please refer to the previous Select Operator [SEL_471]
                  <-Reducer 6 [XPROD_EDGE]
                    XPROD_EDGE [RS_228]
                      Merge Join Operator [MERGEJOIN_370] (rows=1 width=40)
                        Conds:(Inner),Output:["_col0","_col1","_col2","_col3","_col4"]
                      <-Reducer 13 [XPROD_EDGE] vectorized
                        XPROD_EDGE [RS_529]
                          Group By Operator [GBY_528] (rows=1 width=8)
                            Output:["_col0"],aggregations:["count(VALUE._col0)"]
                          <-Map 1 [CUSTOM_SIMPLE_EDGE] vectorized
                            PARTITION_ONLY_SHUFFLE [RS_516]
                              Group By Operator [GBY_508] (rows=1 width=8)
                                Output:["_col0"],aggregations:["count()"]
                                Map Join Operator [MAPJOIN_500] (rows=1806751 width=8)
                                  Conds:SEL_492._col0=RS_442._col0(Inner),HybridGraceHashJoin:true
                                <- Please refer to the previous Map 31 [BROADCAST_EDGE]
                                <-Select Operator [SEL_492] (rows=2460956 width=0)
                                    Output:["_col0"]
                                    Map Join Operator [MAPJOIN_484] (rows=2460956 width=0)
                                      Conds:MAPJOIN_476._col1=RS_439._col0(Inner),HybridGraceHashJoin:true,Output:["_col2"]
                                    <- Please refer to the previous Map 30 [BROADCAST_EDGE]
                                    <-Map Join Operator [MAPJOIN_476] (rows=16240953 width=0)
                                        Conds:SEL_471._col0=RS_436._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2"]
                                      <- Please refer to the previous Map 29 [BROADCAST_EDGE]
                                         Please refer to the previous Select Operator [SEL_471]
                      <-Reducer 5 [XPROD_EDGE]
                        XPROD_EDGE [RS_225]
                          Merge Join Operator [MERGEJOIN_369] (rows=1 width=32)
                            Conds:(Inner),Output:["_col0","_col1","_col2","_col3"]
                          <-Reducer 12 [XPROD_EDGE] vectorized
                            XPROD_EDGE [RS_527]
                              Group By Operator [GBY_526] (rows=1 width=8)
                                Output:["_col0"],aggregations:["count(VALUE._col0)"]
                              <-Map 1 [CUSTOM_SIMPLE_EDGE] vectorized
                                PARTITION_ONLY_SHUFFLE [RS_515]
                                  Group By Operator [GBY_507] (rows=1 width=8)
                                    Output:["_col0"],aggregations:["count()"]
                                    Map Join Operator [MAPJOIN_499] (rows=1806751 width=8)
                                      Conds:SEL_491._col0=RS_433._col0(Inner),HybridGraceHashJoin:true
                                    <- Please refer to the previous Map 28 [BROADCAST_EDGE]
                                    <-Select Operator [SEL_491] (rows=2460956 width=0)
                                        Output:["_col0"]
                                        Map Join Operator [MAPJOIN_483] (rows=2460956 width=0)
                                          Conds:MAPJOIN_475._col1=RS_430._col0(Inner),HybridGraceHashJoin:true,Output:["_col2"]
                                        <- Please refer to the previous Map 27 [BROADCAST_EDGE]
                                        <-Map Join Operator [MAPJOIN_475] (rows=16240953 width=0)
                                            Conds:SEL_471._col0=RS_427._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2"]
                                          <- Please refer to the previous Map 26 [BROADCAST_EDGE]
                                             Please refer to the previous Select Operator [SEL_471]
                          <-Reducer 4 [XPROD_EDGE]
                            XPROD_EDGE [RS_222]
                              Merge Join Operator [MERGEJOIN_368] (rows=1 width=24)
                                Conds:(Inner),Output:["_col0","_col1","_col2"]
                              <-Reducer 11 [XPROD_EDGE] vectorized
                                XPROD_EDGE [RS_525]
                                  Group By Operator [GBY_524] (rows=1 width=8)
                                    Output:["_col0"],aggregations:["count(VALUE._col0)"]
                                  <-Map 1 [CUSTOM_SIMPLE_EDGE] vectorized
                                    PARTITION_ONLY_SHUFFLE [RS_514]
                                      Group By Operator [GBY_506] (rows=1 width=8)
                                        Output:["_col0"],aggregations:["count()"]
                                        Map Join Operator [MAPJOIN_498] (rows=1806751 width=8)
                                          Conds:SEL_490._col0=RS_424._col0(Inner),HybridGraceHashJoin:true
                                        <- Please refer to the previous Map 25 [BROADCAST_EDGE]
                                        <-Select Operator [SEL_490] (rows=2460956 width=0)
                                            Output:["_col0"]
                                            Map Join Operator [MAPJOIN_482] (rows=2460956 width=0)
                                              Conds:MAPJOIN_474._col1=RS_421._col0(Inner),HybridGraceHashJoin:true,Output:["_col2"]
                                            <- Please refer to the previous Map 24 [BROADCAST_EDGE]
                                            <-Map Join Operator [MAPJOIN_474] (rows=16240953 width=0)
                                                Conds:SEL_471._col0=RS_418._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2"]
                                              <- Please refer to the previous Map 23 [BROADCAST_EDGE]
                                                 Please refer to the previous Select Operator [SEL_471]
                              <-Reducer 3 [XPROD_EDGE]
                                XPROD_EDGE [RS_219]
                                  Merge Join Operator [MERGEJOIN_367] (rows=1 width=16)
                                    Conds:(Inner),Output:["_col0","_col1"]
                                  <-Reducer 10 [XPROD_EDGE] vectorized
                                    XPROD_EDGE [RS_523]
                                      Group By Operator [GBY_522] (rows=1 width=8)
                                        Output:["_col0"],aggregations:["count(VALUE._col0)"]
                                      <-Map 1 [CUSTOM_SIMPLE_EDGE] vectorized
                                        PARTITION_ONLY_SHUFFLE [RS_513]
                                          Group By Operator [GBY_505] (rows=1 width=8)
                                            Output:["_col0"],aggregations:["count()"]
                                            Map Join Operator [MAPJOIN_497] (rows=1806751 width=8)
                                              Conds:SEL_489._col0=RS_415._col0(Inner),HybridGraceHashJoin:true
                                            <- Please refer to the previous Map 22 [BROADCAST_EDGE]
                                            <-Select Operator [SEL_489] (rows=2460956 width=0)
                                                Output:["_col0"]
                                                Map Join Operator [MAPJOIN_481] (rows=2460956 width=0)
                                                  Conds:MAPJOIN_473._col1=RS_412._col0(Inner),HybridGraceHashJoin:true,Output:["_col2"]
                                                <- Please refer to the previous Map 21 [BROADCAST_EDGE]
                                                <-Map Join Operator [MAPJOIN_473] (rows=16240953 width=0)
                                                    Conds:SEL_471._col0=RS_409._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2"]
                                                  <- Please refer to the previous Map 20 [BROADCAST_EDGE]
                                                     Please refer to the previous Select Operator [SEL_471]
                                  <-Reducer 2 [XPROD_EDGE] vectorized
                                    XPROD_EDGE [RS_521]
                                      Group By Operator [GBY_520] (rows=1 width=8)
                                        Output:["_col0"],aggregations:["count(VALUE._col0)"]
                                      <-Map 1 [CUSTOM_SIMPLE_EDGE] vectorized
                                        PARTITION_ONLY_SHUFFLE [RS_512]
                                          Group By Operator [GBY_504] (rows=1 width=8)
                                            Output:["_col0"],aggregations:["count()"]
                                            Map Join Operator [MAPJOIN_496] (rows=1806751 width=8)
                                              Conds:SEL_488._col0=RS_406._col0(Inner),HybridGraceHashJoin:true
                                            <- Please refer to the previous Map 19 [BROADCAST_EDGE]
                                            <-Select Operator [SEL_488] (rows=2460956 width=0)
                                                Output:["_col0"]
                                                Map Join Operator [MAPJOIN_480] (rows=2460956 width=0)
                                                  Conds:MAPJOIN_472._col1=RS_403._col0(Inner),HybridGraceHashJoin:true,Output:["_col2"]
                                                <- Please refer to the previous Map 18 [BROADCAST_EDGE]
                                                <-Map Join Operator [MAPJOIN_472] (rows=16240953 width=0)
                                                    Conds:SEL_471._col0=RS_400._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2"]
                                                  <- Please refer to the previous Map 17 [BROADCAST_EDGE]
                                                     Please refer to the previous Select Operator [SEL_471]

