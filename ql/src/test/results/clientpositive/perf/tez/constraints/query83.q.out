PREHOOK: query: explain
with sr_items as
 (select i_item_id item_id,
        sum(sr_return_quantity) sr_item_qty
 from store_returns,
      item,
      date_dim
 where sr_item_sk = i_item_sk
 and   d_date    in 
	(select d_date
	from date_dim
	where d_week_seq in 
		(select d_week_seq
		from date_dim
	  where d_date in ('1998-01-02','1998-10-15','1998-11-10')))
 and   sr_returned_date_sk   = d_date_sk
 group by i_item_id),
 cr_items as
 (select i_item_id item_id,
        sum(cr_return_quantity) cr_item_qty
 from catalog_returns,
      item,
      date_dim
 where cr_item_sk = i_item_sk
 and   d_date    in 
	(select d_date
	from date_dim
	where d_week_seq in 
		(select d_week_seq
		from date_dim
	  where d_date in ('1998-01-02','1998-10-15','1998-11-10')))
 and   cr_returned_date_sk   = d_date_sk
 group by i_item_id),
 wr_items as
 (select i_item_id item_id,
        sum(wr_return_quantity) wr_item_qty
 from web_returns,
      item,
      date_dim
 where wr_item_sk = i_item_sk
 and   d_date    in 
	(select d_date
	from date_dim
	where d_week_seq in 
		(select d_week_seq
		from date_dim
		where d_date in ('1998-01-02','1998-10-15','1998-11-10')))
 and   wr_returned_date_sk   = d_date_sk
 group by i_item_id)
  select  sr_items.item_id
       ,sr_item_qty
       ,sr_item_qty/(sr_item_qty+cr_item_qty+wr_item_qty)/3.0 * 100 sr_dev
       ,cr_item_qty
       ,cr_item_qty/(sr_item_qty+cr_item_qty+wr_item_qty)/3.0 * 100 cr_dev
       ,wr_item_qty
       ,wr_item_qty/(sr_item_qty+cr_item_qty+wr_item_qty)/3.0 * 100 wr_dev
       ,(sr_item_qty+cr_item_qty+wr_item_qty)/3.0 average
 from sr_items
     ,cr_items
     ,wr_items
 where sr_items.item_id=cr_items.item_id
   and sr_items.item_id=wr_items.item_id 
 order by sr_items.item_id
         ,sr_item_qty
 limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@catalog_returns
PREHOOK: Input: default@date_dim
PREHOOK: Input: default@item
PREHOOK: Input: default@store_returns
PREHOOK: Input: default@web_returns
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain
with sr_items as
 (select i_item_id item_id,
        sum(sr_return_quantity) sr_item_qty
 from store_returns,
      item,
      date_dim
 where sr_item_sk = i_item_sk
 and   d_date    in 
	(select d_date
	from date_dim
	where d_week_seq in 
		(select d_week_seq
		from date_dim
	  where d_date in ('1998-01-02','1998-10-15','1998-11-10')))
 and   sr_returned_date_sk   = d_date_sk
 group by i_item_id),
 cr_items as
 (select i_item_id item_id,
        sum(cr_return_quantity) cr_item_qty
 from catalog_returns,
      item,
      date_dim
 where cr_item_sk = i_item_sk
 and   d_date    in 
	(select d_date
	from date_dim
	where d_week_seq in 
		(select d_week_seq
		from date_dim
	  where d_date in ('1998-01-02','1998-10-15','1998-11-10')))
 and   cr_returned_date_sk   = d_date_sk
 group by i_item_id),
 wr_items as
 (select i_item_id item_id,
        sum(wr_return_quantity) wr_item_qty
 from web_returns,
      item,
      date_dim
 where wr_item_sk = i_item_sk
 and   d_date    in 
	(select d_date
	from date_dim
	where d_week_seq in 
		(select d_week_seq
		from date_dim
		where d_date in ('1998-01-02','1998-10-15','1998-11-10')))
 and   wr_returned_date_sk   = d_date_sk
 group by i_item_id)
  select  sr_items.item_id
       ,sr_item_qty
       ,sr_item_qty/(sr_item_qty+cr_item_qty+wr_item_qty)/3.0 * 100 sr_dev
       ,cr_item_qty
       ,cr_item_qty/(sr_item_qty+cr_item_qty+wr_item_qty)/3.0 * 100 cr_dev
       ,wr_item_qty
       ,wr_item_qty/(sr_item_qty+cr_item_qty+wr_item_qty)/3.0 * 100 wr_dev
       ,(sr_item_qty+cr_item_qty+wr_item_qty)/3.0 average
 from sr_items
     ,cr_items
     ,wr_items
 where sr_items.item_id=cr_items.item_id
   and sr_items.item_id=wr_items.item_id 
 order by sr_items.item_id
         ,sr_item_qty
 limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@catalog_returns
POSTHOOK: Input: default@date_dim
POSTHOOK: Input: default@item
POSTHOOK: Input: default@store_returns
POSTHOOK: Input: default@web_returns
POSTHOOK: Output: hdfs://### HDFS PATH ###
Plan optimized by CBO.

Vertex dependency in root stage
Map 10 <- Reducer 12 (BROADCAST_EDGE)
Map 11 <- Map 13 (BROADCAST_EDGE)
Reducer 12 <- Map 11 (SIMPLE_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 10 (BROADCAST_EDGE), Map 4 (SIMPLE_EDGE)
Reducer 3 <- Reducer 2 (SIMPLE_EDGE)
Reducer 5 <- Map 10 (BROADCAST_EDGE), Map 14 (SIMPLE_EDGE), Map 4 (SIMPLE_EDGE)
Reducer 6 <- Reducer 3 (BROADCAST_EDGE), Reducer 5 (SIMPLE_EDGE), Reducer 9 (BROADCAST_EDGE)
Reducer 7 <- Reducer 6 (SIMPLE_EDGE)
Reducer 8 <- Map 10 (BROADCAST_EDGE), Map 15 (SIMPLE_EDGE), Map 4 (SIMPLE_EDGE)
Reducer 9 <- Reducer 8 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 7 vectorized
      File Output Operator [FS_269]
        Limit [LIM_268] (rows=100 width=260)
          Number of rows:100
          Select Operator [SEL_267] (rows=46858 width=260)
            Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
          <-Reducer 6 [SIMPLE_EDGE] vectorized
            SHUFFLE [RS_266]
              Select Operator [SEL_265] (rows=46858 width=260)
                Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
                Map Join Operator [MAPJOIN_264] (rows=46858 width=148)
                  Conds:MAPJOIN_263._col0=RS_260._col0(Inner),HybridGraceHashJoin:true,Output:["_col0","_col1","_col2","_col4","_col5","_col7","_col8"]
                <-Reducer 9 [BROADCAST_EDGE] vectorized
                  BROADCAST [RS_260]
                    PartitionCols:_col0
                    Select Operator [SEL_259] (rows=46858 width=116)
                      Output:["_col0","_col1","_col2"]
                      Group By Operator [GBY_258] (rows=46858 width=108)
                        Output:["_col0","_col1"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0
                      <-Reducer 8 [SIMPLE_EDGE]
                        SHUFFLE [RS_114]
                          PartitionCols:_col0
                          Group By Operator [GBY_113] (rows=46858 width=108)
                            Output:["_col0","_col1"],aggregations:["sum(_col2)"],keys:_col4
                            Map Join Operator [MAPJOIN_215] (rows=2073157 width=102)
                              Conds:MERGEJOIN_206._col0=RS_245._col0(Inner),HybridGraceHashJoin:true,Output:["_col2","_col4"]
                            <-Map 10 [BROADCAST_EDGE] vectorized
                              BROADCAST [RS_245]
                                PartitionCols:_col0
                                Map Join Operator [MAPJOIN_242] (rows=1827 width=4)
                                  Conds:SEL_241._col1=RS_239._col0(Inner),HybridGraceHashJoin:true,Output:["_col0"]
                                <-Reducer 12 [BROADCAST_EDGE] vectorized
                                  BROADCAST [RS_239]
                                    PartitionCols:_col0
                                    Group By Operator [GBY_238] (rows=1827 width=94)
                                      Output:["_col0"],keys:KEY._col0
                                    <-Map 11 [SIMPLE_EDGE] vectorized
                                      SHUFFLE [RS_237]
                                        PartitionCols:_col0
                                        Group By Operator [GBY_236] (rows=1827 width=94)
                                          Output:["_col0"],keys:_col0
                                          Map Join Operator [MAPJOIN_235] (rows=3654 width=94)
                                            Conds:SEL_234._col1=RS_232._col0(Left Semi),HybridGraceHashJoin:true,Output:["_col0"]
                                          <-Map 13 [BROADCAST_EDGE] vectorized
                                            BROADCAST [RS_232]
                                              PartitionCols:_col0
                                              Group By Operator [GBY_231] (rows=658 width=4)
                                                Output:["_col0"],keys:_col0
                                                Select Operator [SEL_230] (rows=3652 width=4)
                                                  Output:["_col0"]
                                                  Filter Operator [FIL_229] (rows=3652 width=98)
                                                    predicate:((d_date) IN ('1998-01-02', '1998-10-15', '1998-11-10') and d_week_seq is not null)
                                                    TableScan [TS_11] (rows=73049 width=98)
                                                      default@date_dim,date_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date","d_week_seq"]
                                          <-Select Operator [SEL_234] (rows=73049 width=98)
                                              Output:["_col0","_col1"]
                                              Filter Operator [FIL_233] (rows=73049 width=98)
                                                predicate:(d_date is not null and d_week_seq is not null)
                                                TableScan [TS_8] (rows=73049 width=98)
                                                  default@date_dim,date_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date","d_week_seq"]
                                <-Select Operator [SEL_241] (rows=73049 width=98)
                                    Output:["_col0","_col1"]
                                    Filter Operator [FIL_240] (rows=73049 width=98)
                                      predicate:d_date is not null
                                      TableScan [TS_5] (rows=73049 width=98)
                                        default@date_dim,date_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_date"]
                            <-Merge Join Operator [MERGEJOIN_206] (rows=13749816 width=107)
                                Conds:RS_257._col1=RS_228._col0(Inner),Output:["_col0","_col2","_col4"]
                              <-Map 4 [SIMPLE_EDGE] vectorized
                                SHUFFLE [RS_228]
                                  PartitionCols:_col0
                                  Select Operator [SEL_225] (rows=462000 width=104)
                                    Output:["_col0","_col1"]
                                    TableScan [TS_3] (rows=462000 width=104)
                                      default@item,item,Tbl:COMPLETE,Col:COMPLETE,Output:["i_item_sk","i_item_id"]
                              <-Map 15 [SIMPLE_EDGE] vectorized
                                SHUFFLE [RS_257]
                                  PartitionCols:_col1
                                  Select Operator [SEL_256] (rows=13749816 width=11)
                                    Output:["_col0","_col1","_col2"]
                                    Filter Operator [FIL_255] (rows=13749816 width=11)
                                      predicate:wr_returned_date_sk is not null
                                      TableScan [TS_78] (rows=14398467 width=11)
                                        default@web_returns,web_returns,Tbl:COMPLETE,Col:COMPLETE,Output:["wr_returned_date_sk","wr_item_sk","wr_return_quantity"]
                <-Map Join Operator [MAPJOIN_263] (rows=48618 width=132)
                    Conds:RS_254._col0=SEL_262._col0(Inner),HybridGraceHashJoin:true,Output:["_col0","_col1","_col2","_col4","_col5"]
                  <-Reducer 3 [BROADCAST_EDGE] vectorized
                    BROADCAST [RS_254]
                      PartitionCols:_col0
                      Select Operator [SEL_253] (rows=48618 width=116)
                        Output:["_col0","_col1","_col2"]
                        Group By Operator [GBY_252] (rows=48618 width=108)
                          Output:["_col0","_col1"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0
                        <-Reducer 2 [SIMPLE_EDGE]
                          SHUFFLE [RS_36]
                            PartitionCols:_col0
                            Group By Operator [GBY_35] (rows=97236 width=108)
                              Output:["_col0","_col1"],aggregations:["sum(_col2)"],keys:_col4
                              Map Join Operator [MAPJOIN_213] (rows=4505327 width=103)
                                Conds:MERGEJOIN_204._col0=RS_243._col0(Inner),HybridGraceHashJoin:true,Output:["_col2","_col4"]
                              <-Map 10 [BROADCAST_EDGE] vectorized
                                BROADCAST [RS_243]
                                  PartitionCols:_col0
                                   Please refer to the previous Map Join Operator [MAPJOIN_242]
                              <-Merge Join Operator [MERGEJOIN_204] (rows=28798881 width=107)
                                  Conds:RS_251._col1=RS_226._col0(Inner),Output:["_col0","_col2","_col4"]
                                <-Map 4 [SIMPLE_EDGE] vectorized
                                  SHUFFLE [RS_226]
                                    PartitionCols:_col0
                                     Please refer to the previous Select Operator [SEL_225]
                                <-Map 1 [SIMPLE_EDGE] vectorized
                                  SHUFFLE [RS_251]
                                    PartitionCols:_col1
                                    Select Operator [SEL_250] (rows=28798881 width=11)
                                      Output:["_col0","_col1","_col2"]
                                      Filter Operator [FIL_249] (rows=28798881 width=11)
                                        predicate:cr_returned_date_sk is not null
                                        TableScan [TS_0] (rows=28798881 width=11)
                                          default@catalog_returns,catalog_returns,Tbl:COMPLETE,Col:COMPLETE,Output:["cr_returned_date_sk","cr_item_sk","cr_return_quantity"]
                  <-Select Operator [SEL_262] (rows=51071 width=116)
                      Output:["_col0","_col1","_col2"]
                      Group By Operator [GBY_261] (rows=51071 width=108)
                        Output:["_col0","_col1"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0
                      <-Reducer 5 [SIMPLE_EDGE]
                        SHUFFLE [RS_75]
                          PartitionCols:_col0
                          Group By Operator [GBY_74] (rows=204284 width=108)
                            Output:["_col0","_col1"],aggregations:["sum(_col2)"],keys:_col4
                            Map Join Operator [MAPJOIN_214] (rows=9133323 width=103)
                              Conds:MERGEJOIN_205._col0=RS_244._col0(Inner),HybridGraceHashJoin:true,Output:["_col2","_col4"]
                            <-Map 10 [BROADCAST_EDGE] vectorized
                              BROADCAST [RS_244]
                                PartitionCols:_col0
                                 Please refer to the previous Map Join Operator [MAPJOIN_242]
                            <-Merge Join Operator [MERGEJOIN_205] (rows=55578005 width=107)
                                Conds:RS_248._col1=RS_227._col0(Inner),Output:["_col0","_col2","_col4"]
                              <-Map 4 [SIMPLE_EDGE] vectorized
                                SHUFFLE [RS_227]
                                  PartitionCols:_col0
                                   Please refer to the previous Select Operator [SEL_225]
                              <-Map 14 [SIMPLE_EDGE] vectorized
                                SHUFFLE [RS_248]
                                  PartitionCols:_col1
                                  Select Operator [SEL_247] (rows=55578005 width=11)
                                    Output:["_col0","_col1","_col2"]
                                    Filter Operator [FIL_246] (rows=55578005 width=11)
                                      predicate:sr_returned_date_sk is not null
                                      TableScan [TS_39] (rows=57591150 width=11)
                                        default@store_returns,store_returns,Tbl:COMPLETE,Col:COMPLETE,Output:["sr_returned_date_sk","sr_item_sk","sr_return_quantity"]

