PREHOOK: query: explain
with customer_total_return as
(select sr_customer_sk as ctr_customer_sk
,sr_store_sk as ctr_store_sk
,sum(SR_FEE) as ctr_total_return
from store_returns
,date_dim
where sr_returned_date_sk = d_date_sk
and d_year =2000
group by sr_customer_sk
,sr_store_sk)
 select  c_customer_id
from customer_total_return ctr1
,store
,customer
where ctr1.ctr_total_return > (select avg(ctr_total_return)*1.2
from customer_total_return ctr2
where ctr1.ctr_store_sk = ctr2.ctr_store_sk)
and s_store_sk = ctr1.ctr_store_sk
and s_state = 'NM'
and ctr1.ctr_customer_sk = c_customer_sk
order by c_customer_id
limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@customer
PREHOOK: Input: default@date_dim
PREHOOK: Input: default@store
PREHOOK: Input: default@store_returns
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain
with customer_total_return as
(select sr_customer_sk as ctr_customer_sk
,sr_store_sk as ctr_store_sk
,sum(SR_FEE) as ctr_total_return
from store_returns
,date_dim
where sr_returned_date_sk = d_date_sk
and d_year =2000
group by sr_customer_sk
,sr_store_sk)
 select  c_customer_id
from customer_total_return ctr1
,store
,customer
where ctr1.ctr_total_return > (select avg(ctr_total_return)*1.2
from customer_total_return ctr2
where ctr1.ctr_store_sk = ctr2.ctr_store_sk)
and s_store_sk = ctr1.ctr_store_sk
and s_state = 'NM'
and ctr1.ctr_customer_sk = c_customer_sk
order by c_customer_id
limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@customer
POSTHOOK: Input: default@date_dim
POSTHOOK: Input: default@store
POSTHOOK: Input: default@store_returns
POSTHOOK: Output: hdfs://### HDFS PATH ###
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 10 (SIMPLE_EDGE)
Reducer 3 <- Reducer 2 (SIMPLE_EDGE)
Reducer 4 <- Map 11 (SIMPLE_EDGE), Reducer 3 (SIMPLE_EDGE)
Reducer 5 <- Map 12 (SIMPLE_EDGE), Reducer 4 (SIMPLE_EDGE)
Reducer 6 <- Reducer 5 (SIMPLE_EDGE), Reducer 9 (SIMPLE_EDGE)
Reducer 7 <- Reducer 6 (SIMPLE_EDGE)
Reducer 8 <- Map 1 (SIMPLE_EDGE), Map 10 (SIMPLE_EDGE)
Reducer 9 <- Reducer 8 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 7 vectorized
      File Output Operator [FS_106]
        Limit [LIM_105] (rows=100 width=100)
          Number of rows:100
          Select Operator [SEL_104] (rows=735109 width=100)
            Output:["_col0"]
          <-Reducer 6 [SIMPLE_EDGE]
            SHUFFLE [RS_49]
              Select Operator [SEL_48] (rows=735109 width=100)
                Output:["_col0"]
                Filter Operator [FIL_47] (rows=735109 width=324)
                  predicate:(_col2 > _col6)
                  Merge Join Operator [MERGEJOIN_80] (rows=2205329 width=324)
                    Conds:RS_44._col1=RS_103._col1(Inner),Output:["_col2","_col5","_col6"]
                  <-Reducer 5 [SIMPLE_EDGE]
                    SHUFFLE [RS_44]
                      PartitionCols:_col1
                      Merge Join Operator [MERGEJOIN_78] (rows=2129284 width=213)
                        Conds:RS_41._col0=RS_98._col0(Inner),Output:["_col1","_col2","_col5"]
                      <-Map 12 [SIMPLE_EDGE] vectorized
                        SHUFFLE [RS_98]
                          PartitionCols:_col0
                          Select Operator [SEL_97] (rows=80000000 width=104)
                            Output:["_col0","_col1"]
                            TableScan [TS_17] (rows=80000000 width=104)
                              default@customer,customer,Tbl:COMPLETE,Col:COMPLETE,Output:["c_customer_sk","c_customer_id"]
                      <-Reducer 4 [SIMPLE_EDGE]
                        SHUFFLE [RS_41]
                          PartitionCols:_col0
                          Merge Join Operator [MERGEJOIN_77] (rows=2129284 width=114)
                            Conds:RS_93._col1=RS_96._col0(Inner),Output:["_col0","_col1","_col2"]
                          <-Map 11 [SIMPLE_EDGE] vectorized
                            SHUFFLE [RS_96]
                              PartitionCols:_col0
                              Select Operator [SEL_95] (rows=35 width=4)
                                Output:["_col0"]
                                Filter Operator [FIL_94] (rows=35 width=90)
                                  predicate:(s_state = 'NM')
                                  TableScan [TS_14] (rows=1704 width=90)
                                    default@store,store,Tbl:COMPLETE,Col:COMPLETE,Output:["s_store_sk","s_state"]
                          <-Reducer 3 [SIMPLE_EDGE] vectorized
                            SHUFFLE [RS_93]
                              PartitionCols:_col1
                              Select Operator [SEL_92] (rows=12844075 width=119)
                                Output:["_col0","_col1","_col2"]
                                Group By Operator [GBY_91] (rows=12844075 width=119)
                                  Output:["_col0","_col1","_col2"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0, KEY._col1
                                <-Reducer 2 [SIMPLE_EDGE]
                                  SHUFFLE [RS_11]
                                    PartitionCols:_col0, _col1
                                    Group By Operator [GBY_10] (rows=16855704 width=119)
                                      Output:["_col0","_col1","_col2"],aggregations:["sum(_col3)"],keys:_col2, _col1
                                      Merge Join Operator [MERGEJOIN_76] (rows=16855704 width=107)
                                        Conds:RS_85._col0=RS_89._col0(Inner),Output:["_col1","_col2","_col3"]
                                      <-Map 1 [SIMPLE_EDGE] vectorized
                                        SHUFFLE [RS_85]
                                          PartitionCols:_col0
                                          Select Operator [SEL_83] (rows=51757026 width=119)
                                            Output:["_col0","_col1","_col2","_col3"]
                                            Filter Operator [FIL_81] (rows=51757026 width=119)
                                              predicate:(sr_customer_sk is not null and sr_returned_date_sk is not null and sr_store_sk is not null)
                                              TableScan [TS_0] (rows=57591150 width=119)
                                                default@store_returns,store_returns,Tbl:COMPLETE,Col:COMPLETE,Output:["sr_returned_date_sk","sr_customer_sk","sr_store_sk","sr_fee"]
                                      <-Map 10 [SIMPLE_EDGE] vectorized
                                        SHUFFLE [RS_89]
                                          PartitionCols:_col0
                                          Select Operator [SEL_88] (rows=652 width=4)
                                            Output:["_col0"]
                                            Filter Operator [FIL_87] (rows=652 width=8)
                                              predicate:(d_year = 2000)
                                              TableScan [TS_3] (rows=73049 width=8)
                                                default@date_dim,date_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_year"]
                  <-Reducer 9 [SIMPLE_EDGE] vectorized
                    SHUFFLE [RS_103]
                      PartitionCols:_col1
                      Select Operator [SEL_102] (rows=29 width=115)
                        Output:["_col0","_col1"]
                        Group By Operator [GBY_101] (rows=29 width=123)
                          Output:["_col0","_col1","_col2"],aggregations:["sum(_col2)","count(_col2)"],keys:_col1
                          Select Operator [SEL_100] (rows=13369812 width=119)
                            Output:["_col1","_col2"]
                            Group By Operator [GBY_99] (rows=13369812 width=119)
                              Output:["_col0","_col1","_col2"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0, KEY._col1
                            <-Reducer 8 [SIMPLE_EDGE]
                              SHUFFLE [RS_30]
                                PartitionCols:_col0
                                Group By Operator [GBY_29] (rows=17467258 width=119)
                                  Output:["_col0","_col1","_col2"],aggregations:["sum(_col3)"],keys:_col2, _col1
                                  Merge Join Operator [MERGEJOIN_79] (rows=17467258 width=107)
                                    Conds:RS_86._col0=RS_90._col0(Inner),Output:["_col1","_col2","_col3"]
                                  <-Map 1 [SIMPLE_EDGE] vectorized
                                    SHUFFLE [RS_86]
                                      PartitionCols:_col0
                                      Select Operator [SEL_84] (rows=53634860 width=119)
                                        Output:["_col0","_col1","_col2","_col3"]
                                        Filter Operator [FIL_82] (rows=53634860 width=119)
                                          predicate:(sr_returned_date_sk is not null and sr_store_sk is not null)
                                           Please refer to the previous TableScan [TS_0]
                                  <-Map 10 [SIMPLE_EDGE] vectorized
                                    SHUFFLE [RS_90]
                                      PartitionCols:_col0
                                       Please refer to the previous Select Operator [SEL_88]

