PREHOOK: query: explain
select  substr(r_reason_desc,1,20)
       ,avg(ws_quantity)
       ,avg(wr_refunded_cash)
       ,avg(wr_fee)
 from web_sales, web_returns, web_page, customer_demographics cd1,
      customer_demographics cd2, customer_address, date_dim, reason 
 where ws_web_page_sk = wp_web_page_sk
   and ws_item_sk = wr_item_sk
   and ws_order_number = wr_order_number
   and ws_sold_date_sk = d_date_sk and d_year = 1998
   and cd1.cd_demo_sk = wr_refunded_cdemo_sk 
   and cd2.cd_demo_sk = wr_returning_cdemo_sk
   and ca_address_sk = wr_refunded_addr_sk
   and r_reason_sk = wr_reason_sk
   and
   (
    (
     cd1.cd_marital_status = 'M'
     and
     cd1.cd_marital_status = cd2.cd_marital_status
     and
     cd1.cd_education_status = '4 yr Degree'
     and 
     cd1.cd_education_status = cd2.cd_education_status
     and
     ws_sales_price between 100.00 and 150.00
    )
   or
    (
     cd1.cd_marital_status = 'D'
     and
     cd1.cd_marital_status = cd2.cd_marital_status
     and
     cd1.cd_education_status = 'Primary' 
     and
     cd1.cd_education_status = cd2.cd_education_status
     and
     ws_sales_price between 50.00 and 100.00
    )
   or
    (
     cd1.cd_marital_status = 'U'
     and
     cd1.cd_marital_status = cd2.cd_marital_status
     and
     cd1.cd_education_status = 'Advanced Degree'
     and
     cd1.cd_education_status = cd2.cd_education_status
     and
     ws_sales_price between 150.00 and 200.00
    )
   )
   and
   (
    (
     ca_country = 'United States'
     and
     ca_state in ('KY', 'GA', 'NM')
     and ws_net_profit between 100 and 200  
    )
    or
    (
     ca_country = 'United States'
     and
     ca_state in ('MT', 'OR', 'IN')
     and ws_net_profit between 150 and 300  
    )
    or
    (
     ca_country = 'United States'
     and
     ca_state in ('WI', 'MO', 'WV')
     and ws_net_profit between 50 and 250  
    )
   )
group by r_reason_desc
order by substr(r_reason_desc,1,20)
        ,avg(ws_quantity)
        ,avg(wr_refunded_cash)
        ,avg(wr_fee)
limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@customer_address
PREHOOK: Input: default@customer_demographics
PREHOOK: Input: default@date_dim
PREHOOK: Input: default@reason
PREHOOK: Input: default@web_page
PREHOOK: Input: default@web_returns
PREHOOK: Input: default@web_sales
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain
select  substr(r_reason_desc,1,20)
       ,avg(ws_quantity)
       ,avg(wr_refunded_cash)
       ,avg(wr_fee)
 from web_sales, web_returns, web_page, customer_demographics cd1,
      customer_demographics cd2, customer_address, date_dim, reason 
 where ws_web_page_sk = wp_web_page_sk
   and ws_item_sk = wr_item_sk
   and ws_order_number = wr_order_number
   and ws_sold_date_sk = d_date_sk and d_year = 1998
   and cd1.cd_demo_sk = wr_refunded_cdemo_sk 
   and cd2.cd_demo_sk = wr_returning_cdemo_sk
   and ca_address_sk = wr_refunded_addr_sk
   and r_reason_sk = wr_reason_sk
   and
   (
    (
     cd1.cd_marital_status = 'M'
     and
     cd1.cd_marital_status = cd2.cd_marital_status
     and
     cd1.cd_education_status = '4 yr Degree'
     and 
     cd1.cd_education_status = cd2.cd_education_status
     and
     ws_sales_price between 100.00 and 150.00
    )
   or
    (
     cd1.cd_marital_status = 'D'
     and
     cd1.cd_marital_status = cd2.cd_marital_status
     and
     cd1.cd_education_status = 'Primary' 
     and
     cd1.cd_education_status = cd2.cd_education_status
     and
     ws_sales_price between 50.00 and 100.00
    )
   or
    (
     cd1.cd_marital_status = 'U'
     and
     cd1.cd_marital_status = cd2.cd_marital_status
     and
     cd1.cd_education_status = 'Advanced Degree'
     and
     cd1.cd_education_status = cd2.cd_education_status
     and
     ws_sales_price between 150.00 and 200.00
    )
   )
   and
   (
    (
     ca_country = 'United States'
     and
     ca_state in ('KY', 'GA', 'NM')
     and ws_net_profit between 100 and 200  
    )
    or
    (
     ca_country = 'United States'
     and
     ca_state in ('MT', 'OR', 'IN')
     and ws_net_profit between 150 and 300  
    )
    or
    (
     ca_country = 'United States'
     and
     ca_state in ('WI', 'MO', 'WV')
     and ws_net_profit between 50 and 250  
    )
   )
group by r_reason_desc
order by substr(r_reason_desc,1,20)
        ,avg(ws_quantity)
        ,avg(wr_refunded_cash)
        ,avg(wr_fee)
limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@customer_address
POSTHOOK: Input: default@customer_demographics
POSTHOOK: Input: default@date_dim
POSTHOOK: Input: default@reason
POSTHOOK: Input: default@web_page
POSTHOOK: Input: default@web_returns
POSTHOOK: Input: default@web_sales
POSTHOOK: Output: hdfs://### HDFS PATH ###
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 3 <- Map 2 (SIMPLE_EDGE), Reducer 7 (SIMPLE_EDGE)
Reducer 4 <- Map 1 (BROADCAST_EDGE), Map 11 (SIMPLE_EDGE), Map 12 (BROADCAST_EDGE), Reducer 3 (SIMPLE_EDGE)
Reducer 5 <- Reducer 4 (SIMPLE_EDGE)
Reducer 6 <- Reducer 5 (SIMPLE_EDGE)
Reducer 7 <- Map 2 (SIMPLE_EDGE), Reducer 9 (SIMPLE_EDGE)
Reducer 9 <- Map 10 (SIMPLE_EDGE), Map 8 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 6 vectorized
      File Output Operator [FS_118]
        Limit [LIM_117] (rows=72 width=832)
          Number of rows:100
          Select Operator [SEL_116] (rows=72 width=832)
            Output:["_col0","_col1","_col2","_col3"]
          <-Reducer 5 [SIMPLE_EDGE] vectorized
            SHUFFLE [RS_115]
              Select Operator [SEL_114] (rows=72 width=832)
                Output:["_col4","_col5","_col6","_col7"]
                Group By Operator [GBY_113] (rows=72 width=353)
                  Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"],aggregations:["sum(VALUE._col0)","count(VALUE._col1)","sum(VALUE._col2)","count(VALUE._col3)","sum(VALUE._col4)","count(VALUE._col5)"],keys:KEY._col0
                <-Reducer 4 [SIMPLE_EDGE]
                  SHUFFLE [RS_44]
                    PartitionCols:_col0
                    Group By Operator [GBY_43] (rows=72 width=353)
                      Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"],aggregations:["sum(_col2)","count(_col2)","sum(_col5)","count(_col5)","sum(_col4)","count(_col4)"],keys:_col7
                      Map Join Operator [MAPJOIN_91] (rows=16740 width=100)
                        Conds:MAPJOIN_90._col3=RS_112._col0(Inner),HybridGraceHashJoin:true,Output:["_col2","_col4","_col5","_col7"]
                      <-Map 12 [BROADCAST_EDGE] vectorized
                        BROADCAST [RS_112]
                          PartitionCols:_col0
                          Select Operator [SEL_111] (rows=72 width=101)
                            Output:["_col0","_col1"]
                            TableScan [TS_34] (rows=72 width=101)
                              default@reason,reason,Tbl:COMPLETE,Col:COMPLETE,Output:["r_reason_sk","r_reason_desc"]
                      <-Map Join Operator [MAPJOIN_90] (rows=16740 width=3)
                          Conds:RS_107._col0=SEL_33._col0(Inner),HybridGraceHashJoin:true,Output:["_col2","_col3","_col4","_col5"]
                        <-Map 1 [BROADCAST_EDGE] vectorized
                          BROADCAST [RS_107]
                            PartitionCols:_col0
                            Select Operator [SEL_106] (rows=652 width=4)
                              Output:["_col0"]
                              Filter Operator [FIL_105] (rows=652 width=8)
                                predicate:(d_year = 1998)
                                TableScan [TS_0] (rows=73049 width=8)
                                  default@date_dim,date_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_year"]
                        <-Select Operator [SEL_33] (rows=46881 width=7)
                            Output:["_col0","_col1","_col2","_col3","_col4"]
                            Filter Operator [FIL_32] (rows=46881 width=31)
                              predicate:((_col16 and _col12) or (_col17 and _col13) or (_col18 and _col14))
                              Merge Join Operator [MERGEJOIN_89] (rows=62510 width=31)
                                Conds:RS_29._col5=RS_110._col0(Inner),Output:["_col3","_col4","_col7","_col8","_col9","_col12","_col13","_col14","_col16","_col17","_col18"]
                              <-Map 11 [SIMPLE_EDGE] vectorized
                                SHUFFLE [RS_110]
                                  PartitionCols:_col0
                                  Select Operator [SEL_109] (rows=3529412 width=16)
                                    Output:["_col0","_col1","_col2","_col3"]
                                    Filter Operator [FIL_108] (rows=3529412 width=187)
                                      predicate:((ca_country = 'United States') and (ca_state) IN ('KY', 'GA', 'NM', 'MT', 'OR', 'IN', 'WI', 'MO', 'WV'))
                                      TableScan [TS_23] (rows=40000000 width=187)
                                        default@customer_address,customer_address,Tbl:COMPLETE,Col:COMPLETE,Output:["ca_address_sk","ca_state","ca_country"]
                              <-Reducer 3 [SIMPLE_EDGE]
                                SHUFFLE [RS_29]
                                  PartitionCols:_col5
                                  Merge Join Operator [MERGEJOIN_88] (rows=708441 width=185)
                                    Conds:RS_97._col0, _col1, _col2=RS_27._col3, _col7, _col8(Inner),Output:["_col3","_col4","_col5","_col7","_col8","_col9","_col12","_col13","_col14"]
                                  <-Map 2 [SIMPLE_EDGE] vectorized
                                    SHUFFLE [RS_97]
                                      PartitionCols:_col0, _col1, _col2
                                      Select Operator [SEL_95] (rows=265971 width=183)
                                        Output:["_col0","_col1","_col2"]
                                        Filter Operator [FIL_94] (rows=265971 width=183)
                                          predicate:((cd_education_status) IN ('4 yr Degree', 'Primary', 'Advanced Degree') and (cd_marital_status) IN ('M', 'D', 'U'))
                                          TableScan [TS_3] (rows=1861800 width=183)
                                            default@customer_demographics,cd2,Tbl:COMPLETE,Col:COMPLETE,Output:["cd_demo_sk","cd_marital_status","cd_education_status"]
                                  <-Reducer 7 [SIMPLE_EDGE]
                                    SHUFFLE [RS_27]
                                      PartitionCols:_col3, _col7, _col8
                                      Select Operator [SEL_22] (rows=708441 width=367)
                                        Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8","_col9","_col10","_col11"]
                                        Filter Operator [FIL_21] (rows=708441 width=403)
                                          predicate:((_col21 and _col22 and _col15) or (_col23 and _col24 and _col16) or (_col25 and _col26 and _col17))
                                          Merge Join Operator [MERGEJOIN_87] (rows=1889180 width=403)
                                            Conds:RS_18._col1=RS_98._col0(Inner),Output:["_col2","_col3","_col4","_col6","_col7","_col8","_col11","_col12","_col13","_col14","_col15","_col16","_col17","_col19","_col20","_col21","_col22","_col23","_col24","_col25","_col26"]
                                          <-Map 2 [SIMPLE_EDGE] vectorized
                                            SHUFFLE [RS_98]
                                              PartitionCols:_col0
                                              Select Operator [SEL_96] (rows=265971 width=207)
                                                Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8"]
                                                 Please refer to the previous Filter Operator [FIL_94]
                                          <-Reducer 9 [SIMPLE_EDGE]
                                            SHUFFLE [RS_18]
                                              PartitionCols:_col1
                                              Merge Join Operator [MERGEJOIN_86] (rows=13039884 width=262)
                                                Conds:RS_101._col0, _col5=RS_104._col1, _col2(Inner),Output:["_col1","_col2","_col3","_col4","_col6","_col7","_col8","_col11","_col12","_col13","_col14","_col15","_col16","_col17"]
                                              <-Map 10 [SIMPLE_EDGE] vectorized
                                                SHUFFLE [RS_104]
                                                  PartitionCols:_col1, _col2
                                                  Select Operator [SEL_103] (rows=15992347 width=39)
                                                    Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8","_col9"]
                                                    Filter Operator [FIL_102] (rows=15992347 width=243)
                                                      predicate:((ws_net_profit BETWEEN 100 AND 200 or ws_net_profit BETWEEN 150 AND 300 or ws_net_profit BETWEEN 50 AND 250) and (ws_sales_price BETWEEN 100 AND 150 or ws_sales_price BETWEEN 50 AND 100 or ws_sales_price BETWEEN 150 AND 200) and ws_sold_date_sk is not null and ws_web_page_sk is not null)
                                                      TableScan [TS_9] (rows=144002668 width=243)
                                                        default@web_sales,web_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["ws_sold_date_sk","ws_item_sk","ws_web_page_sk","ws_order_number","ws_quantity","ws_sales_price","ws_net_profit"]
                                              <-Map 8 [SIMPLE_EDGE] vectorized
                                                SHUFFLE [RS_101]
                                                  PartitionCols:_col0, _col5
                                                  Select Operator [SEL_100] (rows=11975292 width=237)
                                                    Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
                                                    Filter Operator [FIL_99] (rows=11975292 width=237)
                                                      predicate:(wr_reason_sk is not null and wr_refunded_addr_sk is not null and wr_refunded_cdemo_sk is not null and wr_returning_cdemo_sk is not null)
                                                      TableScan [TS_6] (rows=14398467 width=237)
                                                        default@web_returns,web_returns,Tbl:COMPLETE,Col:COMPLETE,Output:["wr_item_sk","wr_refunded_cdemo_sk","wr_refunded_addr_sk","wr_returning_cdemo_sk","wr_reason_sk","wr_order_number","wr_fee","wr_refunded_cash"]

