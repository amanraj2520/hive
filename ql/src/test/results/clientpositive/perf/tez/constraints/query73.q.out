PREHOOK: query: explain
select c_last_name
       ,c_first_name
       ,c_salutation
       ,c_preferred_cust_flag 
       ,ss_ticket_number
       ,cnt from
   (select ss_ticket_number
          ,ss_customer_sk
          ,count(*) cnt
    from store_sales,date_dim,store,household_demographics
    where store_sales.ss_sold_date_sk = date_dim.d_date_sk
    and store_sales.ss_store_sk = store.s_store_sk  
    and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
    and date_dim.d_dom between 1 and 2 
    and (household_demographics.hd_buy_potential = '>10000' or
         household_demographics.hd_buy_potential = 'unknown')
    and household_demographics.hd_vehicle_count > 0
    and case when household_demographics.hd_vehicle_count > 0 then 
             household_demographics.hd_dep_count/ household_demographics.hd_vehicle_count else null end > 1
    and date_dim.d_year in (2000,2000+1,2000+2)
    and store.s_county in ('Mobile County','Maverick County','Huron County','Kittitas County')
    group by ss_ticket_number,ss_customer_sk) dj,customer
    where ss_customer_sk = c_customer_sk
      and cnt between 1 and 5
    order by cnt desc
PREHOOK: type: QUERY
PREHOOK: Input: default@customer
PREHOOK: Input: default@date_dim
PREHOOK: Input: default@household_demographics
PREHOOK: Input: default@store
PREHOOK: Input: default@store_sales
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain
select c_last_name
       ,c_first_name
       ,c_salutation
       ,c_preferred_cust_flag 
       ,ss_ticket_number
       ,cnt from
   (select ss_ticket_number
          ,ss_customer_sk
          ,count(*) cnt
    from store_sales,date_dim,store,household_demographics
    where store_sales.ss_sold_date_sk = date_dim.d_date_sk
    and store_sales.ss_store_sk = store.s_store_sk  
    and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
    and date_dim.d_dom between 1 and 2 
    and (household_demographics.hd_buy_potential = '>10000' or
         household_demographics.hd_buy_potential = 'unknown')
    and household_demographics.hd_vehicle_count > 0
    and case when household_demographics.hd_vehicle_count > 0 then 
             household_demographics.hd_dep_count/ household_demographics.hd_vehicle_count else null end > 1
    and date_dim.d_year in (2000,2000+1,2000+2)
    and store.s_county in ('Mobile County','Maverick County','Huron County','Kittitas County')
    group by ss_ticket_number,ss_customer_sk) dj,customer
    where ss_customer_sk = c_customer_sk
      and cnt between 1 and 5
    order by cnt desc
POSTHOOK: type: QUERY
POSTHOOK: Input: default@customer
POSTHOOK: Input: default@date_dim
POSTHOOK: Input: default@household_demographics
POSTHOOK: Input: default@store
POSTHOOK: Input: default@store_sales
POSTHOOK: Output: hdfs://### HDFS PATH ###
Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Reducer 4 (BROADCAST_EDGE)
Map 3 <- Map 5 (BROADCAST_EDGE), Map 6 (BROADCAST_EDGE), Map 7 (BROADCAST_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE)
Reducer 4 <- Map 3 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 2 vectorized
      File Output Operator [FS_91]
        Select Operator [SEL_90] (rows=59862 width=364)
          Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
        <-Map 1 [SIMPLE_EDGE] vectorized
          SHUFFLE [RS_89]
            Select Operator [SEL_88] (rows=59862 width=364)
              Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
              Map Join Operator [MAPJOIN_87] (rows=59862 width=364)
                Conds:SEL_86._col0=RS_85._col1(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2","_col3","_col4","_col5","_col7"]
              <-Reducer 4 [BROADCAST_EDGE] vectorized
                BROADCAST [RS_85]
                  PartitionCols:_col1
                  Filter Operator [FIL_84] (rows=59862 width=12)
                    predicate:_col2 BETWEEN 1 AND 5
                    Select Operator [SEL_83] (rows=1197233 width=12)
                      Output:["_col0","_col1","_col2"]
                      Group By Operator [GBY_82] (rows=1197233 width=12)
                        Output:["_col0","_col1","_col2"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1
                      <-Map 3 [SIMPLE_EDGE] vectorized
                        SHUFFLE [RS_81]
                          PartitionCols:_col0, _col1
                          Group By Operator [GBY_80] (rows=1197233 width=12)
                            Output:["_col0","_col1","_col2"],aggregations:["count()"],keys:_col0, _col2
                            Map Join Operator [MAPJOIN_79] (rows=1197233 width=4)
                              Conds:SEL_78._col1=RS_73._col0(Inner),HybridGraceHashJoin:true,Output:["_col0","_col2"]
                            <-Map 7 [BROADCAST_EDGE] vectorized
                              BROADCAST [RS_73]
                                PartitionCols:_col0
                                Select Operator [SEL_72] (rows=480 width=4)
                                  Output:["_col0"]
                                  Filter Operator [FIL_71] (rows=480 width=104)
                                    predicate:((hd_buy_potential) IN ('>10000', 'unknown') and (hd_vehicle_count > 0) and CASE WHEN ((hd_vehicle_count > 0)) THEN (((UDFToDouble(hd_dep_count) / UDFToDouble(hd_vehicle_count)) > 1.0D)) ELSE (null) END)
                                    TableScan [TS_18] (rows=7200 width=104)
                                      default@household_demographics,household_demographics,Tbl:COMPLETE,Col:COMPLETE,Output:["hd_demo_sk","hd_buy_potential","hd_dep_count","hd_vehicle_count"]
                            <-Select Operator [SEL_78] (rows=17958489 width=4)
                                Output:["_col0","_col1","_col2"]
                                Map Join Operator [MAPJOIN_77] (rows=17958489 width=4)
                                  Conds:MAPJOIN_76._col3=RS_70._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2","_col4"]
                                <-Map 6 [BROADCAST_EDGE] vectorized
                                  BROADCAST [RS_70]
                                    PartitionCols:_col0
                                    Select Operator [SEL_69] (rows=85 width=4)
                                      Output:["_col0"]
                                      Filter Operator [FIL_68] (rows=85 width=102)
                                        predicate:(s_county) IN ('Mobile County', 'Maverick County', 'Huron County', 'Kittitas County')
                                        TableScan [TS_8] (rows=1704 width=102)
                                          default@store,store,Tbl:COMPLETE,Col:COMPLETE,Output:["s_store_sk","s_county"]
                                <-Map Join Operator [MAPJOIN_76] (rows=44605486 width=10)
                                    Conds:SEL_75._col0=RS_67._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2","_col3","_col4"]
                                  <-Map 5 [BROADCAST_EDGE] vectorized
                                    BROADCAST [RS_67]
                                      PartitionCols:_col0
                                      Select Operator [SEL_66] (rows=170 width=4)
                                        Output:["_col0"]
                                        Filter Operator [FIL_65] (rows=170 width=12)
                                          predicate:((d_year) IN (2000, 2001, 2002) and d_dom BETWEEN 1 AND 2)
                                          TableScan [TS_5] (rows=73049 width=12)
                                            default@date_dim,date_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_year","d_dom"]
                                  <-Select Operator [SEL_75] (rows=479121995 width=19)
                                      Output:["_col0","_col1","_col2","_col3","_col4"]
                                      Filter Operator [FIL_74] (rows=479121995 width=19)
                                        predicate:(ss_customer_sk is not null and ss_hdemo_sk is not null and ss_sold_date_sk is not null and ss_store_sk is not null)
                                        TableScan [TS_2] (rows=575995635 width=19)
                                          default@store_sales,store_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["ss_sold_date_sk","ss_customer_sk","ss_hdemo_sk","ss_store_sk","ss_ticket_number"]
              <-Select Operator [SEL_86] (rows=80000000 width=356)
                  Output:["_col0","_col1","_col2","_col3","_col4"]
                  TableScan [TS_0] (rows=80000000 width=356)
                    default@customer,customer,Tbl:COMPLETE,Col:COMPLETE,Output:["c_customer_sk","c_salutation","c_first_name","c_last_name","c_preferred_cust_flag"]

