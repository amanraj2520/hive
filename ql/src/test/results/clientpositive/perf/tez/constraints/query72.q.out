PREHOOK: query: explain
select  i_item_desc
      ,w_warehouse_name
      ,d1.d_week_seq
      ,count(case when p_promo_sk is null then 1 else 0 end) no_promo
      ,count(case when p_promo_sk is not null then 1 else 0 end) promo
      ,count(*) total_cnt
from catalog_sales
join inventory on (cs_item_sk = inv_item_sk)
join warehouse on (w_warehouse_sk=inv_warehouse_sk)
join item on (i_item_sk = cs_item_sk)
join customer_demographics on (cs_bill_cdemo_sk = cd_demo_sk)
join household_demographics on (cs_bill_hdemo_sk = hd_demo_sk)
join date_dim d1 on (cs_sold_date_sk = d1.d_date_sk)
join date_dim d2 on (inv_date_sk = d2.d_date_sk)
join date_dim d3 on (cs_ship_date_sk = d3.d_date_sk)
left outer join promotion on (cs_promo_sk=p_promo_sk)
left outer join catalog_returns on (cr_item_sk = cs_item_sk and cr_order_number = cs_order_number)
where d1.d_week_seq = d2.d_week_seq
  and inv_quantity_on_hand < cs_quantity 
  and d3.d_date > d1.d_date + 5
  and hd_buy_potential = '1001-5000'
  and d1.d_year = 2001
  and hd_buy_potential = '1001-5000'
  and cd_marital_status = 'M'
  and d1.d_year = 2001
group by i_item_desc,w_warehouse_name,d1.d_week_seq
order by total_cnt desc, i_item_desc, w_warehouse_name, d_week_seq
limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@catalog_returns
PREHOOK: Input: default@catalog_sales
PREHOOK: Input: default@customer_demographics
PREHOOK: Input: default@date_dim
PREHOOK: Input: default@household_demographics
PREHOOK: Input: default@inventory
PREHOOK: Input: default@item
PREHOOK: Input: default@promotion
PREHOOK: Input: default@warehouse
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain
select  i_item_desc
      ,w_warehouse_name
      ,d1.d_week_seq
      ,count(case when p_promo_sk is null then 1 else 0 end) no_promo
      ,count(case when p_promo_sk is not null then 1 else 0 end) promo
      ,count(*) total_cnt
from catalog_sales
join inventory on (cs_item_sk = inv_item_sk)
join warehouse on (w_warehouse_sk=inv_warehouse_sk)
join item on (i_item_sk = cs_item_sk)
join customer_demographics on (cs_bill_cdemo_sk = cd_demo_sk)
join household_demographics on (cs_bill_hdemo_sk = hd_demo_sk)
join date_dim d1 on (cs_sold_date_sk = d1.d_date_sk)
join date_dim d2 on (inv_date_sk = d2.d_date_sk)
join date_dim d3 on (cs_ship_date_sk = d3.d_date_sk)
left outer join promotion on (cs_promo_sk=p_promo_sk)
left outer join catalog_returns on (cr_item_sk = cs_item_sk and cr_order_number = cs_order_number)
where d1.d_week_seq = d2.d_week_seq
  and inv_quantity_on_hand < cs_quantity 
  and d3.d_date > d1.d_date + 5
  and hd_buy_potential = '1001-5000'
  and d1.d_year = 2001
  and hd_buy_potential = '1001-5000'
  and cd_marital_status = 'M'
  and d1.d_year = 2001
group by i_item_desc,w_warehouse_name,d1.d_week_seq
order by total_cnt desc, i_item_desc, w_warehouse_name, d_week_seq
limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@catalog_returns
POSTHOOK: Input: default@catalog_sales
POSTHOOK: Input: default@customer_demographics
POSTHOOK: Input: default@date_dim
POSTHOOK: Input: default@household_demographics
POSTHOOK: Input: default@inventory
POSTHOOK: Input: default@item
POSTHOOK: Input: default@promotion
POSTHOOK: Input: default@warehouse
POSTHOOK: Output: hdfs://### HDFS PATH ###
Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Map 7 (BROADCAST_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 8 (SIMPLE_EDGE), Map 9 (BROADCAST_EDGE)
Reducer 3 <- Map 10 (SIMPLE_EDGE), Map 11 (BROADCAST_EDGE), Map 12 (BROADCAST_EDGE), Map 13 (BROADCAST_EDGE), Map 14 (BROADCAST_EDGE), Map 15 (BROADCAST_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 4 <- Map 16 (SIMPLE_EDGE), Reducer 3 (SIMPLE_EDGE)
Reducer 5 <- Reducer 4 (SIMPLE_EDGE)
Reducer 6 <- Reducer 5 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 6 vectorized
      File Output Operator [FS_179]
        Limit [LIM_178] (rows=100 width=312)
          Number of rows:100
          Select Operator [SEL_177] (rows=576744 width=312)
            Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
          <-Reducer 5 [SIMPLE_EDGE] vectorized
            SHUFFLE [RS_176]
              Group By Operator [GBY_175] (rows=576744 width=312)
                Output:["_col0","_col1","_col2","_col3","_col4","_col5"],aggregations:["count(VALUE._col0)","count(VALUE._col1)","count(VALUE._col2)"],keys:KEY._col0, KEY._col1, KEY._col2
              <-Reducer 4 [SIMPLE_EDGE]
                SHUFFLE [RS_66]
                  PartitionCols:_col0, _col1, _col2
                  Group By Operator [GBY_65] (rows=558148039 width=312)
                    Output:["_col0","_col1","_col2","_col3","_col4","_col5"],aggregations:["count(_col5)","count(_col6)","count()"],keys:_col3, _col2, _col4
                    Select Operator [SEL_63] (rows=558148039 width=292)
                      Output:["_col2","_col3","_col4","_col5","_col6"]
                      Merge Join Operator [MERGEJOIN_139] (rows=558148039 width=292)
                        Conds:RS_60._col0, _col2=RS_174._col0, _col1(Left Outer),Output:["_col3","_col4","_col5","_col6"]
                      <-Map 16 [SIMPLE_EDGE] vectorized
                        SHUFFLE [RS_174]
                          PartitionCols:_col0, _col1
                          Select Operator [SEL_173] (rows=28798881 width=8)
                            Output:["_col0","_col1"]
                            TableScan [TS_55] (rows=28798881 width=8)
                              default@catalog_returns,catalog_returns,Tbl:COMPLETE,Col:COMPLETE,Output:["cr_item_sk","cr_order_number"]
                      <-Reducer 3 [SIMPLE_EDGE]
                        SHUFFLE [RS_60]
                          PartitionCols:_col0, _col2
                          Map Join Operator [MAPJOIN_138] (rows=216421239 width=300)
                            Conds:SEL_52._col1=RS_172._col0(Left Outer),HybridGraceHashJoin:true,Output:["_col0","_col2","_col3","_col4","_col5","_col6"]
                          <-Map 15 [BROADCAST_EDGE] vectorized
                            BROADCAST [RS_172]
                              PartitionCols:_col0
                              Select Operator [SEL_171] (rows=2300 width=4)
                                Output:["_col0"]
                                TableScan [TS_53] (rows=2300 width=4)
                                  default@promotion,promotion,Tbl:COMPLETE,Col:COMPLETE,Output:["p_promo_sk"]
                          <-Select Operator [SEL_52] (rows=216421239 width=299)
                              Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                              Filter Operator [FIL_51] (rows=216421239 width=315)
                                predicate:(_col12 > _col8)
                                Map Join Operator [MAPJOIN_137] (rows=649263719 width=315)
                                  Conds:MAPJOIN_136._col0=RS_170._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2","_col3","_col5","_col6","_col7","_col8","_col12"]
                                <-Map 14 [BROADCAST_EDGE] vectorized
                                  BROADCAST [RS_170]
                                    PartitionCols:_col0
                                    Select Operator [SEL_169] (rows=73049 width=12)
                                      Output:["_col0","_col1"]
                                      TableScan [TS_43] (rows=73049 width=98)
                                        default@date_dim,d3,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_date"]
                                <-Map Join Operator [MAPJOIN_136] (rows=649263719 width=311)
                                    Conds:SEL_39._col4, _col7=RS_168._col0, _col1(Inner),HybridGraceHashJoin:true,Output:["_col0","_col1","_col2","_col3","_col5","_col6","_col7","_col8"]
                                  <-Map 13 [BROADCAST_EDGE] vectorized
                                    BROADCAST [RS_168]
                                      PartitionCols:_col0, _col1
                                      Select Operator [SEL_167] (rows=73049 width=8)
                                        Output:["_col0","_col1"]
                                        Filter Operator [FIL_166] (rows=73049 width=8)
                                          predicate:d_week_seq is not null
                                          TableScan [TS_40] (rows=73049 width=8)
                                            default@date_dim,d2,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_week_seq"]
                                  <-Select Operator [SEL_39] (rows=580674579 width=315)
                                      Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8"]
                                      Map Join Operator [MAPJOIN_135] (rows=580674579 width=315)
                                        Conds:MAPJOIN_134._col2=RS_165._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col3","_col4","_col5","_col6","_col7","_col8","_col10","_col11"]
                                      <-Map 12 [BROADCAST_EDGE] vectorized
                                        BROADCAST [RS_165]
                                          PartitionCols:_col0
                                          Select Operator [SEL_164] (rows=1440 width=4)
                                            Output:["_col0"]
                                            Filter Operator [FIL_163] (rows=1440 width=96)
                                              predicate:(hd_buy_potential = '1001-5000')
                                              TableScan [TS_30] (rows=7200 width=96)
                                                default@household_demographics,household_demographics,Tbl:COMPLETE,Col:COMPLETE,Output:["hd_demo_sk","hd_buy_potential"]
                                      <-Map Join Operator [MAPJOIN_134] (rows=2903372850 width=319)
                                          Conds:SEL_26._col0=RS_162._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8","_col10","_col11"]
                                        <-Map 11 [BROADCAST_EDGE] vectorized
                                          BROADCAST [RS_162]
                                            PartitionCols:_col0
                                            Select Operator [SEL_161] (rows=652 width=16)
                                              Output:["_col0","_col1","_col2"]
                                              Filter Operator [FIL_160] (rows=652 width=106)
                                                predicate:((d_year = 2001) and d_week_seq is not null)
                                                TableScan [TS_27] (rows=73049 width=106)
                                                  default@date_dim,d1,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_date","d_week_seq","d_year"]
                                        <-Select Operator [SEL_26] (rows=8189226191 width=311)
                                            Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8"]
                                            Merge Join Operator [MERGEJOIN_133] (rows=8189226191 width=311)
                                              Conds:RS_23._col4=RS_159._col0(Inner),Output:["_col0","_col1","_col3","_col4","_col5","_col6","_col7","_col8","_col11"]
                                            <-Map 10 [SIMPLE_EDGE] vectorized
                                              SHUFFLE [RS_159]
                                                PartitionCols:_col0
                                                Select Operator [SEL_158] (rows=462000 width=188)
                                                  Output:["_col0","_col1"]
                                                  TableScan [TS_18] (rows=462000 width=188)
                                                    default@item,item,Tbl:COMPLETE,Col:COMPLETE,Output:["i_item_sk","i_item_desc"]
                                            <-Reducer 2 [SIMPLE_EDGE]
                                              SHUFFLE [RS_23]
                                                PartitionCols:_col4
                                                Map Join Operator [MAPJOIN_132] (rows=8189226191 width=127)
                                                  Conds:SEL_14._col2=RS_157._col0(Inner),HybridGraceHashJoin:true,Output:["_col0","_col1","_col3","_col4","_col5","_col6","_col7","_col8"]
                                                <-Map 9 [BROADCAST_EDGE] vectorized
                                                  BROADCAST [RS_157]
                                                    PartitionCols:_col0
                                                    Select Operator [SEL_156] (rows=265971 width=4)
                                                      Output:["_col0"]
                                                      Filter Operator [FIL_155] (rows=265971 width=89)
                                                        predicate:(cd_marital_status = 'M')
                                                        TableScan [TS_15] (rows=1861800 width=89)
                                                          default@customer_demographics,customer_demographics,Tbl:COMPLETE,Col:COMPLETE,Output:["cd_demo_sk","cd_marital_status"]
                                                <-Select Operator [SEL_14] (rows=56525338557 width=131)
                                                    Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8"]
                                                    Filter Operator [FIL_13] (rows=56525338557 width=139)
                                                      predicate:(_col3 < _col13)
                                                      Merge Join Operator [MERGEJOIN_131] (rows=169576015673 width=139)
                                                        Conds:RS_151._col1=RS_154._col4(Inner),Output:["_col0","_col3","_col5","_col6","_col7","_col8","_col9","_col10","_col11","_col12","_col13"]
                                                      <-Map 1 [SIMPLE_EDGE] vectorized
                                                        SHUFFLE [RS_151]
                                                          PartitionCols:_col1
                                                          Map Join Operator [MAPJOIN_150] (rows=37584000 width=111)
                                                            Conds:SEL_149._col2=RS_148._col0(Inner),HybridGraceHashJoin:true,Output:["_col0","_col1","_col3","_col5"]
                                                          <-Map 7 [BROADCAST_EDGE] vectorized
                                                            BROADCAST [RS_148]
                                                              PartitionCols:_col0
                                                              Select Operator [SEL_147] (rows=27 width=104)
                                                                Output:["_col0","_col1"]
                                                                TableScan [TS_2] (rows=27 width=104)
                                                                  default@warehouse,warehouse,Tbl:COMPLETE,Col:COMPLETE,Output:["w_warehouse_sk","w_warehouse_name"]
                                                          <-Select Operator [SEL_149] (rows=37584000 width=15)
                                                              Output:["_col0","_col1","_col2","_col3"]
                                                              TableScan [TS_0] (rows=37584000 width=15)
                                                                default@inventory,inventory,Tbl:COMPLETE,Col:COMPLETE,Output:["inv_date_sk","inv_item_sk","inv_warehouse_sk","inv_quantity_on_hand"]
                                                      <-Map 8 [SIMPLE_EDGE] vectorized
                                                        SHUFFLE [RS_154]
                                                          PartitionCols:_col4
                                                          Select Operator [SEL_153] (rows=282274763 width=31)
                                                            Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
                                                            Filter Operator [FIL_152] (rows=282274763 width=31)
                                                              predicate:(cs_bill_cdemo_sk is not null and cs_bill_hdemo_sk is not null and cs_ship_date_sk is not null and cs_sold_date_sk is not null)
                                                              TableScan [TS_4] (rows=287989836 width=31)
                                                                default@catalog_sales,catalog_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["cs_sold_date_sk","cs_ship_date_sk","cs_bill_cdemo_sk","cs_bill_hdemo_sk","cs_item_sk","cs_promo_sk","cs_order_number","cs_quantity"]

