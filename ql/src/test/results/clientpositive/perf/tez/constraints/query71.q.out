PREHOOK: query: explain
select i_brand_id brand_id, i_brand brand,t_hour,t_minute,
 	sum(ext_price) ext_price
 from item, (select ws_ext_sales_price as ext_price, 
                        ws_sold_date_sk as sold_date_sk,
                        ws_item_sk as sold_item_sk,
                        ws_sold_time_sk as time_sk  
                 from web_sales,date_dim
                 where d_date_sk = ws_sold_date_sk
                   and d_moy=12
                   and d_year=2001
                 union all
                 select cs_ext_sales_price as ext_price,
                        cs_sold_date_sk as sold_date_sk,
                        cs_item_sk as sold_item_sk,
                        cs_sold_time_sk as time_sk
                 from catalog_sales,date_dim
                 where d_date_sk = cs_sold_date_sk
                   and d_moy=12
                   and d_year=2001
                 union all
                 select ss_ext_sales_price as ext_price,
                        ss_sold_date_sk as sold_date_sk,
                        ss_item_sk as sold_item_sk,
                        ss_sold_time_sk as time_sk
                 from store_sales,date_dim
                 where d_date_sk = ss_sold_date_sk
                   and d_moy=12
                   and d_year=2001
                 ) as tmp,time_dim
 where
   sold_item_sk = i_item_sk
   and i_manager_id=1
   and time_sk = t_time_sk
   and (t_meal_time = 'breakfast' or t_meal_time = 'dinner')
 group by i_brand, i_brand_id,t_hour,t_minute
 order by ext_price desc, i_brand_id
PREHOOK: type: QUERY
PREHOOK: Input: default@catalog_sales
PREHOOK: Input: default@date_dim
PREHOOK: Input: default@item
PREHOOK: Input: default@store_sales
PREHOOK: Input: default@time_dim
PREHOOK: Input: default@web_sales
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain
select i_brand_id brand_id, i_brand brand,t_hour,t_minute,
 	sum(ext_price) ext_price
 from item, (select ws_ext_sales_price as ext_price, 
                        ws_sold_date_sk as sold_date_sk,
                        ws_item_sk as sold_item_sk,
                        ws_sold_time_sk as time_sk  
                 from web_sales,date_dim
                 where d_date_sk = ws_sold_date_sk
                   and d_moy=12
                   and d_year=2001
                 union all
                 select cs_ext_sales_price as ext_price,
                        cs_sold_date_sk as sold_date_sk,
                        cs_item_sk as sold_item_sk,
                        cs_sold_time_sk as time_sk
                 from catalog_sales,date_dim
                 where d_date_sk = cs_sold_date_sk
                   and d_moy=12
                   and d_year=2001
                 union all
                 select ss_ext_sales_price as ext_price,
                        ss_sold_date_sk as sold_date_sk,
                        ss_item_sk as sold_item_sk,
                        ss_sold_time_sk as time_sk
                 from store_sales,date_dim
                 where d_date_sk = ss_sold_date_sk
                   and d_moy=12
                   and d_year=2001
                 ) as tmp,time_dim
 where
   sold_item_sk = i_item_sk
   and i_manager_id=1
   and time_sk = t_time_sk
   and (t_meal_time = 'breakfast' or t_meal_time = 'dinner')
 group by i_brand, i_brand_id,t_hour,t_minute
 order by ext_price desc, i_brand_id
POSTHOOK: type: QUERY
POSTHOOK: Input: default@catalog_sales
POSTHOOK: Input: default@date_dim
POSTHOOK: Input: default@item
POSTHOOK: Input: default@store_sales
POSTHOOK: Input: default@time_dim
POSTHOOK: Input: default@web_sales
POSTHOOK: Output: hdfs://### HDFS PATH ###
Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Map 10 (BROADCAST_EDGE), Map 11 (BROADCAST_EDGE), Map 5 (BROADCAST_EDGE), Union 2 (CONTAINS)
Map 6 <- Map 10 (BROADCAST_EDGE), Map 11 (BROADCAST_EDGE), Map 7 (BROADCAST_EDGE), Union 2 (CONTAINS)
Map 8 <- Map 10 (BROADCAST_EDGE), Map 11 (BROADCAST_EDGE), Map 9 (BROADCAST_EDGE), Union 2 (CONTAINS)
Reducer 3 <- Union 2 (SIMPLE_EDGE)
Reducer 4 <- Reducer 3 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 4 vectorized
      File Output Operator [FS_160]
        Select Operator [SEL_159] (rows=6840 width=224)
          Output:["_col0","_col1","_col2","_col3","_col4"]
        <-Reducer 3 [SIMPLE_EDGE] vectorized
          SHUFFLE [RS_158]
            Select Operator [SEL_157] (rows=6840 width=228)
              Output:["_col1","_col2","_col3","_col4","_col5"]
              Group By Operator [GBY_156] (rows=6840 width=224)
                Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2, KEY._col3
              <-Union 2 [SIMPLE_EDGE]
                <-Map 1 [CONTAINS] vectorized
                  Reduce Output Operator [RS_155]
                    PartitionCols:_col0, _col1, _col2, _col3
                    Group By Operator [GBY_154] (rows=87780 width=224)
                      Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(_col0)"],keys:_col4, _col7, _col8, _col5
                      Map Join Operator [MAPJOIN_153] (rows=24859734 width=112)
                        Conds:MAPJOIN_152._col2=RS_145._col0(Inner),HybridGraceHashJoin:true,Output:["_col0","_col4","_col5","_col7","_col8"]
                      <-Map 11 [BROADCAST_EDGE] vectorized
                        BROADCAST [RS_145]
                          PartitionCols:_col0
                          Select Operator [SEL_144] (rows=43200 width=12)
                            Output:["_col0","_col1","_col2"]
                            Filter Operator [FIL_143] (rows=43200 width=99)
                              predicate:((t_meal_time = 'breakfast') or (t_meal_time = 'dinner'))
                              TableScan [TS_35] (rows=86400 width=99)
                                default@time_dim,time_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["t_time_sk","t_hour","t_minute","t_meal_time"]
                      <-Map Join Operator [MAPJOIN_152] (rows=49719468 width=161)
                          Conds:SEL_151._col1=RS_140._col0(Inner),HybridGraceHashJoin:true,Output:["_col0","_col2","_col4","_col5"]
                        <-Map 10 [BROADCAST_EDGE] vectorized
                          BROADCAST [RS_140]
                            PartitionCols:_col0
                            Select Operator [SEL_139] (rows=7333 width=107)
                              Output:["_col0","_col1","_col2"]
                              Filter Operator [FIL_138] (rows=7333 width=111)
                                predicate:(i_manager_id = 1)
                                TableScan [TS_32] (rows=462000 width=111)
                                  default@item,item,Tbl:COMPLETE,Col:COMPLETE,Output:["i_item_sk","i_brand_id","i_brand","i_manager_id"]
                        <-Select Operator [SEL_151] (rows=49184892 width=119)
                            Output:["_col0","_col1","_col2"]
                            Map Join Operator [MAPJOIN_150] (rows=49184892 width=119)
                              Conds:SEL_149._col0=RS_137._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2","_col3"]
                            <-Map 5 [BROADCAST_EDGE] vectorized
                              BROADCAST [RS_137]
                                PartitionCols:_col0
                                Select Operator [SEL_136] (rows=624 width=4)
                                  Output:["_col0"]
                                  Filter Operator [FIL_135] (rows=624 width=12)
                                    predicate:((d_moy = 12) and (d_year = 2001))
                                    TableScan [TS_3] (rows=73049 width=12)
                                      default@date_dim,date_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_year","d_moy"]
                            <-Select Operator [SEL_149] (rows=143930836 width=123)
                                Output:["_col0","_col1","_col2","_col3"]
                                Filter Operator [FIL_148] (rows=143930836 width=123)
                                  predicate:(ws_sold_date_sk is not null and ws_sold_time_sk is not null)
                                  TableScan [TS_96] (rows=144002668 width=123)
                                    Output:["ws_sold_date_sk","ws_sold_time_sk","ws_item_sk","ws_ext_sales_price"]
                <-Map 6 [CONTAINS] vectorized
                  Reduce Output Operator [RS_171]
                    PartitionCols:_col0, _col1, _col2, _col3
                    Group By Operator [GBY_170] (rows=87780 width=224)
                      Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(_col0)"],keys:_col4, _col7, _col8, _col5
                      Map Join Operator [MAPJOIN_169] (rows=24859734 width=112)
                        Conds:MAPJOIN_168._col2=RS_146._col0(Inner),HybridGraceHashJoin:true,Output:["_col0","_col4","_col5","_col7","_col8"]
                      <-Map 11 [BROADCAST_EDGE] vectorized
                        BROADCAST [RS_146]
                          PartitionCols:_col0
                           Please refer to the previous Select Operator [SEL_144]
                      <-Map Join Operator [MAPJOIN_168] (rows=49719468 width=161)
                          Conds:SEL_167._col1=RS_141._col0(Inner),HybridGraceHashJoin:true,Output:["_col0","_col2","_col4","_col5"]
                        <-Map 10 [BROADCAST_EDGE] vectorized
                          BROADCAST [RS_141]
                            PartitionCols:_col0
                             Please refer to the previous Select Operator [SEL_139]
                        <-Select Operator [SEL_167] (rows=96743093 width=118)
                            Output:["_col0","_col1","_col2"]
                            Map Join Operator [MAPJOIN_166] (rows=96743093 width=118)
                              Conds:SEL_165._col0=RS_163._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2","_col3"]
                            <-Map 7 [BROADCAST_EDGE] vectorized
                              BROADCAST [RS_163]
                                PartitionCols:_col0
                                Select Operator [SEL_162] (rows=624 width=4)
                                  Output:["_col0"]
                                  Filter Operator [FIL_161] (rows=624 width=12)
                                    predicate:((d_moy = 12) and (d_year = 2001))
                                    TableScan [TS_13] (rows=73049 width=12)
                                      default@date_dim,date_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_year","d_moy"]
                            <-Select Operator [SEL_165] (rows=285116947 width=123)
                                Output:["_col0","_col1","_col2","_col3"]
                                Filter Operator [FIL_164] (rows=285116947 width=123)
                                  predicate:(cs_sold_date_sk is not null and cs_sold_time_sk is not null)
                                  TableScan [TS_109] (rows=287989836 width=123)
                                    Output:["cs_sold_date_sk","cs_sold_time_sk","cs_item_sk","cs_ext_sales_price"]
                <-Map 8 [CONTAINS] vectorized
                  Reduce Output Operator [RS_182]
                    PartitionCols:_col0, _col1, _col2, _col3
                    Group By Operator [GBY_181] (rows=87780 width=224)
                      Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(_col0)"],keys:_col4, _col7, _col8, _col5
                      Map Join Operator [MAPJOIN_180] (rows=24859734 width=112)
                        Conds:MAPJOIN_179._col2=RS_147._col0(Inner),HybridGraceHashJoin:true,Output:["_col0","_col4","_col5","_col7","_col8"]
                      <-Map 11 [BROADCAST_EDGE] vectorized
                        BROADCAST [RS_147]
                          PartitionCols:_col0
                           Please refer to the previous Select Operator [SEL_144]
                      <-Map Join Operator [MAPJOIN_179] (rows=49719468 width=161)
                          Conds:SEL_178._col1=RS_142._col0(Inner),HybridGraceHashJoin:true,Output:["_col0","_col2","_col4","_col5"]
                        <-Map 10 [BROADCAST_EDGE] vectorized
                          BROADCAST [RS_142]
                            PartitionCols:_col0
                             Please refer to the previous Select Operator [SEL_139]
                        <-Select Operator [SEL_178] (rows=179517265 width=104)
                            Output:["_col0","_col1","_col2"]
                            Map Join Operator [MAPJOIN_177] (rows=179517265 width=104)
                              Conds:SEL_176._col0=RS_174._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2","_col3"]
                            <-Map 9 [BROADCAST_EDGE] vectorized
                              BROADCAST [RS_174]
                                PartitionCols:_col0
                                Select Operator [SEL_173] (rows=624 width=4)
                                  Output:["_col0"]
                                  Filter Operator [FIL_172] (rows=624 width=12)
                                    predicate:((d_moy = 12) and (d_year = 2001))
                                    TableScan [TS_24] (rows=73049 width=12)
                                      default@date_dim,date_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_year","d_moy"]
                            <-Select Operator [SEL_176] (rows=525325345 width=118)
                                Output:["_col0","_col1","_col2","_col3"]
                                Filter Operator [FIL_175] (rows=525325345 width=118)
                                  predicate:(ss_sold_date_sk is not null and ss_sold_time_sk is not null)
                                  TableScan [TS_122] (rows=575995635 width=118)
                                    Output:["ss_sold_date_sk","ss_sold_time_sk","ss_item_sk","ss_ext_sales_price"]

