Warning: Shuffle Join MERGEJOIN[78][tables = [$hdt$_0, $hdt$_1, $hdt$_2]] in Stage 'Reducer 11' is a cross product
PREHOOK: query: explain
select  i_item_id,
        ca_country,
        ca_state, 
        ca_county,
        avg( cast(cs_quantity as numeric(12,2))) agg1,
        avg( cast(cs_list_price as numeric(12,2))) agg2,
        avg( cast(cs_coupon_amt as numeric(12,2))) agg3,
        avg( cast(cs_sales_price as numeric(12,2))) agg4,
        avg( cast(cs_net_profit as numeric(12,2))) agg5,
        avg( cast(c_birth_year as numeric(12,2))) agg6,
        avg( cast(cd1.cd_dep_count as numeric(12,2))) agg7
 from catalog_sales, customer_demographics cd1, 
      customer_demographics cd2, customer, customer_address, date_dim, item
 where cs_sold_date_sk = d_date_sk and
       cs_item_sk = i_item_sk and
       cs_bill_cdemo_sk = cd1.cd_demo_sk and
       cs_bill_customer_sk = c_customer_sk and
       cd1.cd_gender = 'M' and 
       cd1.cd_education_status = 'College' and
       c_current_cdemo_sk = cd2.cd_demo_sk and
       c_current_addr_sk = ca_address_sk and
       c_birth_month in (9,5,12,4,1,10) and
       d_year = 2001 and
       ca_state in ('ND','WI','AL'
                   ,'NC','OK','MS','TN')
 group by rollup (i_item_id, ca_country, ca_state, ca_county)
 order by ca_country,
        ca_state, 
        ca_county,
	i_item_id
 limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@catalog_sales
PREHOOK: Input: default@customer
PREHOOK: Input: default@customer_address
PREHOOK: Input: default@customer_demographics
PREHOOK: Input: default@date_dim
PREHOOK: Input: default@item
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain
select  i_item_id,
        ca_country,
        ca_state, 
        ca_county,
        avg( cast(cs_quantity as numeric(12,2))) agg1,
        avg( cast(cs_list_price as numeric(12,2))) agg2,
        avg( cast(cs_coupon_amt as numeric(12,2))) agg3,
        avg( cast(cs_sales_price as numeric(12,2))) agg4,
        avg( cast(cs_net_profit as numeric(12,2))) agg5,
        avg( cast(c_birth_year as numeric(12,2))) agg6,
        avg( cast(cd1.cd_dep_count as numeric(12,2))) agg7
 from catalog_sales, customer_demographics cd1, 
      customer_demographics cd2, customer, customer_address, date_dim, item
 where cs_sold_date_sk = d_date_sk and
       cs_item_sk = i_item_sk and
       cs_bill_cdemo_sk = cd1.cd_demo_sk and
       cs_bill_customer_sk = c_customer_sk and
       cd1.cd_gender = 'M' and 
       cd1.cd_education_status = 'College' and
       c_current_cdemo_sk = cd2.cd_demo_sk and
       c_current_addr_sk = ca_address_sk and
       c_birth_month in (9,5,12,4,1,10) and
       d_year = 2001 and
       ca_state in ('ND','WI','AL'
                   ,'NC','OK','MS','TN')
 group by rollup (i_item_id, ca_country, ca_state, ca_county)
 order by ca_country,
        ca_state, 
        ca_county,
	i_item_id
 limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@catalog_sales
POSTHOOK: Input: default@customer
POSTHOOK: Input: default@customer_address
POSTHOOK: Input: default@customer_demographics
POSTHOOK: Input: default@date_dim
POSTHOOK: Input: default@item
POSTHOOK: Output: hdfs://### HDFS PATH ###
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 10 <- Map 12 (SIMPLE_EDGE), Map 9 (SIMPLE_EDGE)
Reducer 11 <- Map 13 (CUSTOM_SIMPLE_EDGE), Reducer 10 (CUSTOM_SIMPLE_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 8 (SIMPLE_EDGE)
Reducer 3 <- Reducer 11 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 4 <- Map 14 (SIMPLE_EDGE), Reducer 3 (SIMPLE_EDGE)
Reducer 5 <- Map 15 (SIMPLE_EDGE), Reducer 4 (SIMPLE_EDGE)
Reducer 6 <- Reducer 5 (SIMPLE_EDGE)
Reducer 7 <- Reducer 6 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 7 vectorized
      File Output Operator [FS_107]
        Limit [LIM_106] (rows=100 width=1165)
          Number of rows:100
          Select Operator [SEL_105] (rows=2531254230 width=1165)
            Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8","_col9","_col10"]
          <-Reducer 6 [SIMPLE_EDGE] vectorized
            SHUFFLE [RS_104]
              Select Operator [SEL_103] (rows=2531254230 width=1165)
                Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8","_col9","_col10"]
                Group By Operator [GBY_102] (rows=2531254230 width=1229)
                  Output:["_col0","_col1","_col2","_col3","_col5","_col6","_col7","_col8","_col9","_col10","_col11","_col12","_col13","_col14","_col15","_col16","_col17","_col18"],aggregations:["sum(VALUE._col0)","count(VALUE._col1)","sum(VALUE._col2)","count(VALUE._col3)","sum(VALUE._col4)","count(VALUE._col5)","sum(VALUE._col6)","count(VALUE._col7)","sum(VALUE._col8)","count(VALUE._col9)","sum(VALUE._col10)","count(VALUE._col11)","sum(VALUE._col12)","count(VALUE._col13)"],keys:KEY._col0, KEY._col1, KEY._col2, KEY._col3, KEY._col4
                <-Reducer 5 [SIMPLE_EDGE]
                  SHUFFLE [RS_41]
                    PartitionCols:_col0, _col1, _col2, _col3, _col4
                    Group By Operator [GBY_40] (rows=52751489185150 width=1229)
                      Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8","_col9","_col10","_col11","_col12","_col13","_col14","_col15","_col16","_col17","_col18"],aggregations:["sum(_col5)","count(_col5)","sum(_col6)","count(_col6)","sum(_col7)","count(_col7)","sum(_col8)","count(_col8)","sum(_col9)","count(_col9)","sum(_col10)","count(_col10)","sum(_col11)","count(_col11)"],keys:_col2, _col3, _col4, _col14, 0L
                      Merge Join Operator [MERGEJOIN_82] (rows=10550297837030 width=1164)
                        Conds:RS_36._col1=RS_101._col0(Inner),Output:["_col2","_col3","_col4","_col5","_col6","_col7","_col8","_col9","_col10","_col11","_col14"]
                      <-Map 15 [SIMPLE_EDGE] vectorized
                        SHUFFLE [RS_101]
                          PartitionCols:_col0
                          Select Operator [SEL_100] (rows=462000 width=104)
                            Output:["_col0","_col1"]
                            TableScan [TS_31] (rows=462000 width=104)
                              default@item,item,Tbl:COMPLETE,Col:COMPLETE,Output:["i_item_sk","i_item_id"]
                      <-Reducer 4 [SIMPLE_EDGE]
                        SHUFFLE [RS_36]
                          PartitionCols:_col1
                          Merge Join Operator [MERGEJOIN_81] (rows=10550297837030 width=1068)
                            Conds:RS_33._col0=RS_99._col0(Inner),Output:["_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8","_col9","_col10","_col11"]
                          <-Map 14 [SIMPLE_EDGE] vectorized
                            SHUFFLE [RS_99]
                              PartitionCols:_col0
                              Select Operator [SEL_98] (rows=652 width=4)
                                Output:["_col0"]
                                Filter Operator [FIL_97] (rows=652 width=8)
                                  predicate:(d_year = 2001)
                                  TableScan [TS_28] (rows=73049 width=8)
                                    default@date_dim,date_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_year"]
                          <-Reducer 3 [SIMPLE_EDGE]
                            SHUFFLE [RS_33]
                              PartitionCols:_col0
                              Select Operator [SEL_27] (rows=29758070991000 width=1072)
                                Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8","_col9","_col10","_col11"]
                                Merge Join Operator [MERGEJOIN_80] (rows=29758070991000 width=1072)
                                  Conds:RS_24._col0, _col1=RS_25._col1, _col3(Inner),Output:["_col3","_col5","_col6","_col7","_col8","_col10","_col12","_col13","_col14","_col15","_col16","_col17"]
                                <-Reducer 11 [SIMPLE_EDGE]
                                  SHUFFLE [RS_25]
                                    PartitionCols:_col1, _col3
                                    Select Operator [SEL_20] (rows=29758070991000 width=687)
                                      Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8","_col9"]
                                      Merge Join Operator [MERGEJOIN_78] (rows=29758070991000 width=687)
                                        Conds:(Inner),Output:["_col0","_col1","_col3","_col4","_col5","_col6","_col7","_col8","_col10","_col11"]
                                      <-Map 13 [CUSTOM_SIMPLE_EDGE] vectorized
                                        PARTITION_ONLY_SHUFFLE [RS_96]
                                          Select Operator [SEL_95] (rows=1861800 width=4)
                                            Output:["_col0"]
                                            TableScan [TS_12] (rows=1861800 width=4)
                                              default@customer_demographics,cd2,Tbl:COMPLETE,Col:COMPLETE,Output:["cd_demo_sk"]
                                      <-Reducer 10 [CUSTOM_SIMPLE_EDGE]
                                        PARTITION_ONLY_SHUFFLE [RS_17]
                                          Merge Join Operator [MERGEJOIN_77] (rows=15983495 width=643)
                                            Conds:RS_91._col2=RS_94._col0(Inner),Output:["_col0","_col1","_col3","_col4","_col5","_col6","_col7","_col8","_col10"]
                                          <-Map 12 [SIMPLE_EDGE] vectorized
                                            SHUFFLE [RS_94]
                                              PartitionCols:_col0
                                              Select Operator [SEL_93] (rows=103433 width=116)
                                                Output:["_col0","_col1"]
                                                Filter Operator [FIL_92] (rows=103433 width=187)
                                                  predicate:((cd_education_status = 'College') and (cd_gender = 'M'))
                                                  TableScan [TS_9] (rows=1861800 width=187)
                                                    default@customer_demographics,cd1,Tbl:COMPLETE,Col:COMPLETE,Output:["cd_demo_sk","cd_gender","cd_education_status","cd_dep_count"]
                                          <-Map 9 [SIMPLE_EDGE] vectorized
                                            SHUFFLE [RS_91]
                                              PartitionCols:_col2
                                              Select Operator [SEL_90] (rows=283692098 width=573)
                                                Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8"]
                                                Filter Operator [FIL_89] (rows=283692098 width=466)
                                                  predicate:(cs_bill_cdemo_sk is not null and cs_bill_customer_sk is not null and cs_sold_date_sk is not null)
                                                  TableScan [TS_6] (rows=287989836 width=466)
                                                    default@catalog_sales,catalog_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["cs_sold_date_sk","cs_bill_customer_sk","cs_bill_cdemo_sk","cs_item_sk","cs_quantity","cs_list_price","cs_sales_price","cs_coupon_amt","cs_net_profit"]
                                <-Reducer 2 [SIMPLE_EDGE]
                                  SHUFFLE [RS_24]
                                    PartitionCols:_col0, _col1
                                    Merge Join Operator [MERGEJOIN_79] (rows=4890586 width=371)
                                      Conds:RS_85._col2=RS_88._col0(Inner),Output:["_col0","_col1","_col3","_col5","_col6","_col7"]
                                    <-Map 1 [SIMPLE_EDGE] vectorized
                                      SHUFFLE [RS_85]
                                        PartitionCols:_col2
                                        Select Operator [SEL_84] (rows=35631408 width=119)
                                          Output:["_col0","_col1","_col2","_col3"]
                                          Filter Operator [FIL_83] (rows=35631408 width=19)
                                            predicate:((c_birth_month) IN (9, 5, 12, 4, 1, 10) and c_current_addr_sk is not null and c_current_cdemo_sk is not null)
                                            TableScan [TS_0] (rows=80000000 width=19)
                                              default@customer,customer,Tbl:COMPLETE,Col:COMPLETE,Output:["c_customer_sk","c_current_cdemo_sk","c_current_addr_sk","c_birth_month","c_birth_year"]
                                    <-Map 8 [SIMPLE_EDGE] vectorized
                                      SHUFFLE [RS_88]
                                        PartitionCols:_col0
                                        Select Operator [SEL_87] (rows=5490196 width=285)
                                          Output:["_col0","_col1","_col2","_col3"]
                                          Filter Operator [FIL_86] (rows=5490196 width=285)
                                            predicate:(ca_state) IN ('ND', 'WI', 'AL', 'NC', 'OK', 'MS', 'TN')
                                            TableScan [TS_3] (rows=40000000 width=285)
                                              default@customer_address,customer_address,Tbl:COMPLETE,Col:COMPLETE,Output:["ca_address_sk","ca_county","ca_state","ca_country"]

