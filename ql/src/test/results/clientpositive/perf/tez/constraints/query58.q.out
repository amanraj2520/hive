Warning: Shuffle Join MERGEJOIN[260][tables = [$hdt$_4, $hdt$_5]] in Stage 'Reducer 13' is a cross product
PREHOOK: query: explain
with ss_items as
 (select i_item_id item_id
        ,sum(ss_ext_sales_price) ss_item_rev 
 from store_sales
     ,item
     ,date_dim
 where ss_item_sk = i_item_sk
   and d_date in (select d_date
                  from date_dim
                  where d_week_seq = (select d_week_seq 
                                      from date_dim
                                      where d_date = '1998-02-19'))
   and ss_sold_date_sk   = d_date_sk
 group by i_item_id),
 cs_items as
 (select i_item_id item_id
        ,sum(cs_ext_sales_price) cs_item_rev
  from catalog_sales
      ,item
      ,date_dim
 where cs_item_sk = i_item_sk
  and  d_date in (select d_date
                  from date_dim
                  where d_week_seq = (select d_week_seq 
                                      from date_dim
                                      where d_date = '1998-02-19'))
  and  cs_sold_date_sk = d_date_sk
 group by i_item_id),
 ws_items as
 (select i_item_id item_id
        ,sum(ws_ext_sales_price) ws_item_rev
  from web_sales
      ,item
      ,date_dim
 where ws_item_sk = i_item_sk
  and  d_date in (select d_date
                  from date_dim
                  where d_week_seq =(select d_week_seq 
                                     from date_dim
                                     where d_date = '1998-02-19'))
  and ws_sold_date_sk   = d_date_sk
 group by i_item_id)
  select  ss_items.item_id
       ,ss_item_rev
       ,ss_item_rev/(ss_item_rev+cs_item_rev+ws_item_rev)/3 * 100 ss_dev
       ,cs_item_rev
       ,cs_item_rev/(ss_item_rev+cs_item_rev+ws_item_rev)/3 * 100 cs_dev
       ,ws_item_rev
       ,ws_item_rev/(ss_item_rev+cs_item_rev+ws_item_rev)/3 * 100 ws_dev
       ,(ss_item_rev+cs_item_rev+ws_item_rev)/3 average
 from ss_items,cs_items,ws_items
 where ss_items.item_id=cs_items.item_id
   and ss_items.item_id=ws_items.item_id 
   and ss_item_rev between 0.9 * cs_item_rev and 1.1 * cs_item_rev
   and ss_item_rev between 0.9 * ws_item_rev and 1.1 * ws_item_rev
   and cs_item_rev between 0.9 * ss_item_rev and 1.1 * ss_item_rev
   and cs_item_rev between 0.9 * ws_item_rev and 1.1 * ws_item_rev
   and ws_item_rev between 0.9 * ss_item_rev and 1.1 * ss_item_rev
   and ws_item_rev between 0.9 * cs_item_rev and 1.1 * cs_item_rev
 order by item_id
         ,ss_item_rev
 limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@catalog_sales
PREHOOK: Input: default@date_dim
PREHOOK: Input: default@item
PREHOOK: Input: default@store_sales
PREHOOK: Input: default@web_sales
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain
with ss_items as
 (select i_item_id item_id
        ,sum(ss_ext_sales_price) ss_item_rev 
 from store_sales
     ,item
     ,date_dim
 where ss_item_sk = i_item_sk
   and d_date in (select d_date
                  from date_dim
                  where d_week_seq = (select d_week_seq 
                                      from date_dim
                                      where d_date = '1998-02-19'))
   and ss_sold_date_sk   = d_date_sk
 group by i_item_id),
 cs_items as
 (select i_item_id item_id
        ,sum(cs_ext_sales_price) cs_item_rev
  from catalog_sales
      ,item
      ,date_dim
 where cs_item_sk = i_item_sk
  and  d_date in (select d_date
                  from date_dim
                  where d_week_seq = (select d_week_seq 
                                      from date_dim
                                      where d_date = '1998-02-19'))
  and  cs_sold_date_sk = d_date_sk
 group by i_item_id),
 ws_items as
 (select i_item_id item_id
        ,sum(ws_ext_sales_price) ws_item_rev
  from web_sales
      ,item
      ,date_dim
 where ws_item_sk = i_item_sk
  and  d_date in (select d_date
                  from date_dim
                  where d_week_seq =(select d_week_seq 
                                     from date_dim
                                     where d_date = '1998-02-19'))
  and ws_sold_date_sk   = d_date_sk
 group by i_item_id)
  select  ss_items.item_id
       ,ss_item_rev
       ,ss_item_rev/(ss_item_rev+cs_item_rev+ws_item_rev)/3 * 100 ss_dev
       ,cs_item_rev
       ,cs_item_rev/(ss_item_rev+cs_item_rev+ws_item_rev)/3 * 100 cs_dev
       ,ws_item_rev
       ,ws_item_rev/(ss_item_rev+cs_item_rev+ws_item_rev)/3 * 100 ws_dev
       ,(ss_item_rev+cs_item_rev+ws_item_rev)/3 average
 from ss_items,cs_items,ws_items
 where ss_items.item_id=cs_items.item_id
   and ss_items.item_id=ws_items.item_id 
   and ss_item_rev between 0.9 * cs_item_rev and 1.1 * cs_item_rev
   and ss_item_rev between 0.9 * ws_item_rev and 1.1 * ws_item_rev
   and cs_item_rev between 0.9 * ss_item_rev and 1.1 * ss_item_rev
   and cs_item_rev between 0.9 * ws_item_rev and 1.1 * ws_item_rev
   and ws_item_rev between 0.9 * ss_item_rev and 1.1 * ss_item_rev
   and ws_item_rev between 0.9 * cs_item_rev and 1.1 * cs_item_rev
 order by item_id
         ,ss_item_rev
 limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@catalog_sales
POSTHOOK: Input: default@date_dim
POSTHOOK: Input: default@item
POSTHOOK: Input: default@store_sales
POSTHOOK: Input: default@web_sales
POSTHOOK: Output: hdfs://### HDFS PATH ###
Plan optimized by CBO.

Vertex dependency in root stage
Map 10 <- Reducer 16 (BROADCAST_EDGE)
Map 15 <- Reducer 13 (BROADCAST_EDGE)
Reducer 12 <- Map 11 (CUSTOM_SIMPLE_EDGE)
Reducer 13 <- Map 14 (XPROD_EDGE), Reducer 12 (XPROD_EDGE)
Reducer 16 <- Map 15 (SIMPLE_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 10 (BROADCAST_EDGE), Map 4 (SIMPLE_EDGE)
Reducer 3 <- Reducer 2 (SIMPLE_EDGE)
Reducer 5 <- Map 10 (BROADCAST_EDGE), Map 17 (SIMPLE_EDGE), Map 4 (SIMPLE_EDGE)
Reducer 6 <- Reducer 3 (BROADCAST_EDGE), Reducer 5 (SIMPLE_EDGE), Reducer 9 (BROADCAST_EDGE)
Reducer 7 <- Reducer 6 (SIMPLE_EDGE)
Reducer 8 <- Map 10 (BROADCAST_EDGE), Map 18 (SIMPLE_EDGE), Map 4 (SIMPLE_EDGE)
Reducer 9 <- Reducer 8 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 7 vectorized
      File Output Operator [FS_334]
        Limit [LIM_333] (rows=1 width=884)
          Number of rows:100
          Select Operator [SEL_332] (rows=1 width=884)
            Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
          <-Reducer 6 [SIMPLE_EDGE] vectorized
            SHUFFLE [RS_331]
              Select Operator [SEL_330] (rows=1 width=884)
                Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
                Filter Operator [FIL_329] (rows=1 width=1108)
                  predicate:(_col1 BETWEEN _col10 AND _col11 and _col5 BETWEEN _col10 AND _col11 and _col9 BETWEEN _col2 AND _col3 and _col9 BETWEEN _col6 AND _col7)
                  Map Join Operator [MAPJOIN_328] (rows=1 width=1108)
                    Conds:FIL_327._col0=RS_323._col0(Inner),HybridGraceHashJoin:true,Output:["_col0","_col1","_col2","_col3","_col5","_col6","_col7","_col9","_col10","_col11"]
                  <-Reducer 9 [BROADCAST_EDGE] vectorized
                    BROADCAST [RS_323]
                      PartitionCols:_col0
                      Select Operator [SEL_322] (rows=69 width=436)
                        Output:["_col0","_col1","_col2","_col3"]
                        Group By Operator [GBY_321] (rows=69 width=212)
                          Output:["_col0","_col1"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0
                        <-Reducer 8 [SIMPLE_EDGE]
                          SHUFFLE [RS_144]
                            PartitionCols:_col0
                            Group By Operator [GBY_143] (rows=69 width=212)
                              Output:["_col0","_col1"],aggregations:["sum(_col2)"],keys:_col4
                              Map Join Operator [MAPJOIN_271] (rows=31537 width=100)
                                Conds:MERGEJOIN_259._col0=RS_308._col0(Inner),HybridGraceHashJoin:true,Output:["_col2","_col4"]
                              <-Map 10 [BROADCAST_EDGE] vectorized
                                BROADCAST [RS_308]
                                  PartitionCols:_col0
                                  Map Join Operator [MAPJOIN_305] (rows=1 width=4)
                                    Conds:SEL_304._col1=RS_302._col0(Inner),HybridGraceHashJoin:true,Output:["_col0"]
                                  <-Reducer 16 [BROADCAST_EDGE] vectorized
                                    BROADCAST [RS_302]
                                      PartitionCols:_col0
                                      Group By Operator [GBY_301] (rows=2 width=94)
                                        Output:["_col0"],keys:KEY._col0
                                      <-Map 15 [SIMPLE_EDGE] vectorized
                                        SHUFFLE [RS_300]
                                          PartitionCols:_col0
                                          Group By Operator [GBY_299] (rows=2 width=94)
                                            Output:["_col0"],keys:_col2
                                            Map Join Operator [MAPJOIN_298] (rows=5 width=94)
                                              Conds:RS_26._col1=SEL_297._col1(Inner),HybridGraceHashJoin:true,Output:["_col2"]
                                            <-Reducer 13 [BROADCAST_EDGE]
                                              BROADCAST [RS_26]
                                                PartitionCols:_col1
                                                Merge Join Operator [MERGEJOIN_260] (rows=1 width=4)
                                                  Conds:(Inner),Output:["_col1"]
                                                <-Map 14 [XPROD_EDGE] vectorized
                                                  XPROD_EDGE [RS_295]
                                                    Select Operator [SEL_294] (rows=1 width=4)
                                                      Output:["_col0"]
                                                      Filter Operator [FIL_293] (rows=1 width=98)
                                                        predicate:((d_date = '1998-02-19') and d_week_seq is not null)
                                                        TableScan [TS_17] (rows=73049 width=98)
                                                          default@date_dim,date_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date","d_week_seq"]
                                                <-Reducer 12 [XPROD_EDGE] vectorized
                                                  XPROD_EDGE [RS_292]
                                                    Select Operator [SEL_291] (rows=1 width=8)
                                                      Filter Operator [FIL_290] (rows=1 width=8)
                                                        predicate:(sq_count_check(_col0) <= 1)
                                                        Group By Operator [GBY_289] (rows=1 width=8)
                                                          Output:["_col0"],aggregations:["count(VALUE._col0)"]
                                                        <-Map 11 [CUSTOM_SIMPLE_EDGE] vectorized
                                                          PARTITION_ONLY_SHUFFLE [RS_288]
                                                            Group By Operator [GBY_287] (rows=1 width=8)
                                                              Output:["_col0"],aggregations:["count()"]
                                                              Select Operator [SEL_286] (rows=1 width=94)
                                                                Filter Operator [FIL_285] (rows=1 width=94)
                                                                  predicate:(d_date = '1998-02-19')
                                                                  TableScan [TS_8] (rows=73049 width=94)
                                                                    default@date_dim,date_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date"]
                                            <-Select Operator [SEL_297] (rows=73049 width=98)
                                                Output:["_col0","_col1"]
                                                Filter Operator [FIL_296] (rows=73049 width=98)
                                                  predicate:(d_date is not null and d_week_seq is not null)
                                                  TableScan [TS_20] (rows=73049 width=98)
                                                    default@date_dim,date_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date","d_week_seq"]
                                  <-Select Operator [SEL_304] (rows=73049 width=98)
                                      Output:["_col0","_col1"]
                                      Filter Operator [FIL_303] (rows=73049 width=98)
                                        predicate:d_date is not null
                                        TableScan [TS_5] (rows=73049 width=98)
                                          default@date_dim,date_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_date"]
                              <-Merge Join Operator [MERGEJOIN_259] (rows=143966864 width=215)
                                  Conds:RS_320._col1=RS_284._col0(Inner),Output:["_col0","_col2","_col4"]
                                <-Map 4 [SIMPLE_EDGE] vectorized
                                  SHUFFLE [RS_284]
                                    PartitionCols:_col0
                                    Select Operator [SEL_281] (rows=462000 width=104)
                                      Output:["_col0","_col1"]
                                      TableScan [TS_3] (rows=462000 width=104)
                                        default@item,item,Tbl:COMPLETE,Col:COMPLETE,Output:["i_item_sk","i_item_id"]
                                <-Map 18 [SIMPLE_EDGE] vectorized
                                  SHUFFLE [RS_320]
                                    PartitionCols:_col1
                                    Select Operator [SEL_319] (rows=143966864 width=119)
                                      Output:["_col0","_col1","_col2"]
                                      Filter Operator [FIL_318] (rows=143966864 width=119)
                                        predicate:ws_sold_date_sk is not null
                                        TableScan [TS_98] (rows=144002668 width=119)
                                          default@web_sales,web_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["ws_sold_date_sk","ws_item_sk","ws_ext_sales_price"]
                  <-Filter Operator [FIL_327] (rows=1 width=772)
                      predicate:(_col1 BETWEEN _col6 AND _col7 and _col5 BETWEEN _col2 AND _col3)
                      Map Join Operator [MAPJOIN_326] (rows=68 width=772)
                        Conds:RS_317._col0=SEL_325._col0(Inner),HybridGraceHashJoin:true,Output:["_col0","_col1","_col2","_col3","_col5","_col6","_col7"]
                      <-Reducer 3 [BROADCAST_EDGE] vectorized
                        BROADCAST [RS_317]
                          PartitionCols:_col0
                          Select Operator [SEL_316] (rows=68 width=436)
                            Output:["_col0","_col1","_col2","_col3"]
                            Group By Operator [GBY_315] (rows=68 width=212)
                              Output:["_col0","_col1"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0
                            <-Reducer 2 [SIMPLE_EDGE]
                              SHUFFLE [RS_46]
                                PartitionCols:_col0
                                Group By Operator [GBY_45] (rows=68 width=212)
                                  Output:["_col0","_col1"],aggregations:["sum(_col2)"],keys:_col4
                                  Map Join Operator [MAPJOIN_269] (rows=62327 width=100)
                                    Conds:MERGEJOIN_257._col0=RS_306._col0(Inner),HybridGraceHashJoin:true,Output:["_col2","_col4"]
                                  <-Map 10 [BROADCAST_EDGE] vectorized
                                    BROADCAST [RS_306]
                                      PartitionCols:_col0
                                       Please refer to the previous Map Join Operator [MAPJOIN_305]
                                  <-Merge Join Operator [MERGEJOIN_257] (rows=286549727 width=215)
                                      Conds:RS_314._col1=RS_282._col0(Inner),Output:["_col0","_col2","_col4"]
                                    <-Map 4 [SIMPLE_EDGE] vectorized
                                      SHUFFLE [RS_282]
                                        PartitionCols:_col0
                                         Please refer to the previous Select Operator [SEL_281]
                                    <-Map 1 [SIMPLE_EDGE] vectorized
                                      SHUFFLE [RS_314]
                                        PartitionCols:_col1
                                        Select Operator [SEL_313] (rows=286549727 width=119)
                                          Output:["_col0","_col1","_col2"]
                                          Filter Operator [FIL_312] (rows=286549727 width=119)
                                            predicate:cs_sold_date_sk is not null
                                            TableScan [TS_0] (rows=287989836 width=119)
                                              default@catalog_sales,catalog_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["cs_sold_date_sk","cs_item_sk","cs_ext_sales_price"]
                      <-Select Operator [SEL_325] (rows=69 width=436)
                          Output:["_col0","_col1","_col2","_col3"]
                          Group By Operator [GBY_324] (rows=69 width=212)
                            Output:["_col0","_col1"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0
                          <-Reducer 5 [SIMPLE_EDGE]
                            SHUFFLE [RS_95]
                              PartitionCols:_col0
                              Group By Operator [GBY_94] (rows=69 width=212)
                                Output:["_col0","_col1"],aggregations:["sum(_col2)"],keys:_col4
                                Map Join Operator [MAPJOIN_270] (rows=120498 width=100)
                                  Conds:MERGEJOIN_258._col0=RS_307._col0(Inner),HybridGraceHashJoin:true,Output:["_col2","_col4"]
                                <-Map 10 [BROADCAST_EDGE] vectorized
                                  BROADCAST [RS_307]
                                    PartitionCols:_col0
                                     Please refer to the previous Map Join Operator [MAPJOIN_305]
                                <-Merge Join Operator [MERGEJOIN_258] (rows=550076554 width=210)
                                    Conds:RS_311._col1=RS_283._col0(Inner),Output:["_col0","_col2","_col4"]
                                  <-Map 4 [SIMPLE_EDGE] vectorized
                                    SHUFFLE [RS_283]
                                      PartitionCols:_col0
                                       Please refer to the previous Select Operator [SEL_281]
                                  <-Map 17 [SIMPLE_EDGE] vectorized
                                    SHUFFLE [RS_311]
                                      PartitionCols:_col1
                                      Select Operator [SEL_310] (rows=550076554 width=114)
                                        Output:["_col0","_col1","_col2"]
                                        Filter Operator [FIL_309] (rows=550076554 width=114)
                                          predicate:ss_sold_date_sk is not null
                                          TableScan [TS_49] (rows=575995635 width=114)
                                            default@store_sales,store_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["ss_sold_date_sk","ss_item_sk","ss_ext_sales_price"]

