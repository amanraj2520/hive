PREHOOK: query: explain
select  
  cd_gender,
  cd_marital_status,
  cd_education_status,
  count(*) cnt1,
  cd_purchase_estimate,
  count(*) cnt2,
  cd_credit_rating,
  count(*) cnt3
 from
  customer c,customer_address ca,customer_demographics
 where
  c.c_current_addr_sk = ca.ca_address_sk and
  ca_state in ('CO','IL','MN') and
  cd_demo_sk = c.c_current_cdemo_sk and 
  exists (select *
          from store_sales,date_dim
          where c.c_customer_sk = ss_customer_sk and
                ss_sold_date_sk = d_date_sk and
                d_year = 1999 and
                d_moy between 1 and 1+2) and
   (not exists (select *
            from web_sales,date_dim
            where c.c_customer_sk = ws_bill_customer_sk and
                  ws_sold_date_sk = d_date_sk and
                  d_year = 1999 and
                  d_moy between 1 and 1+2) and
    not exists (select * 
            from catalog_sales,date_dim
            where c.c_customer_sk = cs_ship_customer_sk and
                  cs_sold_date_sk = d_date_sk and
                  d_year = 1999 and
                  d_moy between 1 and 1+2))
 group by cd_gender,
          cd_marital_status,
          cd_education_status,
          cd_purchase_estimate,
          cd_credit_rating
 order by cd_gender,
          cd_marital_status,
          cd_education_status,
          cd_purchase_estimate,
          cd_credit_rating
 limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@catalog_sales
PREHOOK: Input: default@customer
PREHOOK: Input: default@customer_address
PREHOOK: Input: default@customer_demographics
PREHOOK: Input: default@date_dim
PREHOOK: Input: default@store_sales
PREHOOK: Input: default@web_sales
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain
select  
  cd_gender,
  cd_marital_status,
  cd_education_status,
  count(*) cnt1,
  cd_purchase_estimate,
  count(*) cnt2,
  cd_credit_rating,
  count(*) cnt3
 from
  customer c,customer_address ca,customer_demographics
 where
  c.c_current_addr_sk = ca.ca_address_sk and
  ca_state in ('CO','IL','MN') and
  cd_demo_sk = c.c_current_cdemo_sk and 
  exists (select *
          from store_sales,date_dim
          where c.c_customer_sk = ss_customer_sk and
                ss_sold_date_sk = d_date_sk and
                d_year = 1999 and
                d_moy between 1 and 1+2) and
   (not exists (select *
            from web_sales,date_dim
            where c.c_customer_sk = ws_bill_customer_sk and
                  ws_sold_date_sk = d_date_sk and
                  d_year = 1999 and
                  d_moy between 1 and 1+2) and
    not exists (select * 
            from catalog_sales,date_dim
            where c.c_customer_sk = cs_ship_customer_sk and
                  cs_sold_date_sk = d_date_sk and
                  d_year = 1999 and
                  d_moy between 1 and 1+2))
 group by cd_gender,
          cd_marital_status,
          cd_education_status,
          cd_purchase_estimate,
          cd_credit_rating
 order by cd_gender,
          cd_marital_status,
          cd_education_status,
          cd_purchase_estimate,
          cd_credit_rating
 limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@catalog_sales
POSTHOOK: Input: default@customer
POSTHOOK: Input: default@customer_address
POSTHOOK: Input: default@customer_demographics
POSTHOOK: Input: default@date_dim
POSTHOOK: Input: default@store_sales
POSTHOOK: Input: default@web_sales
POSTHOOK: Output: hdfs://### HDFS PATH ###
Plan optimized by CBO.

Vertex dependency in root stage
Map 10 <- Map 9 (BROADCAST_EDGE)
Map 12 <- Map 9 (BROADCAST_EDGE)
Map 8 <- Map 9 (BROADCAST_EDGE)
Reducer 11 <- Map 10 (SIMPLE_EDGE)
Reducer 13 <- Map 12 (SIMPLE_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 6 (SIMPLE_EDGE)
Reducer 3 <- Map 7 (SIMPLE_EDGE), Map 8 (BROADCAST_EDGE), Reducer 11 (BROADCAST_EDGE), Reducer 13 (BROADCAST_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 4 <- Reducer 3 (SIMPLE_EDGE)
Reducer 5 <- Reducer 4 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 5 vectorized
      File Output Operator [FS_158]
        Limit [LIM_157] (rows=1 width=383)
          Number of rows:100
          Select Operator [SEL_156] (rows=1 width=383)
            Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
          <-Reducer 4 [SIMPLE_EDGE] vectorized
            SHUFFLE [RS_155]
              Select Operator [SEL_154] (rows=1 width=383)
                Output:["_col0","_col1","_col2","_col3","_col4","_col6"]
                Group By Operator [GBY_153] (rows=1 width=367)
                  Output:["_col0","_col1","_col2","_col3","_col4","_col5"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2, KEY._col3, KEY._col4
                <-Reducer 3 [SIMPLE_EDGE]
                  SHUFFLE [RS_68]
                    PartitionCols:_col0, _col1, _col2, _col3, _col4
                    Group By Operator [GBY_67] (rows=1 width=367)
                      Output:["_col0","_col1","_col2","_col3","_col4","_col5"],aggregations:["count()"],keys:_col6, _col7, _col8, _col9, _col10
                      Select Operator [SEL_66] (rows=1 width=363)
                        Output:["_col6","_col7","_col8","_col9","_col10"]
                        Filter Operator [FIL_65] (rows=1 width=363)
                          predicate:_col14 is null
                          Map Join Operator [MAPJOIN_111] (rows=1 width=363)
                            Conds:SEL_47._col0=RS_152._col0(Left Outer),HybridGraceHashJoin:true,Output:["_col6","_col7","_col8","_col9","_col10","_col14"]
                          <-Reducer 13 [BROADCAST_EDGE] vectorized
                            BROADCAST [RS_152]
                              PartitionCols:_col0
                              Select Operator [SEL_151] (rows=115467 width=7)
                                Output:["_col0","_col1"]
                                Group By Operator [GBY_150] (rows=115467 width=3)
                                  Output:["_col0"],keys:KEY._col0
                                <-Map 12 [SIMPLE_EDGE] vectorized
                                  SHUFFLE [RS_149]
                                    PartitionCols:_col0
                                    Group By Operator [GBY_148] (rows=115467 width=3)
                                      Output:["_col0"],keys:_col1
                                      Map Join Operator [MAPJOIN_147] (rows=23255411 width=3)
                                        Conds:SEL_146._col0=RS_130._col0(Inner),HybridGraceHashJoin:true,Output:["_col1"]
                                      <-Map 9 [BROADCAST_EDGE] vectorized
                                        BROADCAST [RS_130]
                                          PartitionCols:_col0
                                          Select Operator [SEL_127] (rows=150 width=4)
                                            Output:["_col0"]
                                            Filter Operator [FIL_126] (rows=150 width=12)
                                              predicate:((d_year = 1999) and d_moy BETWEEN 1 AND 3)
                                              TableScan [TS_11] (rows=73049 width=12)
                                                default@date_dim,date_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_year","d_moy"]
                                      <-Select Operator [SEL_146] (rows=285115246 width=7)
                                          Output:["_col0","_col1"]
                                          Filter Operator [FIL_145] (rows=285115246 width=7)
                                            predicate:(cs_ship_customer_sk is not null and cs_sold_date_sk is not null)
                                            TableScan [TS_48] (rows=287989836 width=7)
                                              default@catalog_sales,catalog_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["cs_sold_date_sk","cs_ship_customer_sk"]
                          <-Select Operator [SEL_47] (rows=1 width=367)
                              Output:["_col0","_col6","_col7","_col8","_col9","_col10"]
                              Filter Operator [FIL_46] (rows=1 width=367)
                                predicate:_col12 is null
                                Map Join Operator [MAPJOIN_110] (rows=33 width=367)
                                  Conds:MAPJOIN_109._col0=RS_144._col0(Left Outer),HybridGraceHashJoin:true,Output:["_col0","_col6","_col7","_col8","_col9","_col10","_col12"]
                                <-Reducer 11 [BROADCAST_EDGE] vectorized
                                  BROADCAST [RS_144]
                                    PartitionCols:_col0
                                    Select Operator [SEL_143] (rows=116289 width=7)
                                      Output:["_col0","_col1"]
                                      Group By Operator [GBY_142] (rows=116289 width=3)
                                        Output:["_col0"],keys:KEY._col0
                                      <-Map 10 [SIMPLE_EDGE] vectorized
                                        SHUFFLE [RS_141]
                                          PartitionCols:_col0
                                          Group By Operator [GBY_140] (rows=116289 width=3)
                                            Output:["_col0"],keys:_col1
                                            Map Join Operator [MAPJOIN_139] (rows=11823304 width=3)
                                              Conds:SEL_138._col0=RS_129._col0(Inner),HybridGraceHashJoin:true,Output:["_col1"]
                                            <-Map 9 [BROADCAST_EDGE] vectorized
                                              BROADCAST [RS_129]
                                                PartitionCols:_col0
                                                 Please refer to the previous Select Operator [SEL_127]
                                            <-Select Operator [SEL_138] (rows=143930993 width=7)
                                                Output:["_col0","_col1"]
                                                Filter Operator [FIL_137] (rows=143930993 width=7)
                                                  predicate:(ws_bill_customer_sk is not null and ws_sold_date_sk is not null)
                                                  TableScan [TS_18] (rows=144002668 width=7)
                                                    default@web_sales,web_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["ws_sold_date_sk","ws_bill_customer_sk"]
                                <-Map Join Operator [MAPJOIN_109] (rows=6841 width=363)
                                    Conds:MERGEJOIN_105._col0=RS_136._col0(Left Semi),HybridGraceHashJoin:true,Output:["_col0","_col6","_col7","_col8","_col9","_col10"]
                                  <-Map 8 [BROADCAST_EDGE] vectorized
                                    BROADCAST [RS_136]
                                      PartitionCols:_col0
                                      Group By Operator [GBY_135] (rows=116289 width=1)
                                        Output:["_col0"],keys:_col0
                                        Select Operator [SEL_134] (rows=43153353 width=1)
                                          Output:["_col0"]
                                          Map Join Operator [MAPJOIN_133] (rows=43153353 width=1)
                                            Conds:SEL_132._col0=RS_128._col0(Inner),HybridGraceHashJoin:true,Output:["_col1"]
                                          <-Map 9 [BROADCAST_EDGE] vectorized
                                            BROADCAST [RS_128]
                                              PartitionCols:_col0
                                               Please refer to the previous Select Operator [SEL_127]
                                          <-Select Operator [SEL_132] (rows=525327388 width=7)
                                              Output:["_col0","_col1"]
                                              Filter Operator [FIL_131] (rows=525327388 width=7)
                                                predicate:(ss_customer_sk is not null and ss_sold_date_sk is not null)
                                                TableScan [TS_8] (rows=575995635 width=7)
                                                  default@store_sales,store_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["ss_sold_date_sk","ss_customer_sk"]
                                  <-Merge Join Operator [MERGEJOIN_105] (rows=4605476 width=363)
                                      Conds:RS_35._col1=RS_125._col0(Inner),Output:["_col0","_col6","_col7","_col8","_col9","_col10"]
                                    <-Map 7 [SIMPLE_EDGE] vectorized
                                      SHUFFLE [RS_125]
                                        PartitionCols:_col0
                                        Select Operator [SEL_124] (rows=1861800 width=363)
                                          Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                                          TableScan [TS_6] (rows=1861800 width=363)
                                            default@customer_demographics,customer_demographics,Tbl:COMPLETE,Col:COMPLETE,Output:["cd_demo_sk","cd_gender","cd_marital_status","cd_education_status","cd_purchase_estimate","cd_credit_rating"]
                                    <-Reducer 2 [SIMPLE_EDGE]
                                      SHUFFLE [RS_35]
                                        PartitionCols:_col1
                                        Merge Join Operator [MERGEJOIN_104] (rows=4541258 width=5)
                                          Conds:RS_120._col2=RS_123._col0(Inner),Output:["_col0","_col1"]
                                        <-Map 1 [SIMPLE_EDGE] vectorized
                                          SHUFFLE [RS_120]
                                            PartitionCols:_col2
                                            Select Operator [SEL_119] (rows=77201384 width=11)
                                              Output:["_col0","_col1","_col2"]
                                              Filter Operator [FIL_118] (rows=77201384 width=11)
                                                predicate:(c_current_addr_sk is not null and c_current_cdemo_sk is not null)
                                                TableScan [TS_0] (rows=80000000 width=11)
                                                  default@customer,c,Tbl:COMPLETE,Col:COMPLETE,Output:["c_customer_sk","c_current_cdemo_sk","c_current_addr_sk"]
                                        <-Map 6 [SIMPLE_EDGE] vectorized
                                          SHUFFLE [RS_123]
                                            PartitionCols:_col0
                                            Select Operator [SEL_122] (rows=2352941 width=90)
                                              Output:["_col0"]
                                              Filter Operator [FIL_121] (rows=2352941 width=90)
                                                predicate:(ca_state) IN ('CO', 'IL', 'MN')
                                                TableScan [TS_3] (rows=40000000 width=90)
                                                  default@customer_address,ca,Tbl:COMPLETE,Col:COMPLETE,Output:["ca_address_sk","ca_state"]

