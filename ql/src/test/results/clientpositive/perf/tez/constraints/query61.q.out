Warning: Map Join MAPJOIN[163][bigTable=?] in task 'Reducer 4' is a cross product
PREHOOK: query: explain
select  promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
  (select sum(ss_ext_sales_price) promotions
   from  store_sales
        ,store
        ,promotion
        ,date_dim
        ,customer
        ,customer_address 
        ,item
   where ss_sold_date_sk = d_date_sk
   and   ss_store_sk = s_store_sk
   and   ss_promo_sk = p_promo_sk
   and   ss_customer_sk= c_customer_sk
   and   ca_address_sk = c_current_addr_sk
   and   ss_item_sk = i_item_sk 
   and   ca_gmt_offset = -7
   and   i_category = 'Electronics'
   and   (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
   and   s_gmt_offset = -7
   and   d_year = 1999
   and   d_moy  = 11) promotional_sales,
  (select sum(ss_ext_sales_price) total
   from  store_sales
        ,store
        ,date_dim
        ,customer
        ,customer_address
        ,item
   where ss_sold_date_sk = d_date_sk
   and   ss_store_sk = s_store_sk
   and   ss_customer_sk= c_customer_sk
   and   ca_address_sk = c_current_addr_sk
   and   ss_item_sk = i_item_sk
   and   ca_gmt_offset = -7
   and   i_category = 'Electronics'
   and   s_gmt_offset = -7
   and   d_year = 1999
   and   d_moy  = 11) all_sales
order by promotions, total
limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@customer
PREHOOK: Input: default@customer_address
PREHOOK: Input: default@date_dim
PREHOOK: Input: default@item
PREHOOK: Input: default@promotion
PREHOOK: Input: default@store
PREHOOK: Input: default@store_sales
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain
select  promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
  (select sum(ss_ext_sales_price) promotions
   from  store_sales
        ,store
        ,promotion
        ,date_dim
        ,customer
        ,customer_address 
        ,item
   where ss_sold_date_sk = d_date_sk
   and   ss_store_sk = s_store_sk
   and   ss_promo_sk = p_promo_sk
   and   ss_customer_sk= c_customer_sk
   and   ca_address_sk = c_current_addr_sk
   and   ss_item_sk = i_item_sk 
   and   ca_gmt_offset = -7
   and   i_category = 'Electronics'
   and   (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
   and   s_gmt_offset = -7
   and   d_year = 1999
   and   d_moy  = 11) promotional_sales,
  (select sum(ss_ext_sales_price) total
   from  store_sales
        ,store
        ,date_dim
        ,customer
        ,customer_address
        ,item
   where ss_sold_date_sk = d_date_sk
   and   ss_store_sk = s_store_sk
   and   ss_customer_sk= c_customer_sk
   and   ca_address_sk = c_current_addr_sk
   and   ss_item_sk = i_item_sk
   and   ca_gmt_offset = -7
   and   i_category = 'Electronics'
   and   s_gmt_offset = -7
   and   d_year = 1999
   and   d_moy  = 11) all_sales
order by promotions, total
limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@customer
POSTHOOK: Input: default@customer_address
POSTHOOK: Input: default@date_dim
POSTHOOK: Input: default@item
POSTHOOK: Input: default@promotion
POSTHOOK: Input: default@store
POSTHOOK: Input: default@store_sales
POSTHOOK: Output: hdfs://### HDFS PATH ###
Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Map 6 (BROADCAST_EDGE), Map 7 (BROADCAST_EDGE), Map 8 (BROADCAST_EDGE)
Map 15 <- Map 6 (BROADCAST_EDGE), Map 8 (BROADCAST_EDGE)
Reducer 10 <- Map 14 (SIMPLE_EDGE), Map 9 (SIMPLE_EDGE)
Reducer 11 <- Map 13 (BROADCAST_EDGE), Map 15 (SIMPLE_EDGE), Reducer 10 (SIMPLE_EDGE)
Reducer 12 <- Reducer 11 (CUSTOM_SIMPLE_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 13 (BROADCAST_EDGE), Map 9 (SIMPLE_EDGE)
Reducer 3 <- Map 14 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 4 <- Reducer 12 (BROADCAST_EDGE), Reducer 3 (CUSTOM_SIMPLE_EDGE)
Reducer 5 <- Reducer 4 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 5 vectorized
      File Output Operator [FS_218]
        Limit [LIM_217] (rows=1 width=336)
          Number of rows:100
          Select Operator [SEL_216] (rows=1 width=336)
            Output:["_col0","_col1","_col2"]
          <-Reducer 4 [SIMPLE_EDGE] vectorized
            SHUFFLE [RS_215]
              Select Operator [SEL_214] (rows=1 width=336)
                Output:["_col0","_col1","_col2"]
                Map Join Operator [MAPJOIN_213] (rows=1 width=448)
                  Conds:(Inner),Output:["_col0","_col1","_col2","_col3"]
                <-Reducer 12 [BROADCAST_EDGE] vectorized
                  BROADCAST [RS_210]
                    Select Operator [SEL_209] (rows=1 width=224)
                      Output:["_col0","_col1"]
                      Group By Operator [GBY_208] (rows=1 width=112)
                        Output:["_col0"],aggregations:["sum(VALUE._col0)"]
                      <-Reducer 11 [CUSTOM_SIMPLE_EDGE]
                        PARTITION_ONLY_SHUFFLE [RS_83]
                          Group By Operator [GBY_82] (rows=1 width=112)
                            Output:["_col0"],aggregations:["sum(_col1)"]
                            Map Join Operator [MAPJOIN_162] (rows=529208 width=0)
                              Conds:SEL_74._col0=RS_197._col0(Inner),HybridGraceHashJoin:true,Output:["_col1"]
                            <-Map 13 [BROADCAST_EDGE] vectorized
                              BROADCAST [RS_197]
                                PartitionCols:_col0
                                Select Operator [SEL_195] (rows=46200 width=4)
                                  Output:["_col0"]
                                  Filter Operator [FIL_194] (rows=46200 width=94)
                                    predicate:(i_category = 'Electronics')
                                    TableScan [TS_29] (rows=462000 width=94)
                                      default@item,item,Tbl:COMPLETE,Col:COMPLETE,Output:["i_item_sk","i_category"]
                            <-Select Operator [SEL_74] (rows=549816 width=4)
                                Output:["_col0","_col1"]
                                Merge Join Operator [MERGEJOIN_161] (rows=549816 width=4)
                                  Conds:RS_71._col0=RS_207._col1(Inner),Output:["_col3","_col5"]
                                <-Map 15 [SIMPLE_EDGE] vectorized
                                  SHUFFLE [RS_207]
                                    PartitionCols:_col1
                                    Select Operator [SEL_206] (rows=2749079 width=4)
                                      Output:["_col0","_col1","_col2"]
                                      Map Join Operator [MAPJOIN_205] (rows=2749079 width=4)
                                        Conds:MAPJOIN_204._col3=RS_175._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2","_col4"]
                                      <-Map 6 [BROADCAST_EDGE] vectorized
                                        BROADCAST [RS_175]
                                          PartitionCols:_col0
                                          Select Operator [SEL_173] (rows=341 width=4)
                                            Output:["_col0"]
                                            Filter Operator [FIL_172] (rows=341 width=115)
                                              predicate:(s_gmt_offset = -7)
                                              TableScan [TS_3] (rows=1704 width=115)
                                                default@store,store,Tbl:COMPLETE,Col:COMPLETE,Output:["s_store_sk","s_gmt_offset"]
                                      <-Map Join Operator [MAPJOIN_204] (rows=13737330 width=4)
                                          Conds:SEL_203._col0=RS_182._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2","_col3","_col4"]
                                        <-Map 8 [BROADCAST_EDGE] vectorized
                                          BROADCAST [RS_182]
                                            PartitionCols:_col0
                                            Select Operator [SEL_180] (rows=50 width=4)
                                              Output:["_col0"]
                                              Filter Operator [FIL_179] (rows=50 width=12)
                                                predicate:((d_moy = 11) and (d_year = 1999))
                                                TableScan [TS_16] (rows=73049 width=12)
                                                  default@date_dim,date_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_year","d_moy"]
                                        <-Select Operator [SEL_203] (rows=501694138 width=122)
                                            Output:["_col0","_col1","_col2","_col3","_col4"]
                                            Filter Operator [FIL_202] (rows=501694138 width=122)
                                              predicate:(ss_customer_sk is not null and ss_sold_date_sk is not null and ss_store_sk is not null)
                                              TableScan [TS_52] (rows=575995635 width=122)
                                                default@store_sales,store_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["ss_sold_date_sk","ss_item_sk","ss_customer_sk","ss_store_sk","ss_ext_sales_price"]
                                <-Reducer 10 [SIMPLE_EDGE]
                                  SHUFFLE [RS_71]
                                    PartitionCols:_col0
                                    Merge Join Operator [MERGEJOIN_158] (rows=16000001 width=4)
                                      Conds:RS_193._col1=RS_201._col0(Inner),Output:["_col0"]
                                    <-Map 14 [SIMPLE_EDGE] vectorized
                                      SHUFFLE [RS_201]
                                        PartitionCols:_col0
                                        Select Operator [SEL_199] (rows=8000000 width=4)
                                          Output:["_col0"]
                                          Filter Operator [FIL_198] (rows=8000000 width=112)
                                            predicate:(ca_gmt_offset = -7)
                                            TableScan [TS_32] (rows=40000000 width=112)
                                              default@customer_address,customer_address,Tbl:COMPLETE,Col:COMPLETE,Output:["ca_address_sk","ca_gmt_offset"]
                                    <-Map 9 [SIMPLE_EDGE] vectorized
                                      SHUFFLE [RS_193]
                                        PartitionCols:_col1
                                        Select Operator [SEL_191] (rows=80000000 width=8)
                                          Output:["_col0","_col1"]
                                          Filter Operator [FIL_190] (rows=80000000 width=8)
                                            predicate:c_current_addr_sk is not null
                                            TableScan [TS_19] (rows=80000000 width=8)
                                              default@customer,customer,Tbl:COMPLETE,Col:COMPLETE,Output:["c_customer_sk","c_current_addr_sk"]
                <-Select Operator [SEL_212] (rows=1 width=224)
                    Output:["_col0","_col1"]
                    Group By Operator [GBY_211] (rows=1 width=112)
                      Output:["_col0"],aggregations:["sum(VALUE._col0)"]
                    <-Reducer 3 [CUSTOM_SIMPLE_EDGE]
                      PARTITION_ONLY_SHUFFLE [RS_43]
                        Group By Operator [GBY_42] (rows=1 width=112)
                          Output:["_col0"],aggregations:["sum(_col1)"]
                          Merge Join Operator [MERGEJOIN_157] (rows=505397 width=0)
                            Conds:RS_38._col2=RS_200._col0(Inner),Output:["_col1"]
                          <-Map 14 [SIMPLE_EDGE] vectorized
                            SHUFFLE [RS_200]
                              PartitionCols:_col0
                               Please refer to the previous Select Operator [SEL_199]
                          <-Reducer 2 [SIMPLE_EDGE]
                            SHUFFLE [RS_38]
                              PartitionCols:_col2
                              Map Join Operator [MAPJOIN_156] (rows=2526983 width=4)
                                Conds:SEL_28._col0=RS_196._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2"]
                              <-Map 13 [BROADCAST_EDGE] vectorized
                                BROADCAST [RS_196]
                                  PartitionCols:_col0
                                   Please refer to the previous Select Operator [SEL_195]
                              <-Select Operator [SEL_28] (rows=2625387 width=8)
                                  Output:["_col0","_col1","_col2"]
                                  Merge Join Operator [MERGEJOIN_155] (rows=2625387 width=8)
                                    Conds:RS_189._col2=RS_192._col0(Inner),Output:["_col1","_col3","_col6"]
                                  <-Map 9 [SIMPLE_EDGE] vectorized
                                    SHUFFLE [RS_192]
                                      PartitionCols:_col0
                                       Please refer to the previous Select Operator [SEL_191]
                                  <-Map 1 [SIMPLE_EDGE] vectorized
                                    SHUFFLE [RS_189]
                                      PartitionCols:_col2
                                      Map Join Operator [MAPJOIN_188] (rows=2625387 width=4)
                                        Conds:SEL_187._col0=RS_181._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2","_col3"]
                                      <-Map 8 [BROADCAST_EDGE] vectorized
                                        BROADCAST [RS_181]
                                          PartitionCols:_col0
                                           Please refer to the previous Select Operator [SEL_180]
                                      <-Select Operator [SEL_187] (rows=95880426 width=97)
                                          Output:["_col0","_col1","_col2","_col3"]
                                          Map Join Operator [MAPJOIN_186] (rows=95880426 width=97)
                                            Conds:MAPJOIN_185._col4=RS_178._col0(Inner),HybridGraceHashJoin:true,Output:["_col0","_col1","_col2","_col5"]
                                          <-Map 7 [BROADCAST_EDGE] vectorized
                                            BROADCAST [RS_178]
                                              PartitionCols:_col0
                                              Select Operator [SEL_177] (rows=2300 width=4)
                                                Output:["_col0"]
                                                Filter Operator [FIL_176] (rows=2300 width=259)
                                                  predicate:((p_channel_dmail = 'Y') or (p_channel_email = 'Y') or (p_channel_tv = 'Y'))
                                                  TableScan [TS_6] (rows=2300 width=259)
                                                    default@promotion,promotion,Tbl:COMPLETE,Col:COMPLETE,Output:["p_promo_sk","p_channel_dmail","p_channel_email","p_channel_tv"]
                                          <-Map Join Operator [MAPJOIN_185] (rows=95880426 width=100)
                                              Conds:SEL_184._col3=RS_174._col0(Inner),HybridGraceHashJoin:true,Output:["_col0","_col1","_col2","_col4","_col5"]
                                            <-Map 6 [BROADCAST_EDGE] vectorized
                                              BROADCAST [RS_174]
                                                PartitionCols:_col0
                                                 Please refer to the previous Select Operator [SEL_173]
                                            <-Select Operator [SEL_184] (rows=479120970 width=126)
                                                Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                                                Filter Operator [FIL_183] (rows=479120970 width=126)
                                                  predicate:(ss_customer_sk is not null and ss_promo_sk is not null and ss_sold_date_sk is not null and ss_store_sk is not null)
                                                  TableScan [TS_0] (rows=575995635 width=126)
                                                    default@store_sales,store_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["ss_sold_date_sk","ss_item_sk","ss_customer_sk","ss_store_sk","ss_promo_sk","ss_ext_sales_price"]

