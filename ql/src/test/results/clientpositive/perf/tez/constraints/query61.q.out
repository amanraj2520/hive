Warning: Shuffle Join MERGEJOIN[163][tables = [$hdt$_0, $hdt$_1]] in Stage 'Reducer 5' is a cross product
PREHOOK: query: explain
select  promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
  (select sum(ss_ext_sales_price) promotions
   from  store_sales
        ,store
        ,promotion
        ,date_dim
        ,customer
        ,customer_address 
        ,item
   where ss_sold_date_sk = d_date_sk
   and   ss_store_sk = s_store_sk
   and   ss_promo_sk = p_promo_sk
   and   ss_customer_sk= c_customer_sk
   and   ca_address_sk = c_current_addr_sk
   and   ss_item_sk = i_item_sk 
   and   ca_gmt_offset = -7
   and   i_category = 'Electronics'
   and   (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
   and   s_gmt_offset = -7
   and   d_year = 1999
   and   d_moy  = 11) promotional_sales,
  (select sum(ss_ext_sales_price) total
   from  store_sales
        ,store
        ,date_dim
        ,customer
        ,customer_address
        ,item
   where ss_sold_date_sk = d_date_sk
   and   ss_store_sk = s_store_sk
   and   ss_customer_sk= c_customer_sk
   and   ca_address_sk = c_current_addr_sk
   and   ss_item_sk = i_item_sk
   and   ca_gmt_offset = -7
   and   i_category = 'Electronics'
   and   s_gmt_offset = -7
   and   d_year = 1999
   and   d_moy  = 11) all_sales
order by promotions, total
limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@customer
PREHOOK: Input: default@customer_address
PREHOOK: Input: default@date_dim
PREHOOK: Input: default@item
PREHOOK: Input: default@promotion
PREHOOK: Input: default@store
PREHOOK: Input: default@store_sales
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain
select  promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
  (select sum(ss_ext_sales_price) promotions
   from  store_sales
        ,store
        ,promotion
        ,date_dim
        ,customer
        ,customer_address 
        ,item
   where ss_sold_date_sk = d_date_sk
   and   ss_store_sk = s_store_sk
   and   ss_promo_sk = p_promo_sk
   and   ss_customer_sk= c_customer_sk
   and   ca_address_sk = c_current_addr_sk
   and   ss_item_sk = i_item_sk 
   and   ca_gmt_offset = -7
   and   i_category = 'Electronics'
   and   (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
   and   s_gmt_offset = -7
   and   d_year = 1999
   and   d_moy  = 11) promotional_sales,
  (select sum(ss_ext_sales_price) total
   from  store_sales
        ,store
        ,date_dim
        ,customer
        ,customer_address
        ,item
   where ss_sold_date_sk = d_date_sk
   and   ss_store_sk = s_store_sk
   and   ss_customer_sk= c_customer_sk
   and   ca_address_sk = c_current_addr_sk
   and   ss_item_sk = i_item_sk
   and   ca_gmt_offset = -7
   and   i_category = 'Electronics'
   and   s_gmt_offset = -7
   and   d_year = 1999
   and   d_moy  = 11) all_sales
order by promotions, total
limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@customer
POSTHOOK: Input: default@customer_address
POSTHOOK: Input: default@date_dim
POSTHOOK: Input: default@item
POSTHOOK: Input: default@promotion
POSTHOOK: Input: default@store
POSTHOOK: Input: default@store_sales
POSTHOOK: Output: hdfs://### HDFS PATH ###
Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Map 7 (BROADCAST_EDGE), Map 8 (BROADCAST_EDGE), Map 9 (BROADCAST_EDGE)
Map 16 <- Map 7 (BROADCAST_EDGE), Map 9 (BROADCAST_EDGE)
Reducer 11 <- Map 10 (SIMPLE_EDGE), Map 15 (SIMPLE_EDGE)
Reducer 12 <- Map 14 (BROADCAST_EDGE), Map 16 (SIMPLE_EDGE), Reducer 11 (SIMPLE_EDGE)
Reducer 13 <- Reducer 12 (CUSTOM_SIMPLE_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 10 (SIMPLE_EDGE), Map 14 (BROADCAST_EDGE)
Reducer 3 <- Map 15 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 4 <- Reducer 3 (CUSTOM_SIMPLE_EDGE)
Reducer 5 <- Reducer 13 (XPROD_EDGE), Reducer 4 (XPROD_EDGE)
Reducer 6 <- Reducer 5 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 6 vectorized
      File Output Operator [FS_215]
        Limit [LIM_214] (rows=1 width=336)
          Number of rows:100
          Select Operator [SEL_213] (rows=1 width=336)
            Output:["_col0","_col1","_col2"]
          <-Reducer 5 [SIMPLE_EDGE]
            SHUFFLE [RS_90]
              Select Operator [SEL_89] (rows=1 width=336)
                Output:["_col0","_col1","_col2"]
                Merge Join Operator [MERGEJOIN_163] (rows=1 width=448)
                  Conds:(Inner),Output:["_col0","_col1","_col2","_col3"]
                <-Reducer 13 [XPROD_EDGE] vectorized
                  XPROD_EDGE [RS_212]
                    Select Operator [SEL_211] (rows=1 width=224)
                      Output:["_col0","_col1"]
                      Group By Operator [GBY_210] (rows=1 width=112)
                        Output:["_col0"],aggregations:["sum(VALUE._col0)"]
                      <-Reducer 12 [CUSTOM_SIMPLE_EDGE]
                        PARTITION_ONLY_SHUFFLE [RS_83]
                          Group By Operator [GBY_82] (rows=1 width=112)
                            Output:["_col0"],aggregations:["sum(_col1)"]
                            Map Join Operator [MAPJOIN_162] (rows=6900866 width=0)
                              Conds:SEL_74._col0=RS_196._col0(Inner),HybridGraceHashJoin:true,Output:["_col1"]
                            <-Map 14 [BROADCAST_EDGE] vectorized
                              BROADCAST [RS_196]
                                PartitionCols:_col0
                                Select Operator [SEL_194] (rows=46200 width=4)
                                  Output:["_col0"]
                                  Filter Operator [FIL_193] (rows=46200 width=94)
                                    predicate:(i_category = 'Electronics')
                                    TableScan [TS_29] (rows=462000 width=94)
                                      default@item,item,Tbl:COMPLETE,Col:COMPLETE,Output:["i_item_sk","i_category"]
                            <-Select Operator [SEL_74] (rows=7169597 width=4)
                                Output:["_col0","_col1"]
                                Merge Join Operator [MERGEJOIN_161] (rows=7169597 width=4)
                                  Conds:RS_71._col0=RS_209._col1(Inner),Output:["_col3","_col5"]
                                <-Map 16 [SIMPLE_EDGE] vectorized
                                  SHUFFLE [RS_209]
                                    PartitionCols:_col1
                                    Select Operator [SEL_208] (rows=35847980 width=46)
                                      Output:["_col0","_col1","_col2"]
                                      Map Join Operator [MAPJOIN_207] (rows=35847980 width=46)
                                        Conds:MAPJOIN_206._col3=RS_174._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2","_col4"]
                                      <-Map 7 [BROADCAST_EDGE] vectorized
                                        BROADCAST [RS_174]
                                          PartitionCols:_col0
                                          Select Operator [SEL_172] (rows=341 width=4)
                                            Output:["_col0"]
                                            Filter Operator [FIL_171] (rows=341 width=115)
                                              predicate:(s_gmt_offset = -7)
                                              TableScan [TS_3] (rows=1704 width=115)
                                                default@store,store,Tbl:COMPLETE,Col:COMPLETE,Output:["s_store_sk","s_gmt_offset"]
                                      <-Map Join Operator [MAPJOIN_206] (rows=179134776 width=108)
                                          Conds:SEL_205._col0=RS_181._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2","_col3","_col4"]
                                        <-Map 9 [BROADCAST_EDGE] vectorized
                                          BROADCAST [RS_181]
                                            PartitionCols:_col0
                                            Select Operator [SEL_179] (rows=652 width=4)
                                              Output:["_col0"]
                                              Filter Operator [FIL_178] (rows=652 width=12)
                                                predicate:((d_moy = 11) and (d_year = 1999))
                                                TableScan [TS_16] (rows=73049 width=12)
                                                  default@date_dim,date_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_year","d_moy"]
                                        <-Select Operator [SEL_205] (rows=501694138 width=122)
                                            Output:["_col0","_col1","_col2","_col3","_col4"]
                                            Filter Operator [FIL_204] (rows=501694138 width=122)
                                              predicate:(ss_customer_sk is not null and ss_sold_date_sk is not null and ss_store_sk is not null)
                                              TableScan [TS_52] (rows=575995635 width=122)
                                                default@store_sales,store_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["ss_sold_date_sk","ss_item_sk","ss_customer_sk","ss_store_sk","ss_ext_sales_price"]
                                <-Reducer 11 [SIMPLE_EDGE]
                                  SHUFFLE [RS_71]
                                    PartitionCols:_col0
                                    Merge Join Operator [MERGEJOIN_158] (rows=16000001 width=4)
                                      Conds:RS_192._col1=RS_200._col0(Inner),Output:["_col0"]
                                    <-Map 10 [SIMPLE_EDGE] vectorized
                                      SHUFFLE [RS_192]
                                        PartitionCols:_col1
                                        Select Operator [SEL_190] (rows=80000000 width=8)
                                          Output:["_col0","_col1"]
                                          Filter Operator [FIL_189] (rows=80000000 width=8)
                                            predicate:c_current_addr_sk is not null
                                            TableScan [TS_19] (rows=80000000 width=8)
                                              default@customer,customer,Tbl:COMPLETE,Col:COMPLETE,Output:["c_customer_sk","c_current_addr_sk"]
                                    <-Map 15 [SIMPLE_EDGE] vectorized
                                      SHUFFLE [RS_200]
                                        PartitionCols:_col0
                                        Select Operator [SEL_198] (rows=8000000 width=4)
                                          Output:["_col0"]
                                          Filter Operator [FIL_197] (rows=8000000 width=112)
                                            predicate:(ca_gmt_offset = -7)
                                            TableScan [TS_32] (rows=40000000 width=112)
                                              default@customer_address,customer_address,Tbl:COMPLETE,Col:COMPLETE,Output:["ca_address_sk","ca_gmt_offset"]
                <-Reducer 4 [XPROD_EDGE] vectorized
                  XPROD_EDGE [RS_203]
                    Select Operator [SEL_202] (rows=1 width=224)
                      Output:["_col0","_col1"]
                      Group By Operator [GBY_201] (rows=1 width=112)
                        Output:["_col0"],aggregations:["sum(VALUE._col0)"]
                      <-Reducer 3 [CUSTOM_SIMPLE_EDGE]
                        PARTITION_ONLY_SHUFFLE [RS_43]
                          Group By Operator [GBY_42] (rows=1 width=112)
                            Output:["_col0"],aggregations:["sum(_col1)"]
                            Merge Join Operator [MERGEJOIN_157] (rows=6590369 width=0)
                              Conds:RS_38._col2=RS_199._col0(Inner),Output:["_col1"]
                            <-Map 15 [SIMPLE_EDGE] vectorized
                              SHUFFLE [RS_199]
                                PartitionCols:_col0
                                 Please refer to the previous Select Operator [SEL_198]
                            <-Reducer 2 [SIMPLE_EDGE]
                              SHUFFLE [RS_38]
                                PartitionCols:_col2
                                Map Join Operator [MAPJOIN_156] (rows=32951841 width=42)
                                  Conds:SEL_28._col0=RS_195._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2"]
                                <-Map 14 [BROADCAST_EDGE] vectorized
                                  BROADCAST [RS_195]
                                    PartitionCols:_col0
                                     Please refer to the previous Select Operator [SEL_194]
                                <-Select Operator [SEL_28] (rows=34235040 width=49)
                                    Output:["_col0","_col1","_col2"]
                                    Merge Join Operator [MERGEJOIN_155] (rows=34235040 width=49)
                                      Conds:RS_188._col2=RS_191._col0(Inner),Output:["_col1","_col3","_col6"]
                                    <-Map 10 [SIMPLE_EDGE] vectorized
                                      SHUFFLE [RS_191]
                                        PartitionCols:_col0
                                         Please refer to the previous Select Operator [SEL_190]
                                    <-Map 1 [SIMPLE_EDGE] vectorized
                                      SHUFFLE [RS_188]
                                        PartitionCols:_col2
                                        Map Join Operator [MAPJOIN_187] (rows=34235040 width=46)
                                          Conds:SEL_186._col0=RS_180._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2","_col3"]
                                        <-Map 9 [BROADCAST_EDGE] vectorized
                                          BROADCAST [RS_180]
                                            PartitionCols:_col0
                                             Please refer to the previous Select Operator [SEL_179]
                                        <-Select Operator [SEL_186] (rows=95880426 width=97)
                                            Output:["_col0","_col1","_col2","_col3"]
                                            Map Join Operator [MAPJOIN_185] (rows=95880426 width=97)
                                              Conds:MAPJOIN_184._col4=RS_177._col0(Inner),HybridGraceHashJoin:true,Output:["_col0","_col1","_col2","_col5"]
                                            <-Map 8 [BROADCAST_EDGE] vectorized
                                              BROADCAST [RS_177]
                                                PartitionCols:_col0
                                                Select Operator [SEL_176] (rows=2300 width=4)
                                                  Output:["_col0"]
                                                  Filter Operator [FIL_175] (rows=2300 width=259)
                                                    predicate:((p_channel_dmail = 'Y') or (p_channel_email = 'Y') or (p_channel_tv = 'Y'))
                                                    TableScan [TS_6] (rows=2300 width=259)
                                                      default@promotion,promotion,Tbl:COMPLETE,Col:COMPLETE,Output:["p_promo_sk","p_channel_dmail","p_channel_email","p_channel_tv"]
                                            <-Map Join Operator [MAPJOIN_184] (rows=95880426 width=100)
                                                Conds:SEL_183._col3=RS_173._col0(Inner),HybridGraceHashJoin:true,Output:["_col0","_col1","_col2","_col4","_col5"]
                                              <-Map 7 [BROADCAST_EDGE] vectorized
                                                BROADCAST [RS_173]
                                                  PartitionCols:_col0
                                                   Please refer to the previous Select Operator [SEL_172]
                                              <-Select Operator [SEL_183] (rows=479120970 width=126)
                                                  Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                                                  Filter Operator [FIL_182] (rows=479120970 width=126)
                                                    predicate:(ss_customer_sk is not null and ss_promo_sk is not null and ss_sold_date_sk is not null and ss_store_sk is not null)
                                                    TableScan [TS_0] (rows=575995635 width=126)
                                                      default@store_sales,store_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["ss_sold_date_sk","ss_item_sk","ss_customer_sk","ss_store_sk","ss_promo_sk","ss_ext_sales_price"]

