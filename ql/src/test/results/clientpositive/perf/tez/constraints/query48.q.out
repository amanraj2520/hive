PREHOOK: query: explain
select sum (ss_quantity)
 from store_sales, store, customer_demographics, customer_address, date_dim
 where s_store_sk = ss_store_sk
 and  ss_sold_date_sk = d_date_sk and d_year = 1998
 and  
 (
  (
   cd_demo_sk = ss_cdemo_sk
   and 
   cd_marital_status = 'M'
   and 
   cd_education_status = '4 yr Degree'
   and 
   ss_sales_price between 100.00 and 150.00  
   )
 or
  (
  cd_demo_sk = ss_cdemo_sk
   and 
   cd_marital_status = 'M'
   and 
   cd_education_status = '4 yr Degree'
   and 
   ss_sales_price between 50.00 and 100.00   
  )
 or 
 (
  cd_demo_sk = ss_cdemo_sk
  and 
   cd_marital_status = 'M'
   and 
   cd_education_status = '4 yr Degree'
   and 
   ss_sales_price between 150.00 and 200.00  
 )
 )
 and
 (
  (
  ss_addr_sk = ca_address_sk
  and
  ca_country = 'United States'
  and
  ca_state in ('KY', 'GA', 'NM')
  and ss_net_profit between 0 and 2000  
  )
 or
  (ss_addr_sk = ca_address_sk
  and
  ca_country = 'United States'
  and
  ca_state in ('MT', 'OR', 'IN')
  and ss_net_profit between 150 and 3000 
  )
 or
  (ss_addr_sk = ca_address_sk
  and
  ca_country = 'United States'
  and
  ca_state in ('WI', 'MO', 'WV')
  and ss_net_profit between 50 and 25000 
  )
 )
PREHOOK: type: QUERY
PREHOOK: Input: default@customer_address
PREHOOK: Input: default@customer_demographics
PREHOOK: Input: default@date_dim
PREHOOK: Input: default@store
PREHOOK: Input: default@store_sales
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain
select sum (ss_quantity)
 from store_sales, store, customer_demographics, customer_address, date_dim
 where s_store_sk = ss_store_sk
 and  ss_sold_date_sk = d_date_sk and d_year = 1998
 and  
 (
  (
   cd_demo_sk = ss_cdemo_sk
   and 
   cd_marital_status = 'M'
   and 
   cd_education_status = '4 yr Degree'
   and 
   ss_sales_price between 100.00 and 150.00  
   )
 or
  (
  cd_demo_sk = ss_cdemo_sk
   and 
   cd_marital_status = 'M'
   and 
   cd_education_status = '4 yr Degree'
   and 
   ss_sales_price between 50.00 and 100.00   
  )
 or 
 (
  cd_demo_sk = ss_cdemo_sk
  and 
   cd_marital_status = 'M'
   and 
   cd_education_status = '4 yr Degree'
   and 
   ss_sales_price between 150.00 and 200.00  
 )
 )
 and
 (
  (
  ss_addr_sk = ca_address_sk
  and
  ca_country = 'United States'
  and
  ca_state in ('KY', 'GA', 'NM')
  and ss_net_profit between 0 and 2000  
  )
 or
  (ss_addr_sk = ca_address_sk
  and
  ca_country = 'United States'
  and
  ca_state in ('MT', 'OR', 'IN')
  and ss_net_profit between 150 and 3000 
  )
 or
  (ss_addr_sk = ca_address_sk
  and
  ca_country = 'United States'
  and
  ca_state in ('WI', 'MO', 'WV')
  and ss_net_profit between 50 and 25000 
  )
 )
POSTHOOK: type: QUERY
POSTHOOK: Input: default@customer_address
POSTHOOK: Input: default@customer_demographics
POSTHOOK: Input: default@date_dim
POSTHOOK: Input: default@store
POSTHOOK: Input: default@store_sales
POSTHOOK: Output: hdfs://### HDFS PATH ###
Plan optimized by CBO.

Vertex dependency in root stage
Map 3 <- Map 2 (BROADCAST_EDGE)
Reducer 4 <- Map 1 (BROADCAST_EDGE), Map 3 (SIMPLE_EDGE), Map 6 (SIMPLE_EDGE)
Reducer 5 <- Reducer 4 (CUSTOM_SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 5 vectorized
      File Output Operator [FS_61]
        Group By Operator [GBY_60] (rows=1 width=8)
          Output:["_col0"],aggregations:["sum(VALUE._col0)"]
        <-Reducer 4 [CUSTOM_SIMPLE_EDGE]
          PARTITION_ONLY_SHUFFLE [RS_25]
            Group By Operator [GBY_24] (rows=1 width=8)
              Output:["_col0"],aggregations:["sum(_col2)"]
              Map Join Operator [MAPJOIN_44] (rows=1971809 width=0)
                Conds:RS_56._col0=SEL_19._col0(Inner),HybridGraceHashJoin:true,Output:["_col2"]
              <-Map 1 [BROADCAST_EDGE] vectorized
                BROADCAST [RS_56]
                  PartitionCols:_col0
                  Select Operator [SEL_55] (rows=652 width=4)
                    Output:["_col0"]
                    Filter Operator [FIL_54] (rows=652 width=8)
                      predicate:(d_year = 1998)
                      TableScan [TS_0] (rows=73049 width=8)
                        default@date_dim,date_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_year"]
              <-Select Operator [SEL_19] (rows=5522349 width=5)
                  Output:["_col0","_col1"]
                  Filter Operator [FIL_18] (rows=5522349 width=29)
                    predicate:((_col10 and _col6) or (_col11 and _col7) or (_col9 and _col5))
                    Merge Join Operator [MERGEJOIN_43] (rows=7363133 width=29)
                      Conds:RS_53._col3=RS_59._col0(Inner),Output:["_col1","_col4","_col5","_col6","_col7","_col9","_col10","_col11"]
                    <-Map 3 [SIMPLE_EDGE] vectorized
                      SHUFFLE [RS_53]
                        PartitionCols:_col3
                        Map Join Operator [MAPJOIN_52] (rows=41724419 width=23)
                          Conds:RS_49._col0=SEL_51._col1(Inner),HybridGraceHashJoin:true,Output:["_col1","_col3","_col4","_col5","_col6","_col7"]
                        <-Map 2 [BROADCAST_EDGE] vectorized
                          BROADCAST [RS_49]
                            PartitionCols:_col0
                            Select Operator [SEL_48] (rows=132986 width=4)
                              Output:["_col0"]
                              Filter Operator [FIL_47] (rows=132986 width=183)
                                predicate:((cd_education_status = '4 yr Degree') and (cd_marital_status = 'M'))
                                TableScan [TS_3] (rows=1861800 width=183)
                                  default@customer_demographics,customer_demographics,Tbl:COMPLETE,Col:COMPLETE,Output:["cd_demo_sk","cd_marital_status","cd_education_status"]
                        <-Select Operator [SEL_51] (rows=53235296 width=27)
                            Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"]
                            Filter Operator [FIL_50] (rows=53235296 width=233)
                              predicate:((ss_net_profit BETWEEN 0 AND 2000 or ss_net_profit BETWEEN 150 AND 3000 or ss_net_profit BETWEEN 50 AND 25000) and (ss_sales_price BETWEEN 100 AND 150 or ss_sales_price BETWEEN 50 AND 100 or ss_sales_price BETWEEN 150 AND 200) and ss_addr_sk is not null and ss_cdemo_sk is not null and ss_sold_date_sk is not null and ss_store_sk is not null)
                              TableScan [TS_6] (rows=575995635 width=233)
                                default@store_sales,store_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["ss_sold_date_sk","ss_cdemo_sk","ss_addr_sk","ss_store_sk","ss_quantity","ss_sales_price","ss_net_profit"]
                    <-Map 6 [SIMPLE_EDGE] vectorized
                      SHUFFLE [RS_59]
                        PartitionCols:_col0
                        Select Operator [SEL_58] (rows=7058824 width=16)
                          Output:["_col0","_col1","_col2","_col3"]
                          Filter Operator [FIL_57] (rows=7058824 width=187)
                            predicate:((ca_country = 'United States') and (ca_state) IN ('KY', 'GA', 'NM', 'MT', 'OR', 'IN', 'WI', 'MO', 'WV'))
                            TableScan [TS_9] (rows=40000000 width=187)
                              default@customer_address,customer_address,Tbl:COMPLETE,Col:COMPLETE,Output:["ca_address_sk","ca_state","ca_country"]

