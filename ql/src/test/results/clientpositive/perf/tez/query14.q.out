Warning: Shuffle Join MERGEJOIN[879][tables = [$hdt$_1, $hdt$_2]] in Stage 'Reducer 4' is a cross product
Warning: Shuffle Join MERGEJOIN[925][tables = [$hdt$_1, $hdt$_2, $hdt$_0]] in Stage 'Reducer 5' is a cross product
Warning: Shuffle Join MERGEJOIN[881][tables = [$hdt$_1, $hdt$_2]] in Stage 'Reducer 58' is a cross product
Warning: Shuffle Join MERGEJOIN[982][tables = [$hdt$_1, $hdt$_2, $hdt$_0]] in Stage 'Reducer 27' is a cross product
Warning: Shuffle Join MERGEJOIN[883][tables = [$hdt$_2, $hdt$_3]] in Stage 'Reducer 70' is a cross product
Warning: Shuffle Join MERGEJOIN[989][tables = [$hdt$_2, $hdt$_3, $hdt$_1]] in Stage 'Reducer 31' is a cross product
PREHOOK: query: explain
with  cross_items as
 (select i_item_sk ss_item_sk
 from item,
 (select iss.i_brand_id brand_id
     ,iss.i_class_id class_id
     ,iss.i_category_id category_id
 from store_sales
     ,item iss
     ,date_dim d1
 where ss_item_sk = iss.i_item_sk
   and ss_sold_date_sk = d1.d_date_sk
   and d1.d_year between 1999 AND 1999 + 2
 intersect 
 select ics.i_brand_id
     ,ics.i_class_id
     ,ics.i_category_id
 from catalog_sales
     ,item ics
     ,date_dim d2
 where cs_item_sk = ics.i_item_sk
   and cs_sold_date_sk = d2.d_date_sk
   and d2.d_year between 1999 AND 1999 + 2
 intersect
 select iws.i_brand_id
     ,iws.i_class_id
     ,iws.i_category_id
 from web_sales
     ,item iws
     ,date_dim d3
 where ws_item_sk = iws.i_item_sk
   and ws_sold_date_sk = d3.d_date_sk
   and d3.d_year between 1999 AND 1999 + 2) x
 where i_brand_id = brand_id
      and i_class_id = class_id
      and i_category_id = category_id
),
 avg_sales as
 (select avg(quantity*list_price) average_sales
  from (select ss_quantity quantity
             ,ss_list_price list_price
       from store_sales
           ,date_dim
       where ss_sold_date_sk = d_date_sk
         and d_year between 1999 and 2001 
       union all 
       select cs_quantity quantity 
             ,cs_list_price list_price
       from catalog_sales
           ,date_dim
       where cs_sold_date_sk = d_date_sk
         and d_year between 1998 and 1998 + 2 
       union all
       select ws_quantity quantity
             ,ws_list_price list_price
       from web_sales
           ,date_dim
       where ws_sold_date_sk = d_date_sk
         and d_year between 1998 and 1998 + 2) x)
  select  channel, i_brand_id,i_class_id,i_category_id,sum(sales), sum(number_sales)
 from(
       select 'store' channel, i_brand_id,i_class_id
             ,i_category_id,sum(ss_quantity*ss_list_price) sales
             , count(*) number_sales
       from store_sales
           ,item
           ,date_dim
       where ss_item_sk in (select ss_item_sk from cross_items)
         and ss_item_sk = i_item_sk
         and ss_sold_date_sk = d_date_sk
         and d_year = 1998+2 
         and d_moy = 11
       group by i_brand_id,i_class_id,i_category_id
       having sum(ss_quantity*ss_list_price) > (select average_sales from avg_sales)
       union all
       select 'catalog' channel, i_brand_id,i_class_id,i_category_id, sum(cs_quantity*cs_list_price) sales, count(*) number_sales
       from catalog_sales
           ,item
           ,date_dim
       where cs_item_sk in (select ss_item_sk from cross_items)
         and cs_item_sk = i_item_sk
         and cs_sold_date_sk = d_date_sk
         and d_year = 1998+2 
         and d_moy = 11
       group by i_brand_id,i_class_id,i_category_id
       having sum(cs_quantity*cs_list_price) > (select average_sales from avg_sales)
       union all
       select 'web' channel, i_brand_id,i_class_id,i_category_id, sum(ws_quantity*ws_list_price) sales , count(*) number_sales
       from web_sales
           ,item
           ,date_dim
       where ws_item_sk in (select ss_item_sk from cross_items)
         and ws_item_sk = i_item_sk
         and ws_sold_date_sk = d_date_sk
         and d_year = 1998+2
         and d_moy = 11
       group by i_brand_id,i_class_id,i_category_id
       having sum(ws_quantity*ws_list_price) > (select average_sales from avg_sales)
 ) y
 group by rollup (channel, i_brand_id,i_class_id,i_category_id)
 order by channel,i_brand_id,i_class_id,i_category_id
 limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@catalog_sales
PREHOOK: Input: default@date_dim
PREHOOK: Input: default@item
PREHOOK: Input: default@store_sales
PREHOOK: Input: default@web_sales
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain
with  cross_items as
 (select i_item_sk ss_item_sk
 from item,
 (select iss.i_brand_id brand_id
     ,iss.i_class_id class_id
     ,iss.i_category_id category_id
 from store_sales
     ,item iss
     ,date_dim d1
 where ss_item_sk = iss.i_item_sk
   and ss_sold_date_sk = d1.d_date_sk
   and d1.d_year between 1999 AND 1999 + 2
 intersect 
 select ics.i_brand_id
     ,ics.i_class_id
     ,ics.i_category_id
 from catalog_sales
     ,item ics
     ,date_dim d2
 where cs_item_sk = ics.i_item_sk
   and cs_sold_date_sk = d2.d_date_sk
   and d2.d_year between 1999 AND 1999 + 2
 intersect
 select iws.i_brand_id
     ,iws.i_class_id
     ,iws.i_category_id
 from web_sales
     ,item iws
     ,date_dim d3
 where ws_item_sk = iws.i_item_sk
   and ws_sold_date_sk = d3.d_date_sk
   and d3.d_year between 1999 AND 1999 + 2) x
 where i_brand_id = brand_id
      and i_class_id = class_id
      and i_category_id = category_id
),
 avg_sales as
 (select avg(quantity*list_price) average_sales
  from (select ss_quantity quantity
             ,ss_list_price list_price
       from store_sales
           ,date_dim
       where ss_sold_date_sk = d_date_sk
         and d_year between 1999 and 2001 
       union all 
       select cs_quantity quantity 
             ,cs_list_price list_price
       from catalog_sales
           ,date_dim
       where cs_sold_date_sk = d_date_sk
         and d_year between 1998 and 1998 + 2 
       union all
       select ws_quantity quantity
             ,ws_list_price list_price
       from web_sales
           ,date_dim
       where ws_sold_date_sk = d_date_sk
         and d_year between 1998 and 1998 + 2) x)
  select  channel, i_brand_id,i_class_id,i_category_id,sum(sales), sum(number_sales)
 from(
       select 'store' channel, i_brand_id,i_class_id
             ,i_category_id,sum(ss_quantity*ss_list_price) sales
             , count(*) number_sales
       from store_sales
           ,item
           ,date_dim
       where ss_item_sk in (select ss_item_sk from cross_items)
         and ss_item_sk = i_item_sk
         and ss_sold_date_sk = d_date_sk
         and d_year = 1998+2 
         and d_moy = 11
       group by i_brand_id,i_class_id,i_category_id
       having sum(ss_quantity*ss_list_price) > (select average_sales from avg_sales)
       union all
       select 'catalog' channel, i_brand_id,i_class_id,i_category_id, sum(cs_quantity*cs_list_price) sales, count(*) number_sales
       from catalog_sales
           ,item
           ,date_dim
       where cs_item_sk in (select ss_item_sk from cross_items)
         and cs_item_sk = i_item_sk
         and cs_sold_date_sk = d_date_sk
         and d_year = 1998+2 
         and d_moy = 11
       group by i_brand_id,i_class_id,i_category_id
       having sum(cs_quantity*cs_list_price) > (select average_sales from avg_sales)
       union all
       select 'web' channel, i_brand_id,i_class_id,i_category_id, sum(ws_quantity*ws_list_price) sales , count(*) number_sales
       from web_sales
           ,item
           ,date_dim
       where ws_item_sk in (select ss_item_sk from cross_items)
         and ws_item_sk = i_item_sk
         and ws_sold_date_sk = d_date_sk
         and d_year = 1998+2
         and d_moy = 11
       group by i_brand_id,i_class_id,i_category_id
       having sum(ws_quantity*ws_list_price) > (select average_sales from avg_sales)
 ) y
 group by rollup (channel, i_brand_id,i_class_id,i_category_id)
 order by channel,i_brand_id,i_class_id,i_category_id
 limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@catalog_sales
POSTHOOK: Input: default@date_dim
POSTHOOK: Input: default@item
POSTHOOK: Input: default@store_sales
POSTHOOK: Input: default@web_sales
POSTHOOK: Output: hdfs://### HDFS PATH ###
Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Map 43 (BROADCAST_EDGE), Union 2 (CONTAINS)
Map 11 <- Map 12 (BROADCAST_EDGE), Union 2 (CONTAINS)
Map 13 <- Map 43 (BROADCAST_EDGE), Union 14 (CONTAINS)
Map 16 <- Map 10 (BROADCAST_EDGE), Union 14 (CONTAINS)
Map 17 <- Map 12 (BROADCAST_EDGE), Union 14 (CONTAINS)
Map 18 <- Map 21 (BROADCAST_EDGE)
Map 22 <- Reducer 36 (BROADCAST_EDGE), Reducer 39 (BROADCAST_EDGE), Reducer 42 (BROADCAST_EDGE)
Map 32 <- Map 43 (BROADCAST_EDGE)
Map 53 <- Map 43 (BROADCAST_EDGE)
Map 54 <- Map 43 (BROADCAST_EDGE)
Map 55 <- Map 43 (BROADCAST_EDGE), Union 56 (CONTAINS)
Map 59 <- Map 10 (BROADCAST_EDGE), Union 56 (CONTAINS)
Map 60 <- Map 12 (BROADCAST_EDGE), Union 56 (CONTAINS)
Map 61 <- Map 43 (BROADCAST_EDGE), Union 62 (CONTAINS)
Map 64 <- Map 10 (BROADCAST_EDGE), Union 62 (CONTAINS)
Map 65 <- Map 12 (BROADCAST_EDGE), Union 62 (CONTAINS)
Map 66 <- Map 21 (BROADCAST_EDGE)
Map 67 <- Map 43 (BROADCAST_EDGE), Union 68 (CONTAINS)
Map 71 <- Map 10 (BROADCAST_EDGE), Union 68 (CONTAINS)
Map 72 <- Map 12 (BROADCAST_EDGE), Union 68 (CONTAINS)
Map 73 <- Map 43 (BROADCAST_EDGE), Union 74 (CONTAINS)
Map 76 <- Map 10 (BROADCAST_EDGE), Union 74 (CONTAINS)
Map 77 <- Map 12 (BROADCAST_EDGE), Union 74 (CONTAINS)
Map 78 <- Map 21 (BROADCAST_EDGE)
Map 9 <- Map 10 (BROADCAST_EDGE), Union 2 (CONTAINS)
Reducer 15 <- Union 14 (CUSTOM_SIMPLE_EDGE)
Reducer 19 <- Map 18 (SIMPLE_EDGE), Map 22 (SIMPLE_EDGE), Reducer 23 (BROADCAST_EDGE)
Reducer 20 <- Reducer 19 (SIMPLE_EDGE)
Reducer 23 <- Map 22 (SIMPLE_EDGE)
Reducer 24 <- Map 22 (SIMPLE_EDGE)
Reducer 25 <- Map 22 (SIMPLE_EDGE), Map 66 (SIMPLE_EDGE), Reducer 24 (BROADCAST_EDGE)
Reducer 26 <- Reducer 25 (SIMPLE_EDGE)
Reducer 27 <- Reducer 26 (XPROD_EDGE), Reducer 58 (XPROD_EDGE), Union 6 (CONTAINS)
Reducer 28 <- Map 22 (SIMPLE_EDGE)
Reducer 29 <- Map 22 (SIMPLE_EDGE), Map 78 (SIMPLE_EDGE), Reducer 28 (BROADCAST_EDGE)
Reducer 3 <- Union 2 (CUSTOM_SIMPLE_EDGE)
Reducer 30 <- Reducer 29 (SIMPLE_EDGE)
Reducer 31 <- Reducer 30 (XPROD_EDGE), Reducer 70 (XPROD_EDGE), Union 6 (CONTAINS)
Reducer 33 <- Map 32 (SIMPLE_EDGE), Map 44 (SIMPLE_EDGE)
Reducer 34 <- Reducer 33 (SIMPLE_EDGE), Union 35 (CONTAINS)
Reducer 36 <- Union 35 (SIMPLE_EDGE)
Reducer 37 <- Reducer 33 (SIMPLE_EDGE), Union 38 (CONTAINS)
Reducer 39 <- Union 38 (SIMPLE_EDGE)
Reducer 4 <- Reducer 15 (XPROD_EDGE), Reducer 3 (XPROD_EDGE)
Reducer 40 <- Reducer 33 (SIMPLE_EDGE), Union 41 (CONTAINS)
Reducer 42 <- Union 41 (SIMPLE_EDGE)
Reducer 45 <- Map 44 (SIMPLE_EDGE), Map 53 (SIMPLE_EDGE)
Reducer 46 <- Reducer 45 (SIMPLE_EDGE), Union 35 (CONTAINS)
Reducer 47 <- Reducer 45 (SIMPLE_EDGE), Union 38 (CONTAINS)
Reducer 48 <- Reducer 45 (SIMPLE_EDGE), Union 41 (CONTAINS)
Reducer 49 <- Map 44 (SIMPLE_EDGE), Map 54 (SIMPLE_EDGE)
Reducer 5 <- Reducer 20 (XPROD_EDGE), Reducer 4 (XPROD_EDGE), Union 6 (CONTAINS)
Reducer 50 <- Reducer 49 (SIMPLE_EDGE), Union 35 (CONTAINS)
Reducer 51 <- Reducer 49 (SIMPLE_EDGE), Union 38 (CONTAINS)
Reducer 52 <- Reducer 49 (SIMPLE_EDGE), Union 41 (CONTAINS)
Reducer 57 <- Union 56 (CUSTOM_SIMPLE_EDGE)
Reducer 58 <- Reducer 57 (XPROD_EDGE), Reducer 63 (XPROD_EDGE)
Reducer 63 <- Union 62 (CUSTOM_SIMPLE_EDGE)
Reducer 69 <- Union 68 (CUSTOM_SIMPLE_EDGE)
Reducer 7 <- Union 6 (SIMPLE_EDGE)
Reducer 70 <- Reducer 69 (XPROD_EDGE), Reducer 75 (XPROD_EDGE)
Reducer 75 <- Union 74 (CUSTOM_SIMPLE_EDGE)
Reducer 8 <- Reducer 7 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 8 vectorized
      File Output Operator [FS_1233]
        Limit [LIM_1232] (rows=7 width=192)
          Number of rows:100
          Select Operator [SEL_1231] (rows=7 width=192)
            Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
          <-Reducer 7 [SIMPLE_EDGE] vectorized
            SHUFFLE [RS_1230]
              Select Operator [SEL_1229] (rows=7 width=192)
                Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                Group By Operator [GBY_1228] (rows=7 width=200)
                  Output:["_col0","_col1","_col2","_col3","_col5","_col6"],aggregations:["sum(VALUE._col0)","sum(VALUE._col1)"],keys:KEY._col0, KEY._col1, KEY._col2, KEY._col3, KEY._col4
                <-Union 6 [SIMPLE_EDGE]
                  <-Reducer 27 [CONTAINS]
                    Reduce Output Operator [RS_988]
                      PartitionCols:_col0, _col1, _col2, _col3, _col4
                      Group By Operator [GBY_987] (rows=7 width=200)
                        Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"],aggregations:["sum(_col4)","sum(_col5)"],keys:_col0, _col1, _col2, _col3, 0L
                        Top N Key Operator [TNK_986] (rows=3 width=221)
                          keys:_col0, _col1, _col2, _col3, 0L,sort order:+++++,top n:100
                          Select Operator [SEL_984] (rows=1 width=223)
                            Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                            Filter Operator [FIL_983] (rows=1 width=244)
                              predicate:(_col5 > _col1)
                              Merge Join Operator [MERGEJOIN_982] (rows=1 width=244)
                                Conds:(Inner),Output:["_col1","_col2","_col3","_col4","_col5","_col6"]
                              <-Reducer 26 [XPROD_EDGE] vectorized
                                XPROD_EDGE [RS_1292]
                                  Group By Operator [GBY_1291] (rows=1 width=132)
                                    Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(VALUE._col0)","count(VALUE._col1)"],keys:KEY._col0, KEY._col1, KEY._col2
                                  <-Reducer 25 [SIMPLE_EDGE]
                                    SHUFFLE [RS_375]
                                      PartitionCols:_col0, _col1, _col2
                                      Group By Operator [GBY_374] (rows=1 width=132)
                                        Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(_col3)","count()"],keys:_col0, _col1, _col2
                                        Select Operator [SEL_372] (rows=1 width=128)
                                          Output:["_col0","_col1","_col2","_col3"]
                                          Map Join Operator [MAPJOIN_877] (rows=1 width=128)
                                            Conds:MERGEJOIN_853._col1=RS_1286._col0(Inner),HybridGraceHashJoin:true,Output:["_col2","_col3","_col8","_col9","_col10"]
                                          <-Reducer 24 [BROADCAST_EDGE] vectorized
                                            BROADCAST [RS_1286]
                                              PartitionCols:_col0
                                              Group By Operator [GBY_1285] (rows=364 width=4)
                                                Output:["_col0"],keys:KEY._col0
                                              <-Map 22 [SIMPLE_EDGE] vectorized
                                                SHUFFLE [RS_1222]
                                                  PartitionCols:_col0
                                                  Group By Operator [GBY_1219] (rows=364 width=4)
                                                    Output:["_col0"],keys:_col0
                                                    Map Join Operator [MAPJOIN_1214] (rows=729 width=4)
                                                      Conds:SEL_1208._col1, _col2, _col3=RS_1195._col0, _col1, _col2(Inner),HybridGraceHashJoin:true,Output:["_col0"]
                                                    <-Reducer 39 [BROADCAST_EDGE] vectorized
                                                      BROADCAST [RS_1195]
                                                        PartitionCols:_col0, _col1, _col2
                                                        Select Operator [SEL_1194] (rows=1 width=12)
                                                          Output:["_col0","_col1","_col2"]
                                                          Filter Operator [FIL_1193] (rows=1 width=20)
                                                            predicate:(_col3 = 3L)
                                                            Group By Operator [GBY_1192] (rows=120960 width=19)
                                                              Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                            <-Union 38 [SIMPLE_EDGE]
                                                              <-Reducer 37 [CONTAINS] vectorized
                                                                Reduce Output Operator [RS_1333]
                                                                  PartitionCols:_col0, _col1, _col2
                                                                  Group By Operator [GBY_1332] (rows=120960 width=19)
                                                                    Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                    Group By Operator [GBY_1331] (rows=120960 width=19)
                                                                      Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                    <-Reducer 33 [SIMPLE_EDGE]
                                                                      SHUFFLE [RS_304]
                                                                        PartitionCols:_col0, _col1, _col2
                                                                        Group By Operator [GBY_110] (rows=362880 width=19)
                                                                          Output:["_col0","_col1","_col2","_col3"],aggregations:["count()"],keys:_col5, _col6, _col7
                                                                          Merge Join Operator [MERGEJOIN_840] (rows=60667254 width=11)
                                                                            Conds:RS_1322._col1=RS_1325._col0(Inner),Output:["_col5","_col6","_col7"]
                                                                          <-Map 44 [SIMPLE_EDGE] vectorized
                                                                            SHUFFLE [RS_1325]
                                                                              PartitionCols:_col0
                                                                              Select Operator [SEL_1324] (rows=458612 width=15)
                                                                                Output:["_col0","_col1","_col2","_col3"]
                                                                                Filter Operator [FIL_1323] (rows=458612 width=15)
                                                                                  predicate:(i_brand_id is not null and i_category_id is not null and i_class_id is not null and i_item_sk is not null)
                                                                                  TableScan [TS_100] (rows=462000 width=15)
                                                                                    default@item,iss,Tbl:COMPLETE,Col:COMPLETE,Output:["i_item_sk","i_brand_id","i_class_id","i_category_id"]
                                                                          <-Map 32 [SIMPLE_EDGE] vectorized
                                                                            SHUFFLE [RS_1322]
                                                                              PartitionCols:_col1
                                                                              Map Join Operator [MAPJOIN_1321] (rows=61115434 width=4)
                                                                                Conds:SEL_1320._col0=RS_1154._col0(Inner),HybridGraceHashJoin:true,Output:["_col1"]
                                                                              <-Map 43 [BROADCAST_EDGE] vectorized
                                                                                BROADCAST [RS_1154]
                                                                                  PartitionCols:_col0
                                                                                  Select Operator [SEL_1153] (rows=8116 width=8)
                                                                                    Output:["_col0"]
                                                                                    Filter Operator [FIL_1152] (rows=8116 width=8)
                                                                                      predicate:(d_date_sk is not null and d_year BETWEEN 1999 AND 2001)
                                                                                      TableScan [TS_97] (rows=73049 width=8)
                                                                                        default@date_dim,d1,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_year"]
                                                                              <-Select Operator [SEL_1320] (rows=550076554 width=7)
                                                                                  Output:["_col0","_col1"]
                                                                                  Filter Operator [FIL_1319] (rows=550076554 width=7)
                                                                                    predicate:(ss_item_sk is not null and ss_sold_date_sk is not null)
                                                                                    TableScan [TS_94] (rows=575995635 width=7)
                                                                                      default@store_sales,store_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["ss_sold_date_sk","ss_item_sk"]
                                                              <-Reducer 47 [CONTAINS] vectorized
                                                                Reduce Output Operator [RS_1346]
                                                                  PartitionCols:_col0, _col1, _col2
                                                                  Group By Operator [GBY_1345] (rows=120960 width=19)
                                                                    Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                    Group By Operator [GBY_1344] (rows=120960 width=19)
                                                                      Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                    <-Reducer 45 [SIMPLE_EDGE]
                                                                      SHUFFLE [RS_324]
                                                                        PartitionCols:_col0, _col1, _col2
                                                                        Group By Operator [GBY_130] (rows=241920 width=19)
                                                                          Output:["_col0","_col1","_col2","_col3"],aggregations:["count()"],keys:_col5, _col6, _col7
                                                                          Merge Join Operator [MERGEJOIN_842] (rows=31603210 width=11)
                                                                            Conds:RS_1340._col1=RS_1326._col0(Inner),Output:["_col5","_col6","_col7"]
                                                                          <-Map 44 [SIMPLE_EDGE] vectorized
                                                                            SHUFFLE [RS_1326]
                                                                              PartitionCols:_col0
                                                                               Please refer to the previous Select Operator [SEL_1324]
                                                                          <-Map 53 [SIMPLE_EDGE] vectorized
                                                                            SHUFFLE [RS_1340]
                                                                              PartitionCols:_col1
                                                                              Map Join Operator [MAPJOIN_1339] (rows=31836679 width=4)
                                                                                Conds:SEL_1338._col0=RS_1155._col0(Inner),HybridGraceHashJoin:true,Output:["_col1"]
                                                                              <-Map 43 [BROADCAST_EDGE] vectorized
                                                                                BROADCAST [RS_1155]
                                                                                  PartitionCols:_col0
                                                                                   Please refer to the previous Select Operator [SEL_1153]
                                                                              <-Select Operator [SEL_1338] (rows=286549727 width=7)
                                                                                  Output:["_col0","_col1"]
                                                                                  Filter Operator [FIL_1337] (rows=286549727 width=7)
                                                                                    predicate:(cs_item_sk is not null and cs_sold_date_sk is not null)
                                                                                    TableScan [TS_114] (rows=287989836 width=7)
                                                                                      default@catalog_sales,catalog_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["cs_sold_date_sk","cs_item_sk"]
                                                              <-Reducer 51 [CONTAINS] vectorized
                                                                Reduce Output Operator [RS_1359]
                                                                  PartitionCols:_col0, _col1, _col2
                                                                  Group By Operator [GBY_1358] (rows=120960 width=19)
                                                                    Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                    Group By Operator [GBY_1357] (rows=120960 width=19)
                                                                      Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                    <-Reducer 49 [SIMPLE_EDGE]
                                                                      SHUFFLE [RS_345]
                                                                        PartitionCols:_col0, _col1, _col2
                                                                        Group By Operator [GBY_151] (rows=120960 width=19)
                                                                          Output:["_col0","_col1","_col2","_col3"],aggregations:["count()"],keys:_col5, _col6, _col7
                                                                          Merge Join Operator [MERGEJOIN_844] (rows=15877926 width=11)
                                                                            Conds:RS_1353._col1=RS_1327._col0(Inner),Output:["_col5","_col6","_col7"]
                                                                          <-Map 44 [SIMPLE_EDGE] vectorized
                                                                            SHUFFLE [RS_1327]
                                                                              PartitionCols:_col0
                                                                               Please refer to the previous Select Operator [SEL_1324]
                                                                          <-Map 54 [SIMPLE_EDGE] vectorized
                                                                            SHUFFLE [RS_1353]
                                                                              PartitionCols:_col1
                                                                              Map Join Operator [MAPJOIN_1352] (rows=15995224 width=4)
                                                                                Conds:SEL_1351._col0=RS_1156._col0(Inner),HybridGraceHashJoin:true,Output:["_col1"]
                                                                              <-Map 43 [BROADCAST_EDGE] vectorized
                                                                                BROADCAST [RS_1156]
                                                                                  PartitionCols:_col0
                                                                                   Please refer to the previous Select Operator [SEL_1153]
                                                                              <-Select Operator [SEL_1351] (rows=143966864 width=7)
                                                                                  Output:["_col0","_col1"]
                                                                                  Filter Operator [FIL_1350] (rows=143966864 width=7)
                                                                                    predicate:(ws_item_sk is not null and ws_sold_date_sk is not null)
                                                                                    TableScan [TS_135] (rows=144002668 width=7)
                                                                                      default@web_sales,web_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["ws_sold_date_sk","ws_item_sk"]
                                                    <-Select Operator [SEL_1208] (rows=458612 width=15)
                                                        Output:["_col0","_col1","_col2","_col3"]
                                                        Filter Operator [FIL_1202] (rows=458612 width=15)
                                                          predicate:(i_brand_id is not null and i_category_id is not null and i_class_id is not null and i_item_sk is not null)
                                                          TableScan [TS_91] (rows=462000 width=15)
                                                            default@item,item,Tbl:COMPLETE,Col:COMPLETE,Output:["i_item_sk","i_brand_id","i_class_id","i_category_id"]
                                                          <-Reducer 36 [BROADCAST_EDGE] vectorized
                                                            BROADCAST [RS_1191]
                                                              PartitionCols:_col0, _col1, _col2
                                                              Select Operator [SEL_1190] (rows=1 width=12)
                                                                Output:["_col0","_col1","_col2"]
                                                                Filter Operator [FIL_1189] (rows=1 width=20)
                                                                  predicate:(_col3 = 3L)
                                                                  Group By Operator [GBY_1188] (rows=120960 width=19)
                                                                    Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                  <-Union 35 [SIMPLE_EDGE]
                                                                    <-Reducer 34 [CONTAINS] vectorized
                                                                      Reduce Output Operator [RS_1330]
                                                                        PartitionCols:_col0, _col1, _col2
                                                                        Group By Operator [GBY_1329] (rows=120960 width=19)
                                                                          Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                          Group By Operator [GBY_1328] (rows=120960 width=19)
                                                                            Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                          <-Reducer 33 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_111]
                                                                              PartitionCols:_col0, _col1, _col2
                                                                               Please refer to the previous Group By Operator [GBY_110]
                                                                    <-Reducer 46 [CONTAINS] vectorized
                                                                      Reduce Output Operator [RS_1343]
                                                                        PartitionCols:_col0, _col1, _col2
                                                                        Group By Operator [GBY_1342] (rows=120960 width=19)
                                                                          Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                          Group By Operator [GBY_1341] (rows=120960 width=19)
                                                                            Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                          <-Reducer 45 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_131]
                                                                              PartitionCols:_col0, _col1, _col2
                                                                               Please refer to the previous Group By Operator [GBY_130]
                                                                    <-Reducer 50 [CONTAINS] vectorized
                                                                      Reduce Output Operator [RS_1356]
                                                                        PartitionCols:_col0, _col1, _col2
                                                                        Group By Operator [GBY_1355] (rows=120960 width=19)
                                                                          Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                          Group By Operator [GBY_1354] (rows=120960 width=19)
                                                                            Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                          <-Reducer 49 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_152]
                                                                              PartitionCols:_col0, _col1, _col2
                                                                               Please refer to the previous Group By Operator [GBY_151]
                                                          <-Reducer 42 [BROADCAST_EDGE] vectorized
                                                            BROADCAST [RS_1199]
                                                              PartitionCols:_col0, _col1, _col2
                                                              Select Operator [SEL_1198] (rows=1 width=12)
                                                                Output:["_col0","_col1","_col2"]
                                                                Filter Operator [FIL_1197] (rows=1 width=20)
                                                                  predicate:(_col3 = 3L)
                                                                  Group By Operator [GBY_1196] (rows=120960 width=19)
                                                                    Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                  <-Union 41 [SIMPLE_EDGE]
                                                                    <-Reducer 40 [CONTAINS] vectorized
                                                                      Reduce Output Operator [RS_1336]
                                                                        PartitionCols:_col0, _col1, _col2
                                                                        Group By Operator [GBY_1335] (rows=120960 width=19)
                                                                          Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                          Group By Operator [GBY_1334] (rows=120960 width=19)
                                                                            Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                          <-Reducer 33 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_498]
                                                                              PartitionCols:_col0, _col1, _col2
                                                                               Please refer to the previous Group By Operator [GBY_110]
                                                                    <-Reducer 48 [CONTAINS] vectorized
                                                                      Reduce Output Operator [RS_1349]
                                                                        PartitionCols:_col0, _col1, _col2
                                                                        Group By Operator [GBY_1348] (rows=120960 width=19)
                                                                          Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                          Group By Operator [GBY_1347] (rows=120960 width=19)
                                                                            Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                          <-Reducer 45 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_518]
                                                                              PartitionCols:_col0, _col1, _col2
                                                                               Please refer to the previous Group By Operator [GBY_130]
                                                                    <-Reducer 52 [CONTAINS] vectorized
                                                                      Reduce Output Operator [RS_1362]
                                                                        PartitionCols:_col0, _col1, _col2
                                                                        Group By Operator [GBY_1361] (rows=120960 width=19)
                                                                          Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                          Group By Operator [GBY_1360] (rows=120960 width=19)
                                                                            Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                          <-Reducer 49 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_539]
                                                                              PartitionCols:_col0, _col1, _col2
                                                                               Please refer to the previous Group By Operator [GBY_151]
                                          <-Merge Join Operator [MERGEJOIN_853] (rows=101592102 width=130)
                                              Conds:RS_1290._col1=RS_1215._col0(Inner),Output:["_col1","_col2","_col3","_col8","_col9","_col10"]
                                            <-Map 22 [SIMPLE_EDGE] vectorized
                                              SHUFFLE [RS_1215]
                                                PartitionCols:_col0
                                                Select Operator [SEL_1209] (rows=462000 width=15)
                                                  Output:["_col0","_col1","_col2","_col3"]
                                                  Filter Operator [FIL_1203] (rows=462000 width=15)
                                                    predicate:i_item_sk is not null
                                                     Please refer to the previous TableScan [TS_91]
                                            <-Map 66 [SIMPLE_EDGE] vectorized
                                              SHUFFLE [RS_1290]
                                                PartitionCols:_col1
                                                Map Join Operator [MAPJOIN_1289] (rows=101592102 width=118)
                                                  Conds:SEL_1288._col0=RS_1182._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2","_col3"]
                                                <-Map 21 [BROADCAST_EDGE] vectorized
                                                  BROADCAST [RS_1182]
                                                    PartitionCols:_col0
                                                    Select Operator [SEL_1180] (rows=652 width=12)
                                                      Output:["_col0"]
                                                      Filter Operator [FIL_1179] (rows=652 width=12)
                                                        predicate:((d_moy = 11) and (d_year = 2000) and d_date_sk is not null)
                                                        TableScan [TS_85] (rows=73049 width=12)
                                                          default@date_dim,date_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_year","d_moy"]
                                                <-Select Operator [SEL_1288] (rows=286549727 width=123)
                                                    Output:["_col0","_col1","_col2","_col3"]
                                                    Filter Operator [FIL_1287] (rows=286549727 width=123)
                                                      predicate:(cs_item_sk is not null and cs_sold_date_sk is not null)
                                                      TableScan [TS_275] (rows=287989836 width=123)
                                                        default@catalog_sales,catalog_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["cs_sold_date_sk","cs_item_sk","cs_quantity","cs_list_price"]
                              <-Reducer 58 [XPROD_EDGE]
                                XPROD_EDGE [RS_381]
                                  Merge Join Operator [MERGEJOIN_881] (rows=1 width=112)
                                    Conds:(Inner),Output:["_col1"]
                                  <-Reducer 57 [XPROD_EDGE] vectorized
                                    XPROD_EDGE [RS_1298]
                                      Select Operator [SEL_1297] (rows=1 width=8)
                                        Filter Operator [FIL_1296] (rows=1 width=8)
                                          predicate:(sq_count_check(_col0) <= 1)
                                          Group By Operator [GBY_1295] (rows=1 width=8)
                                            Output:["_col0"],aggregations:["count()"]
                                            Select Operator [SEL_1294] (rows=1 width=8)
                                              Group By Operator [GBY_1293] (rows=1 width=8)
                                                Output:["_col0"],aggregations:["count(VALUE._col0)"]
                                              <-Union 56 [CUSTOM_SIMPLE_EDGE]
                                                <-Map 55 [CONTAINS] vectorized
                                                  Reduce Output Operator [RS_1369]
                                                    Group By Operator [GBY_1368] (rows=1 width=8)
                                                      Output:["_col0"],aggregations:["count(_col0)"]
                                                      Select Operator [SEL_1367] (rows=108947337 width=3)
                                                        Output:["_col0"]
                                                        Select Operator [SEL_1366] (rows=61115434 width=2)
                                                          Output:["_col0"]
                                                          Map Join Operator [MAPJOIN_1365] (rows=61115434 width=2)
                                                            Conds:SEL_1364._col0=RS_1159._col0(Inner),HybridGraceHashJoin:true,Output:["_col1"]
                                                          <-Map 43 [BROADCAST_EDGE] vectorized
                                                            BROADCAST [RS_1159]
                                                              PartitionCols:_col0
                                                               Please refer to the previous Select Operator [SEL_1153]
                                                          <-Select Operator [SEL_1364] (rows=550076554 width=7)
                                                              Output:["_col0","_col1"]
                                                              Filter Operator [FIL_1363] (rows=550076554 width=7)
                                                                predicate:ss_sold_date_sk is not null
                                                                TableScan [TS_1032] (rows=575995635 width=7)
                                                                  Output:["ss_sold_date_sk","ss_quantity"]
                                                <-Map 59 [CONTAINS] vectorized
                                                  Reduce Output Operator [RS_1376]
                                                    Group By Operator [GBY_1375] (rows=1 width=8)
                                                      Output:["_col0"],aggregations:["count(_col0)"]
                                                      Select Operator [SEL_1374] (rows=108947337 width=3)
                                                        Output:["_col0"]
                                                        Select Operator [SEL_1373] (rows=31836679 width=3)
                                                          Output:["_col0"]
                                                          Map Join Operator [MAPJOIN_1372] (rows=31836679 width=3)
                                                            Conds:SEL_1371._col0=RS_1238._col0(Inner),HybridGraceHashJoin:true,Output:["_col1"]
                                                          <-Map 10 [BROADCAST_EDGE] vectorized
                                                            BROADCAST [RS_1238]
                                                              PartitionCols:_col0
                                                              Select Operator [SEL_1235] (rows=8116 width=8)
                                                                Output:["_col0"]
                                                                Filter Operator [FIL_1234] (rows=8116 width=8)
                                                                  predicate:(d_date_sk is not null and d_year BETWEEN 1998 AND 2000)
                                                                  TableScan [TS_13] (rows=73049 width=8)
                                                                    default@date_dim,date_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_year"]
                                                          <-Select Operator [SEL_1371] (rows=286549727 width=7)
                                                              Output:["_col0","_col1"]
                                                              Filter Operator [FIL_1370] (rows=286549727 width=7)
                                                                predicate:cs_sold_date_sk is not null
                                                                TableScan [TS_1042] (rows=287989836 width=7)
                                                                  Output:["cs_sold_date_sk","cs_quantity"]
                                                <-Map 60 [CONTAINS] vectorized
                                                  Reduce Output Operator [RS_1383]
                                                    Group By Operator [GBY_1382] (rows=1 width=8)
                                                      Output:["_col0"],aggregations:["count(_col0)"]
                                                      Select Operator [SEL_1381] (rows=108947337 width=3)
                                                        Output:["_col0"]
                                                        Select Operator [SEL_1380] (rows=15995224 width=3)
                                                          Output:["_col0"]
                                                          Map Join Operator [MAPJOIN_1379] (rows=15995224 width=3)
                                                            Conds:SEL_1378._col0=RS_1253._col0(Inner),HybridGraceHashJoin:true,Output:["_col1"]
                                                          <-Map 12 [BROADCAST_EDGE] vectorized
                                                            BROADCAST [RS_1253]
                                                              PartitionCols:_col0
                                                              Select Operator [SEL_1250] (rows=8116 width=8)
                                                                Output:["_col0"]
                                                                Filter Operator [FIL_1249] (rows=8116 width=8)
                                                                  predicate:(d_date_sk is not null and d_year BETWEEN 1998 AND 2000)
                                                                  TableScan [TS_24] (rows=73049 width=8)
                                                                    default@date_dim,date_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_year"]
                                                          <-Select Operator [SEL_1378] (rows=143966864 width=7)
                                                              Output:["_col0","_col1"]
                                                              Filter Operator [FIL_1377] (rows=143966864 width=7)
                                                                predicate:ws_sold_date_sk is not null
                                                                TableScan [TS_1052] (rows=144002668 width=7)
                                                                  Output:["ws_sold_date_sk","ws_quantity"]
                                  <-Reducer 63 [XPROD_EDGE] vectorized
                                    XPROD_EDGE [RS_1301]
                                      Select Operator [SEL_1300] (rows=1 width=112)
                                        Output:["_col0"]
                                        Group By Operator [GBY_1299] (rows=1 width=120)
                                          Output:["_col0","_col1"],aggregations:["sum(VALUE._col0)","count(VALUE._col1)"]
                                        <-Union 62 [CUSTOM_SIMPLE_EDGE]
                                          <-Map 61 [CONTAINS] vectorized
                                            Reduce Output Operator [RS_1390]
                                              Group By Operator [GBY_1389] (rows=1 width=120)
                                                Output:["_col0","_col1"],aggregations:["sum(_col0)","count(_col0)"]
                                                Select Operator [SEL_1388] (rows=108947337 width=88)
                                                  Output:["_col0"]
                                                  Select Operator [SEL_1387] (rows=61115434 width=69)
                                                    Output:["_col0","_col1"]
                                                    Map Join Operator [MAPJOIN_1386] (rows=61115434 width=69)
                                                      Conds:SEL_1385._col0=RS_1160._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2"]
                                                    <-Map 43 [BROADCAST_EDGE] vectorized
                                                      BROADCAST [RS_1160]
                                                        PartitionCols:_col0
                                                         Please refer to the previous Select Operator [SEL_1153]
                                                    <-Select Operator [SEL_1385] (rows=550076554 width=114)
                                                        Output:["_col0","_col1","_col2"]
                                                        Filter Operator [FIL_1384] (rows=550076554 width=114)
                                                          predicate:ss_sold_date_sk is not null
                                                          TableScan [TS_1062] (rows=575995635 width=114)
                                                            Output:["ss_sold_date_sk","ss_quantity","ss_list_price"]
                                          <-Map 64 [CONTAINS] vectorized
                                            Reduce Output Operator [RS_1397]
                                              Group By Operator [GBY_1396] (rows=1 width=120)
                                                Output:["_col0","_col1"],aggregations:["sum(_col0)","count(_col0)"]
                                                Select Operator [SEL_1395] (rows=108947337 width=88)
                                                  Output:["_col0"]
                                                  Select Operator [SEL_1394] (rows=31836679 width=110)
                                                    Output:["_col0","_col1"]
                                                    Map Join Operator [MAPJOIN_1393] (rows=31836679 width=110)
                                                      Conds:SEL_1392._col0=RS_1239._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2"]
                                                    <-Map 10 [BROADCAST_EDGE] vectorized
                                                      BROADCAST [RS_1239]
                                                        PartitionCols:_col0
                                                         Please refer to the previous Select Operator [SEL_1235]
                                                    <-Select Operator [SEL_1392] (rows=286549727 width=119)
                                                        Output:["_col0","_col1","_col2"]
                                                        Filter Operator [FIL_1391] (rows=286549727 width=119)
                                                          predicate:cs_sold_date_sk is not null
                                                          TableScan [TS_1072] (rows=287989836 width=119)
                                                            Output:["cs_sold_date_sk","cs_quantity","cs_list_price"]
                                          <-Map 65 [CONTAINS] vectorized
                                            Reduce Output Operator [RS_1404]
                                              Group By Operator [GBY_1403] (rows=1 width=120)
                                                Output:["_col0","_col1"],aggregations:["sum(_col0)","count(_col0)"]
                                                Select Operator [SEL_1402] (rows=108947337 width=88)
                                                  Output:["_col0"]
                                                  Select Operator [SEL_1401] (rows=15995224 width=115)
                                                    Output:["_col0","_col1"]
                                                    Map Join Operator [MAPJOIN_1400] (rows=15995224 width=115)
                                                      Conds:SEL_1399._col0=RS_1254._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2"]
                                                    <-Map 12 [BROADCAST_EDGE] vectorized
                                                      BROADCAST [RS_1254]
                                                        PartitionCols:_col0
                                                         Please refer to the previous Select Operator [SEL_1250]
                                                    <-Select Operator [SEL_1399] (rows=143966864 width=119)
                                                        Output:["_col0","_col1","_col2"]
                                                        Filter Operator [FIL_1398] (rows=143966864 width=119)
                                                          predicate:ws_sold_date_sk is not null
                                                          TableScan [TS_1082] (rows=144002668 width=119)
                                                            Output:["ws_sold_date_sk","ws_quantity","ws_list_price"]
                  <-Reducer 31 [CONTAINS]
                    Reduce Output Operator [RS_995]
                      PartitionCols:_col0, _col1, _col2, _col3, _col4
                      Group By Operator [GBY_994] (rows=7 width=200)
                        Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"],aggregations:["sum(_col4)","sum(_col5)"],keys:_col0, _col1, _col2, _col3, 0L
                        Top N Key Operator [TNK_993] (rows=3 width=221)
                          keys:_col0, _col1, _col2, _col3, 0L,sort order:+++++,top n:100
                          Select Operator [SEL_991] (rows=1 width=219)
                            Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                            Filter Operator [FIL_990] (rows=1 width=244)
                              predicate:(_col5 > _col1)
                              Merge Join Operator [MERGEJOIN_989] (rows=1 width=244)
                                Conds:(Inner),Output:["_col1","_col2","_col3","_col4","_col5","_col6"]
                              <-Reducer 30 [XPROD_EDGE] vectorized
                                XPROD_EDGE [RS_1309]
                                  Group By Operator [GBY_1308] (rows=1 width=132)
                                    Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(VALUE._col0)","count(VALUE._col1)"],keys:KEY._col0, KEY._col1, KEY._col2
                                  <-Reducer 29 [SIMPLE_EDGE]
                                    SHUFFLE [RS_569]
                                      PartitionCols:_col0, _col1, _col2
                                      Group By Operator [GBY_568] (rows=1 width=132)
                                        Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(_col3)","count()"],keys:_col0, _col1, _col2
                                        Select Operator [SEL_566] (rows=1 width=128)
                                          Output:["_col0","_col1","_col2","_col3"]
                                          Map Join Operator [MAPJOIN_878] (rows=1 width=128)
                                            Conds:MERGEJOIN_868._col1=RS_1303._col0(Inner),HybridGraceHashJoin:true,Output:["_col2","_col3","_col8","_col9","_col10"]
                                          <-Reducer 28 [BROADCAST_EDGE] vectorized
                                            BROADCAST [RS_1303]
                                              PartitionCols:_col0
                                              Group By Operator [GBY_1302] (rows=364 width=4)
                                                Output:["_col0"],keys:KEY._col0
                                              <-Map 22 [SIMPLE_EDGE] vectorized
                                                SHUFFLE [RS_1223]
                                                  PartitionCols:_col0
                                                  Group By Operator [GBY_1220] (rows=364 width=4)
                                                    Output:["_col0"],keys:_col0
                                                    Map Join Operator [MAPJOIN_1216] (rows=729 width=4)
                                                      Conds:SEL_1210._col1, _col2, _col3=RS_1199._col0, _col1, _col2(Inner),HybridGraceHashJoin:true,Output:["_col0"]
                                                    <- Please refer to the previous Reducer 42 [BROADCAST_EDGE]
                                                    <-Select Operator [SEL_1210] (rows=458612 width=15)
                                                        Output:["_col0","_col1","_col2","_col3"]
                                                        Filter Operator [FIL_1204] (rows=458612 width=15)
                                                          predicate:(i_brand_id is not null and i_category_id is not null and i_class_id is not null and i_item_sk is not null)
                                                           Please refer to the previous TableScan [TS_91]
                                          <-Merge Join Operator [MERGEJOIN_868] (rows=51404771 width=131)
                                              Conds:RS_1307._col1=RS_1217._col0(Inner),Output:["_col1","_col2","_col3","_col8","_col9","_col10"]
                                            <-Map 22 [SIMPLE_EDGE] vectorized
                                              SHUFFLE [RS_1217]
                                                PartitionCols:_col0
                                                Select Operator [SEL_1211] (rows=462000 width=15)
                                                  Output:["_col0","_col1","_col2","_col3"]
                                                  Filter Operator [FIL_1205] (rows=462000 width=15)
                                                    predicate:i_item_sk is not null
                                                     Please refer to the previous TableScan [TS_91]
                                            <-Map 78 [SIMPLE_EDGE] vectorized
                                              SHUFFLE [RS_1307]
                                                PartitionCols:_col1
                                                Map Join Operator [MAPJOIN_1306] (rows=51404771 width=119)
                                                  Conds:SEL_1305._col0=RS_1183._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2","_col3"]
                                                <-Map 21 [BROADCAST_EDGE] vectorized
                                                  BROADCAST [RS_1183]
                                                    PartitionCols:_col0
                                                     Please refer to the previous Select Operator [SEL_1180]
                                                <-Select Operator [SEL_1305] (rows=143966864 width=123)
                                                    Output:["_col0","_col1","_col2","_col3"]
                                                    Filter Operator [FIL_1304] (rows=143966864 width=123)
                                                      predicate:(ws_item_sk is not null and ws_sold_date_sk is not null)
                                                      TableScan [TS_469] (rows=144002668 width=123)
                                                        default@web_sales,web_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["ws_sold_date_sk","ws_item_sk","ws_quantity","ws_list_price"]
                              <-Reducer 70 [XPROD_EDGE]
                                XPROD_EDGE [RS_575]
                                  Merge Join Operator [MERGEJOIN_883] (rows=1 width=112)
                                    Conds:(Inner),Output:["_col1"]
                                  <-Reducer 69 [XPROD_EDGE] vectorized
                                    XPROD_EDGE [RS_1315]
                                      Select Operator [SEL_1314] (rows=1 width=8)
                                        Filter Operator [FIL_1313] (rows=1 width=8)
                                          predicate:(sq_count_check(_col0) <= 1)
                                          Group By Operator [GBY_1312] (rows=1 width=8)
                                            Output:["_col0"],aggregations:["count()"]
                                            Select Operator [SEL_1311] (rows=1 width=8)
                                              Group By Operator [GBY_1310] (rows=1 width=8)
                                                Output:["_col0"],aggregations:["count(VALUE._col0)"]
                                              <-Union 68 [CUSTOM_SIMPLE_EDGE]
                                                <-Map 67 [CONTAINS] vectorized
                                                  Reduce Output Operator [RS_1411]
                                                    Group By Operator [GBY_1410] (rows=1 width=8)
                                                      Output:["_col0"],aggregations:["count(_col0)"]
                                                      Select Operator [SEL_1409] (rows=108947337 width=3)
                                                        Output:["_col0"]
                                                        Select Operator [SEL_1408] (rows=61115434 width=2)
                                                          Output:["_col0"]
                                                          Map Join Operator [MAPJOIN_1407] (rows=61115434 width=2)
                                                            Conds:SEL_1406._col0=RS_1161._col0(Inner),HybridGraceHashJoin:true,Output:["_col1"]
                                                          <-Map 43 [BROADCAST_EDGE] vectorized
                                                            BROADCAST [RS_1161]
                                                              PartitionCols:_col0
                                                               Please refer to the previous Select Operator [SEL_1153]
                                                          <-Select Operator [SEL_1406] (rows=550076554 width=7)
                                                              Output:["_col0","_col1"]
                                                              Filter Operator [FIL_1405] (rows=550076554 width=7)
                                                                predicate:ss_sold_date_sk is not null
                                                                TableScan [TS_1092] (rows=575995635 width=7)
                                                                  Output:["ss_sold_date_sk","ss_quantity"]
                                                <-Map 71 [CONTAINS] vectorized
                                                  Reduce Output Operator [RS_1418]
                                                    Group By Operator [GBY_1417] (rows=1 width=8)
                                                      Output:["_col0"],aggregations:["count(_col0)"]
                                                      Select Operator [SEL_1416] (rows=108947337 width=3)
                                                        Output:["_col0"]
                                                        Select Operator [SEL_1415] (rows=31836679 width=3)
                                                          Output:["_col0"]
                                                          Map Join Operator [MAPJOIN_1414] (rows=31836679 width=3)
                                                            Conds:SEL_1413._col0=RS_1240._col0(Inner),HybridGraceHashJoin:true,Output:["_col1"]
                                                          <-Map 10 [BROADCAST_EDGE] vectorized
                                                            BROADCAST [RS_1240]
                                                              PartitionCols:_col0
                                                               Please refer to the previous Select Operator [SEL_1235]
                                                          <-Select Operator [SEL_1413] (rows=286549727 width=7)
                                                              Output:["_col0","_col1"]
                                                              Filter Operator [FIL_1412] (rows=286549727 width=7)
                                                                predicate:cs_sold_date_sk is not null
                                                                TableScan [TS_1102] (rows=287989836 width=7)
                                                                  Output:["cs_sold_date_sk","cs_quantity"]
                                                <-Map 72 [CONTAINS] vectorized
                                                  Reduce Output Operator [RS_1425]
                                                    Group By Operator [GBY_1424] (rows=1 width=8)
                                                      Output:["_col0"],aggregations:["count(_col0)"]
                                                      Select Operator [SEL_1423] (rows=108947337 width=3)
                                                        Output:["_col0"]
                                                        Select Operator [SEL_1422] (rows=15995224 width=3)
                                                          Output:["_col0"]
                                                          Map Join Operator [MAPJOIN_1421] (rows=15995224 width=3)
                                                            Conds:SEL_1420._col0=RS_1255._col0(Inner),HybridGraceHashJoin:true,Output:["_col1"]
                                                          <-Map 12 [BROADCAST_EDGE] vectorized
                                                            BROADCAST [RS_1255]
                                                              PartitionCols:_col0
                                                               Please refer to the previous Select Operator [SEL_1250]
                                                          <-Select Operator [SEL_1420] (rows=143966864 width=7)
                                                              Output:["_col0","_col1"]
                                                              Filter Operator [FIL_1419] (rows=143966864 width=7)
                                                                predicate:ws_sold_date_sk is not null
                                                                TableScan [TS_1112] (rows=144002668 width=7)
                                                                  Output:["ws_sold_date_sk","ws_quantity"]
                                  <-Reducer 75 [XPROD_EDGE] vectorized
                                    XPROD_EDGE [RS_1318]
                                      Select Operator [SEL_1317] (rows=1 width=112)
                                        Output:["_col0"]
                                        Group By Operator [GBY_1316] (rows=1 width=120)
                                          Output:["_col0","_col1"],aggregations:["sum(VALUE._col0)","count(VALUE._col1)"]
                                        <-Union 74 [CUSTOM_SIMPLE_EDGE]
                                          <-Map 73 [CONTAINS] vectorized
                                            Reduce Output Operator [RS_1432]
                                              Group By Operator [GBY_1431] (rows=1 width=120)
                                                Output:["_col0","_col1"],aggregations:["sum(_col0)","count(_col0)"]
                                                Select Operator [SEL_1430] (rows=108947337 width=88)
                                                  Output:["_col0"]
                                                  Select Operator [SEL_1429] (rows=61115434 width=69)
                                                    Output:["_col0","_col1"]
                                                    Map Join Operator [MAPJOIN_1428] (rows=61115434 width=69)
                                                      Conds:SEL_1427._col0=RS_1162._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2"]
                                                    <-Map 43 [BROADCAST_EDGE] vectorized
                                                      BROADCAST [RS_1162]
                                                        PartitionCols:_col0
                                                         Please refer to the previous Select Operator [SEL_1153]
                                                    <-Select Operator [SEL_1427] (rows=550076554 width=114)
                                                        Output:["_col0","_col1","_col2"]
                                                        Filter Operator [FIL_1426] (rows=550076554 width=114)
                                                          predicate:ss_sold_date_sk is not null
                                                          TableScan [TS_1122] (rows=575995635 width=114)
                                                            Output:["ss_sold_date_sk","ss_quantity","ss_list_price"]
                                          <-Map 76 [CONTAINS] vectorized
                                            Reduce Output Operator [RS_1439]
                                              Group By Operator [GBY_1438] (rows=1 width=120)
                                                Output:["_col0","_col1"],aggregations:["sum(_col0)","count(_col0)"]
                                                Select Operator [SEL_1437] (rows=108947337 width=88)
                                                  Output:["_col0"]
                                                  Select Operator [SEL_1436] (rows=31836679 width=110)
                                                    Output:["_col0","_col1"]
                                                    Map Join Operator [MAPJOIN_1435] (rows=31836679 width=110)
                                                      Conds:SEL_1434._col0=RS_1241._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2"]
                                                    <-Map 10 [BROADCAST_EDGE] vectorized
                                                      BROADCAST [RS_1241]
                                                        PartitionCols:_col0
                                                         Please refer to the previous Select Operator [SEL_1235]
                                                    <-Select Operator [SEL_1434] (rows=286549727 width=119)
                                                        Output:["_col0","_col1","_col2"]
                                                        Filter Operator [FIL_1433] (rows=286549727 width=119)
                                                          predicate:cs_sold_date_sk is not null
                                                          TableScan [TS_1132] (rows=287989836 width=119)
                                                            Output:["cs_sold_date_sk","cs_quantity","cs_list_price"]
                                          <-Map 77 [CONTAINS] vectorized
                                            Reduce Output Operator [RS_1446]
                                              Group By Operator [GBY_1445] (rows=1 width=120)
                                                Output:["_col0","_col1"],aggregations:["sum(_col0)","count(_col0)"]
                                                Select Operator [SEL_1444] (rows=108947337 width=88)
                                                  Output:["_col0"]
                                                  Select Operator [SEL_1443] (rows=15995224 width=115)
                                                    Output:["_col0","_col1"]
                                                    Map Join Operator [MAPJOIN_1442] (rows=15995224 width=115)
                                                      Conds:SEL_1441._col0=RS_1256._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2"]
                                                    <-Map 12 [BROADCAST_EDGE] vectorized
                                                      BROADCAST [RS_1256]
                                                        PartitionCols:_col0
                                                         Please refer to the previous Select Operator [SEL_1250]
                                                    <-Select Operator [SEL_1441] (rows=143966864 width=119)
                                                        Output:["_col0","_col1","_col2"]
                                                        Filter Operator [FIL_1440] (rows=143966864 width=119)
                                                          predicate:ws_sold_date_sk is not null
                                                          TableScan [TS_1142] (rows=144002668 width=119)
                                                            Output:["ws_sold_date_sk","ws_quantity","ws_list_price"]
                  <-Reducer 5 [CONTAINS]
                    Reduce Output Operator [RS_931]
                      PartitionCols:_col0, _col1, _col2, _col3, _col4
                      Group By Operator [GBY_930] (rows=7 width=200)
                        Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"],aggregations:["sum(_col4)","sum(_col5)"],keys:_col0, _col1, _col2, _col3, 0L
                        Top N Key Operator [TNK_929] (rows=3 width=221)
                          keys:_col0, _col1, _col2, _col3, 0L,sort order:+++++,top n:100
                          Select Operator [SEL_927] (rows=1 width=221)
                            Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                            Filter Operator [FIL_926] (rows=1 width=244)
                              predicate:(_col5 > _col1)
                              Merge Join Operator [MERGEJOIN_925] (rows=1 width=244)
                                Conds:(Inner),Output:["_col1","_col2","_col3","_col4","_col5","_col6"]
                              <-Reducer 20 [XPROD_EDGE] vectorized
                                XPROD_EDGE [RS_1227]
                                  Group By Operator [GBY_1226] (rows=1 width=132)
                                    Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(VALUE._col0)","count(VALUE._col1)"],keys:KEY._col0, KEY._col1, KEY._col2
                                  <-Reducer 19 [SIMPLE_EDGE]
                                    SHUFFLE [RS_182]
                                      PartitionCols:_col0, _col1, _col2
                                      Group By Operator [GBY_181] (rows=1 width=132)
                                        Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(_col3)","count()"],keys:_col0, _col1, _col2
                                        Select Operator [SEL_179] (rows=1 width=128)
                                          Output:["_col0","_col1","_col2","_col3"]
                                          Map Join Operator [MAPJOIN_876] (rows=1 width=128)
                                            Conds:MERGEJOIN_838._col1=RS_1225._col0(Inner),HybridGraceHashJoin:true,Output:["_col2","_col3","_col8","_col9","_col10"]
                                          <-Reducer 23 [BROADCAST_EDGE] vectorized
                                            BROADCAST [RS_1225]
                                              PartitionCols:_col0
                                              Group By Operator [GBY_1224] (rows=364 width=4)
                                                Output:["_col0"],keys:KEY._col0
                                              <-Map 22 [SIMPLE_EDGE] vectorized
                                                SHUFFLE [RS_1221]
                                                  PartitionCols:_col0
                                                  Group By Operator [GBY_1218] (rows=364 width=4)
                                                    Output:["_col0"],keys:_col0
                                                    Map Join Operator [MAPJOIN_1212] (rows=729 width=4)
                                                      Conds:SEL_1206._col1, _col2, _col3=RS_1191._col0, _col1, _col2(Inner),HybridGraceHashJoin:true,Output:["_col0"]
                                                    <- Please refer to the previous Reducer 36 [BROADCAST_EDGE]
                                                    <-Select Operator [SEL_1206] (rows=458612 width=15)
                                                        Output:["_col0","_col1","_col2","_col3"]
                                                        Filter Operator [FIL_1200] (rows=458612 width=15)
                                                          predicate:(i_brand_id is not null and i_category_id is not null and i_class_id is not null and i_item_sk is not null)
                                                           Please refer to the previous TableScan [TS_91]
                                          <-Merge Join Operator [MERGEJOIN_838] (rows=196410188 width=117)
                                              Conds:RS_1187._col1=RS_1213._col0(Inner),Output:["_col1","_col2","_col3","_col8","_col9","_col10"]
                                            <-Map 22 [SIMPLE_EDGE] vectorized
                                              SHUFFLE [RS_1213]
                                                PartitionCols:_col0
                                                Select Operator [SEL_1207] (rows=462000 width=15)
                                                  Output:["_col0","_col1","_col2","_col3"]
                                                  Filter Operator [FIL_1201] (rows=462000 width=15)
                                                    predicate:i_item_sk is not null
                                                     Please refer to the previous TableScan [TS_91]
                                            <-Map 18 [SIMPLE_EDGE] vectorized
                                              SHUFFLE [RS_1187]
                                                PartitionCols:_col1
                                                Map Join Operator [MAPJOIN_1186] (rows=196410188 width=105)
                                                  Conds:SEL_1185._col0=RS_1181._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2","_col3"]
                                                <-Map 21 [BROADCAST_EDGE] vectorized
                                                  BROADCAST [RS_1181]
                                                    PartitionCols:_col0
                                                     Please refer to the previous Select Operator [SEL_1180]
                                                <-Select Operator [SEL_1185] (rows=550076554 width=118)
                                                    Output:["_col0","_col1","_col2","_col3"]
                                                    Filter Operator [FIL_1184] (rows=550076554 width=118)
                                                      predicate:(ss_item_sk is not null and ss_sold_date_sk is not null)
                                                      TableScan [TS_82] (rows=575995635 width=118)
                                                        default@store_sales,store_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["ss_sold_date_sk","ss_item_sk","ss_quantity","ss_list_price"]
                              <-Reducer 4 [XPROD_EDGE]
                                XPROD_EDGE [RS_188]
                                  Merge Join Operator [MERGEJOIN_879] (rows=1 width=112)
                                    Conds:(Inner),Output:["_col1"]
                                  <-Reducer 15 [XPROD_EDGE] vectorized
                                    XPROD_EDGE [RS_1178]
                                      Select Operator [SEL_1177] (rows=1 width=112)
                                        Output:["_col0"]
                                        Group By Operator [GBY_1176] (rows=1 width=120)
                                          Output:["_col0","_col1"],aggregations:["sum(VALUE._col0)","count(VALUE._col1)"]
                                        <-Union 14 [CUSTOM_SIMPLE_EDGE]
                                          <-Map 13 [CONTAINS] vectorized
                                            Reduce Output Operator [RS_1270]
                                              Group By Operator [GBY_1269] (rows=1 width=120)
                                                Output:["_col0","_col1"],aggregations:["sum(_col0)","count(_col0)"]
                                                Select Operator [SEL_1268] (rows=108947337 width=88)
                                                  Output:["_col0"]
                                                  Select Operator [SEL_1267] (rows=61115434 width=69)
                                                    Output:["_col0","_col1"]
                                                    Map Join Operator [MAPJOIN_1266] (rows=61115434 width=69)
                                                      Conds:SEL_1265._col0=RS_1158._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2"]
                                                    <-Map 43 [BROADCAST_EDGE] vectorized
                                                      BROADCAST [RS_1158]
                                                        PartitionCols:_col0
                                                         Please refer to the previous Select Operator [SEL_1153]
                                                    <-Select Operator [SEL_1265] (rows=550076554 width=114)
                                                        Output:["_col0","_col1","_col2"]
                                                        Filter Operator [FIL_1264] (rows=550076554 width=114)
                                                          predicate:ss_sold_date_sk is not null
                                                          TableScan [TS_952] (rows=575995635 width=114)
                                                            Output:["ss_sold_date_sk","ss_quantity","ss_list_price"]
                                          <-Map 16 [CONTAINS] vectorized
                                            Reduce Output Operator [RS_1277]
                                              Group By Operator [GBY_1276] (rows=1 width=120)
                                                Output:["_col0","_col1"],aggregations:["sum(_col0)","count(_col0)"]
                                                Select Operator [SEL_1275] (rows=108947337 width=88)
                                                  Output:["_col0"]
                                                  Select Operator [SEL_1274] (rows=31836679 width=110)
                                                    Output:["_col0","_col1"]
                                                    Map Join Operator [MAPJOIN_1273] (rows=31836679 width=110)
                                                      Conds:SEL_1272._col0=RS_1237._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2"]
                                                    <-Map 10 [BROADCAST_EDGE] vectorized
                                                      BROADCAST [RS_1237]
                                                        PartitionCols:_col0
                                                         Please refer to the previous Select Operator [SEL_1235]
                                                    <-Select Operator [SEL_1272] (rows=286549727 width=119)
                                                        Output:["_col0","_col1","_col2"]
                                                        Filter Operator [FIL_1271] (rows=286549727 width=119)
                                                          predicate:cs_sold_date_sk is not null
                                                          TableScan [TS_962] (rows=287989836 width=119)
                                                            Output:["cs_sold_date_sk","cs_quantity","cs_list_price"]
                                          <-Map 17 [CONTAINS] vectorized
                                            Reduce Output Operator [RS_1284]
                                              Group By Operator [GBY_1283] (rows=1 width=120)
                                                Output:["_col0","_col1"],aggregations:["sum(_col0)","count(_col0)"]
                                                Select Operator [SEL_1282] (rows=108947337 width=88)
                                                  Output:["_col0"]
                                                  Select Operator [SEL_1281] (rows=15995224 width=115)
                                                    Output:["_col0","_col1"]
                                                    Map Join Operator [MAPJOIN_1280] (rows=15995224 width=115)
                                                      Conds:SEL_1279._col0=RS_1252._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2"]
                                                    <-Map 12 [BROADCAST_EDGE] vectorized
                                                      BROADCAST [RS_1252]
                                                        PartitionCols:_col0
                                                         Please refer to the previous Select Operator [SEL_1250]
                                                    <-Select Operator [SEL_1279] (rows=143966864 width=119)
                                                        Output:["_col0","_col1","_col2"]
                                                        Filter Operator [FIL_1278] (rows=143966864 width=119)
                                                          predicate:ws_sold_date_sk is not null
                                                          TableScan [TS_972] (rows=144002668 width=119)
                                                            Output:["ws_sold_date_sk","ws_quantity","ws_list_price"]
                                  <-Reducer 3 [XPROD_EDGE] vectorized
                                    XPROD_EDGE [RS_1175]
                                      Select Operator [SEL_1174] (rows=1 width=8)
                                        Filter Operator [FIL_1173] (rows=1 width=8)
                                          predicate:(sq_count_check(_col0) <= 1)
                                          Group By Operator [GBY_1172] (rows=1 width=8)
                                            Output:["_col0"],aggregations:["count()"]
                                            Select Operator [SEL_1171] (rows=1 width=8)
                                              Group By Operator [GBY_1170] (rows=1 width=8)
                                                Output:["_col0"],aggregations:["count(VALUE._col0)"]
                                              <-Union 2 [CUSTOM_SIMPLE_EDGE]
                                                <-Map 1 [CONTAINS] vectorized
                                                  Reduce Output Operator [RS_1169]
                                                    Group By Operator [GBY_1168] (rows=1 width=8)
                                                      Output:["_col0"],aggregations:["count(_col0)"]
                                                      Select Operator [SEL_1167] (rows=108947337 width=3)
                                                        Output:["_col0"]
                                                        Select Operator [SEL_1166] (rows=61115434 width=2)
                                                          Output:["_col0"]
                                                          Map Join Operator [MAPJOIN_1165] (rows=61115434 width=2)
                                                            Conds:SEL_1164._col0=RS_1157._col0(Inner),HybridGraceHashJoin:true,Output:["_col1"]
                                                          <-Map 43 [BROADCAST_EDGE] vectorized
                                                            BROADCAST [RS_1157]
                                                              PartitionCols:_col0
                                                               Please refer to the previous Select Operator [SEL_1153]
                                                          <-Select Operator [SEL_1164] (rows=550076554 width=7)
                                                              Output:["_col0","_col1"]
                                                              Filter Operator [FIL_1163] (rows=550076554 width=7)
                                                                predicate:ss_sold_date_sk is not null
                                                                TableScan [TS_915] (rows=575995635 width=7)
                                                                  Output:["ss_sold_date_sk","ss_quantity"]
                                                <-Map 11 [CONTAINS] vectorized
                                                  Reduce Output Operator [RS_1263]
                                                    Group By Operator [GBY_1262] (rows=1 width=8)
                                                      Output:["_col0"],aggregations:["count(_col0)"]
                                                      Select Operator [SEL_1261] (rows=108947337 width=3)
                                                        Output:["_col0"]
                                                        Select Operator [SEL_1260] (rows=15995224 width=3)
                                                          Output:["_col0"]
                                                          Map Join Operator [MAPJOIN_1259] (rows=15995224 width=3)
                                                            Conds:SEL_1258._col0=RS_1251._col0(Inner),HybridGraceHashJoin:true,Output:["_col1"]
                                                          <-Map 12 [BROADCAST_EDGE] vectorized
                                                            BROADCAST [RS_1251]
                                                              PartitionCols:_col0
                                                               Please refer to the previous Select Operator [SEL_1250]
                                                          <-Select Operator [SEL_1258] (rows=143966864 width=7)
                                                              Output:["_col0","_col1"]
                                                              Filter Operator [FIL_1257] (rows=143966864 width=7)
                                                                predicate:ws_sold_date_sk is not null
                                                                TableScan [TS_942] (rows=144002668 width=7)
                                                                  Output:["ws_sold_date_sk","ws_quantity"]
                                                <-Map 9 [CONTAINS] vectorized
                                                  Reduce Output Operator [RS_1248]
                                                    Group By Operator [GBY_1247] (rows=1 width=8)
                                                      Output:["_col0"],aggregations:["count(_col0)"]
                                                      Select Operator [SEL_1246] (rows=108947337 width=3)
                                                        Output:["_col0"]
                                                        Select Operator [SEL_1245] (rows=31836679 width=3)
                                                          Output:["_col0"]
                                                          Map Join Operator [MAPJOIN_1244] (rows=31836679 width=3)
                                                            Conds:SEL_1243._col0=RS_1236._col0(Inner),HybridGraceHashJoin:true,Output:["_col1"]
                                                          <-Map 10 [BROADCAST_EDGE] vectorized
                                                            BROADCAST [RS_1236]
                                                              PartitionCols:_col0
                                                               Please refer to the previous Select Operator [SEL_1235]
                                                          <-Select Operator [SEL_1243] (rows=286549727 width=7)
                                                              Output:["_col0","_col1"]
                                                              Filter Operator [FIL_1242] (rows=286549727 width=7)
                                                                predicate:cs_sold_date_sk is not null
                                                                TableScan [TS_932] (rows=287989836 width=7)
                                                                  Output:["cs_sold_date_sk","cs_quantity"]

