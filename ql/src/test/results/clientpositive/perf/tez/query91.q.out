PREHOOK: query: explain
select  
        cc_call_center_id Call_Center,
        cc_name Call_Center_Name,
        cc_manager Manager,
        sum(cr_net_loss) Returns_Loss
from
        call_center,
        catalog_returns,
        date_dim,
        customer,
        customer_address,
        customer_demographics,
        household_demographics
where
        cr_call_center_sk       = cc_call_center_sk
and     cr_returned_date_sk     = d_date_sk
and     cr_returning_customer_sk= c_customer_sk
and     cd_demo_sk              = c_current_cdemo_sk
and     hd_demo_sk              = c_current_hdemo_sk
and     ca_address_sk           = c_current_addr_sk
and     d_year                  = 1999 
and     d_moy                   = 11
and     ( (cd_marital_status       = 'M' and cd_education_status     = 'Unknown')
        or(cd_marital_status       = 'W' and cd_education_status     = 'Advanced Degree'))
and     hd_buy_potential like '0-500%'
and     ca_gmt_offset           = -7
group by cc_call_center_id,cc_name,cc_manager,cd_marital_status,cd_education_status
order by sum(cr_net_loss) desc
PREHOOK: type: QUERY
PREHOOK: Input: default@call_center
PREHOOK: Input: default@catalog_returns
PREHOOK: Input: default@customer
PREHOOK: Input: default@customer_address
PREHOOK: Input: default@customer_demographics
PREHOOK: Input: default@date_dim
PREHOOK: Input: default@household_demographics
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain
select  
        cc_call_center_id Call_Center,
        cc_name Call_Center_Name,
        cc_manager Manager,
        sum(cr_net_loss) Returns_Loss
from
        call_center,
        catalog_returns,
        date_dim,
        customer,
        customer_address,
        customer_demographics,
        household_demographics
where
        cr_call_center_sk       = cc_call_center_sk
and     cr_returned_date_sk     = d_date_sk
and     cr_returning_customer_sk= c_customer_sk
and     cd_demo_sk              = c_current_cdemo_sk
and     hd_demo_sk              = c_current_hdemo_sk
and     ca_address_sk           = c_current_addr_sk
and     d_year                  = 1999 
and     d_moy                   = 11
and     ( (cd_marital_status       = 'M' and cd_education_status     = 'Unknown')
        or(cd_marital_status       = 'W' and cd_education_status     = 'Advanced Degree'))
and     hd_buy_potential like '0-500%'
and     ca_gmt_offset           = -7
group by cc_call_center_id,cc_name,cc_manager,cd_marital_status,cd_education_status
order by sum(cr_net_loss) desc
POSTHOOK: type: QUERY
POSTHOOK: Input: default@call_center
POSTHOOK: Input: default@catalog_returns
POSTHOOK: Input: default@customer
POSTHOOK: Input: default@customer_address
POSTHOOK: Input: default@customer_demographics
POSTHOOK: Input: default@date_dim
POSTHOOK: Input: default@household_demographics
POSTHOOK: Output: hdfs://### HDFS PATH ###
Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Map 5 (BROADCAST_EDGE), Map 6 (BROADCAST_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Reducer 9 (SIMPLE_EDGE)
Reducer 3 <- Reducer 2 (SIMPLE_EDGE)
Reducer 4 <- Reducer 3 (SIMPLE_EDGE)
Reducer 8 <- Map 10 (SIMPLE_EDGE), Map 7 (SIMPLE_EDGE)
Reducer 9 <- Map 11 (SIMPLE_EDGE), Map 12 (BROADCAST_EDGE), Reducer 8 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 4 vectorized
      File Output Operator [FS_113]
        Select Operator [SEL_112] (rows=96 width=406)
          Output:["_col0","_col1","_col2","_col3"]
        <-Reducer 3 [SIMPLE_EDGE] vectorized
          SHUFFLE [RS_111]
            Select Operator [SEL_110] (rows=96 width=518)
              Output:["_col0","_col1","_col2","_col4"]
              Group By Operator [GBY_109] (rows=96 width=585)
                Output:["_col0","_col1","_col2","_col3","_col4","_col5"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2, KEY._col3, KEY._col4
              <-Reducer 2 [SIMPLE_EDGE]
                SHUFFLE [RS_42]
                  PartitionCols:_col0, _col1, _col2, _col3, _col4
                  Group By Operator [GBY_41] (rows=192 width=585)
                    Output:["_col0","_col1","_col2","_col3","_col4","_col5"],aggregations:["sum(_col3)"],keys:_col8, _col9, _col10, _col18, _col19
                    Merge Join Operator [MERGEJOIN_82] (rows=952781 width=519)
                      Conds:RS_96._col1=RS_38._col2(Inner),Output:["_col3","_col8","_col9","_col10","_col18","_col19"]
                    <-Map 1 [SIMPLE_EDGE] vectorized
                      SHUFFLE [RS_96]
                        PartitionCols:_col1
                        Map Join Operator [MAPJOIN_95] (rows=8574965 width=402)
                          Conds:MAPJOIN_94._col2=RS_91._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col3","_col8","_col9","_col10"]
                        <-Map 6 [BROADCAST_EDGE] vectorized
                          BROADCAST [RS_91]
                            PartitionCols:_col0
                            Select Operator [SEL_90] (rows=60 width=298)
                              Output:["_col0","_col1","_col2","_col3"]
                              Filter Operator [FIL_89] (rows=60 width=298)
                                predicate:cc_call_center_sk is not null
                                TableScan [TS_6] (rows=60 width=298)
                                  default@call_center,call_center,Tbl:COMPLETE,Col:COMPLETE,Output:["cc_call_center_sk","cc_call_center_id","cc_name","cc_manager"]
                        <-Map Join Operator [MAPJOIN_94] (rows=8574965 width=112)
                            Conds:SEL_93._col0=RS_88._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2","_col3"]
                          <-Map 5 [BROADCAST_EDGE] vectorized
                            BROADCAST [RS_88]
                              PartitionCols:_col0
                              Select Operator [SEL_87] (rows=652 width=12)
                                Output:["_col0"]
                                Filter Operator [FIL_86] (rows=652 width=12)
                                  predicate:((d_moy = 11) and (d_year = 1999) and d_date_sk is not null)
                                  TableScan [TS_3] (rows=73049 width=12)
                                    default@date_dim,date_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_year","d_moy"]
                          <-Select Operator [SEL_93] (rows=27658583 width=121)
                              Output:["_col0","_col1","_col2","_col3"]
                              Filter Operator [FIL_92] (rows=27658583 width=121)
                                predicate:(cr_call_center_sk is not null and cr_returned_date_sk is not null and cr_returning_customer_sk is not null)
                                TableScan [TS_0] (rows=28798881 width=121)
                                  default@catalog_returns,catalog_returns,Tbl:COMPLETE,Col:COMPLETE,Output:["cr_returned_date_sk","cr_returning_customer_sk","cr_call_center_sk","cr_net_loss"]
                    <-Reducer 9 [SIMPLE_EDGE]
                      SHUFFLE [RS_38]
                        PartitionCols:_col2
                        Select Operator [SEL_30] (rows=901465 width=183)
                          Output:["_col2","_col7","_col8"]
                          Map Join Operator [MAPJOIN_81] (rows=901465 width=183)
                            Conds:MERGEJOIN_80._col2=RS_108._col0(Inner),HybridGraceHashJoin:true,Output:["_col0","_col5","_col6"]
                          <-Map 12 [BROADCAST_EDGE] vectorized
                            BROADCAST [RS_108]
                              PartitionCols:_col0
                              Select Operator [SEL_107] (rows=3600 width=96)
                                Output:["_col0"]
                                Filter Operator [FIL_106] (rows=3600 width=96)
                                  predicate:((hd_buy_potential like '0-500%') and hd_demo_sk is not null)
                                  TableScan [TS_18] (rows=7200 width=96)
                                    default@household_demographics,household_demographics,Tbl:COMPLETE,Col:COMPLETE,Output:["hd_demo_sk","hd_buy_potential"]
                          <-Merge Join Operator [MERGEJOIN_80] (rows=1802930 width=183)
                              Conds:RS_24._col3=RS_105._col0(Inner),Output:["_col0","_col2","_col5","_col6"]
                            <-Map 11 [SIMPLE_EDGE] vectorized
                              SHUFFLE [RS_105]
                                PartitionCols:_col0
                                Select Operator [SEL_104] (rows=8000000 width=116)
                                  Output:["_col0"]
                                  Filter Operator [FIL_103] (rows=8000000 width=112)
                                    predicate:((ca_gmt_offset = -7) and ca_address_sk is not null)
                                    TableScan [TS_15] (rows=40000000 width=112)
                                      default@customer_address,customer_address,Tbl:COMPLETE,Col:COMPLETE,Output:["ca_address_sk","ca_gmt_offset"]
                            <-Reducer 8 [SIMPLE_EDGE]
                              SHUFFLE [RS_24]
                                PartitionCols:_col3
                                Merge Join Operator [MERGEJOIN_79] (rows=9014645 width=189)
                                  Conds:RS_99._col1=RS_102._col0(Inner),Output:["_col0","_col2","_col3","_col5","_col6"]
                                <-Map 10 [SIMPLE_EDGE] vectorized
                                  SHUFFLE [RS_102]
                                    PartitionCols:_col0
                                    Select Operator [SEL_101] (rows=206868 width=183)
                                      Output:["_col0","_col1","_col2"]
                                      Filter Operator [FIL_100] (rows=206868 width=183)
                                        predicate:((((cd_marital_status = 'M') and (cd_education_status = 'Unknown')) or ((cd_marital_status = 'W') and (cd_education_status = 'Advanced Degree'))) and ((cd_education_status = 'Unknown') or (cd_education_status = 'Advanced Degree')) and ((cd_marital_status = 'M') or (cd_marital_status = 'W')) and cd_demo_sk is not null)
                                        TableScan [TS_12] (rows=1861800 width=183)
                                          default@customer_demographics,customer_demographics,Tbl:COMPLETE,Col:COMPLETE,Output:["cd_demo_sk","cd_marital_status","cd_education_status"]
                                <-Map 7 [SIMPLE_EDGE] vectorized
                                  SHUFFLE [RS_99]
                                    PartitionCols:_col1
                                    Select Operator [SEL_98] (rows=74500295 width=15)
                                      Output:["_col0","_col1","_col2","_col3"]
                                      Filter Operator [FIL_97] (rows=74500295 width=15)
                                        predicate:(c_current_addr_sk is not null and c_current_cdemo_sk is not null and c_current_hdemo_sk is not null and c_customer_sk is not null)
                                        TableScan [TS_9] (rows=80000000 width=15)
                                          default@customer,customer,Tbl:COMPLETE,Col:COMPLETE,Output:["c_customer_sk","c_current_cdemo_sk","c_current_hdemo_sk","c_current_addr_sk"]

