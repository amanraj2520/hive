PREHOOK: query: explain
select  
  cd_gender,
  cd_marital_status,
  cd_education_status,
  count(*) cnt1,
  cd_purchase_estimate,
  count(*) cnt2,
  cd_credit_rating,
  count(*) cnt3
 from
  customer c,customer_address ca,customer_demographics
 where
  c.c_current_addr_sk = ca.ca_address_sk and
  ca_state in ('CO','IL','MN') and
  cd_demo_sk = c.c_current_cdemo_sk and 
  exists (select *
          from store_sales,date_dim
          where c.c_customer_sk = ss_customer_sk and
                ss_sold_date_sk = d_date_sk and
                d_year = 1999 and
                d_moy between 1 and 1+2) and
   (not exists (select *
            from web_sales,date_dim
            where c.c_customer_sk = ws_bill_customer_sk and
                  ws_sold_date_sk = d_date_sk and
                  d_year = 1999 and
                  d_moy between 1 and 1+2) and
    not exists (select * 
            from catalog_sales,date_dim
            where c.c_customer_sk = cs_ship_customer_sk and
                  cs_sold_date_sk = d_date_sk and
                  d_year = 1999 and
                  d_moy between 1 and 1+2))
 group by cd_gender,
          cd_marital_status,
          cd_education_status,
          cd_purchase_estimate,
          cd_credit_rating
 order by cd_gender,
          cd_marital_status,
          cd_education_status,
          cd_purchase_estimate,
          cd_credit_rating
 limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@catalog_sales
PREHOOK: Input: default@customer
PREHOOK: Input: default@customer_address
PREHOOK: Input: default@customer_demographics
PREHOOK: Input: default@date_dim
PREHOOK: Input: default@store_sales
PREHOOK: Input: default@web_sales
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain
select  
  cd_gender,
  cd_marital_status,
  cd_education_status,
  count(*) cnt1,
  cd_purchase_estimate,
  count(*) cnt2,
  cd_credit_rating,
  count(*) cnt3
 from
  customer c,customer_address ca,customer_demographics
 where
  c.c_current_addr_sk = ca.ca_address_sk and
  ca_state in ('CO','IL','MN') and
  cd_demo_sk = c.c_current_cdemo_sk and 
  exists (select *
          from store_sales,date_dim
          where c.c_customer_sk = ss_customer_sk and
                ss_sold_date_sk = d_date_sk and
                d_year = 1999 and
                d_moy between 1 and 1+2) and
   (not exists (select *
            from web_sales,date_dim
            where c.c_customer_sk = ws_bill_customer_sk and
                  ws_sold_date_sk = d_date_sk and
                  d_year = 1999 and
                  d_moy between 1 and 1+2) and
    not exists (select * 
            from catalog_sales,date_dim
            where c.c_customer_sk = cs_ship_customer_sk and
                  cs_sold_date_sk = d_date_sk and
                  d_year = 1999 and
                  d_moy between 1 and 1+2))
 group by cd_gender,
          cd_marital_status,
          cd_education_status,
          cd_purchase_estimate,
          cd_credit_rating
 order by cd_gender,
          cd_marital_status,
          cd_education_status,
          cd_purchase_estimate,
          cd_credit_rating
 limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@catalog_sales
POSTHOOK: Input: default@customer
POSTHOOK: Input: default@customer_address
POSTHOOK: Input: default@customer_demographics
POSTHOOK: Input: default@date_dim
POSTHOOK: Input: default@store_sales
POSTHOOK: Input: default@web_sales
POSTHOOK: Output: hdfs://### HDFS PATH ###
Plan optimized by CBO.

Vertex dependency in root stage
Map 10 <- Map 9 (BROADCAST_EDGE)
Map 12 <- Map 9 (BROADCAST_EDGE)
Map 8 <- Map 9 (BROADCAST_EDGE)
Reducer 11 <- Map 10 (SIMPLE_EDGE)
Reducer 13 <- Map 12 (SIMPLE_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 6 (SIMPLE_EDGE)
Reducer 3 <- Map 7 (SIMPLE_EDGE), Map 8 (BROADCAST_EDGE), Reducer 11 (BROADCAST_EDGE), Reducer 13 (BROADCAST_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 4 <- Reducer 3 (SIMPLE_EDGE)
Reducer 5 <- Reducer 4 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 5 vectorized
      File Output Operator [FS_161]
        Limit [LIM_160] (rows=1 width=383)
          Number of rows:100
          Select Operator [SEL_159] (rows=1 width=383)
            Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
          <-Reducer 4 [SIMPLE_EDGE] vectorized
            SHUFFLE [RS_158]
              Select Operator [SEL_157] (rows=1 width=383)
                Output:["_col0","_col1","_col2","_col3","_col4","_col6"]
                Group By Operator [GBY_156] (rows=1 width=367)
                  Output:["_col0","_col1","_col2","_col3","_col4","_col5"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2, KEY._col3, KEY._col4
                <-Reducer 3 [SIMPLE_EDGE]
                  SHUFFLE [RS_69]
                    PartitionCols:_col0, _col1, _col2, _col3, _col4
                    Group By Operator [GBY_68] (rows=1 width=367)
                      Output:["_col0","_col1","_col2","_col3","_col4","_col5"],aggregations:["count()"],keys:_col6, _col7, _col8, _col9, _col10
                      Top N Key Operator [TNK_105] (rows=1 width=363)
                        keys:_col6, _col7, _col8, _col9, _col10,sort order:+++++,top n:100
                        Select Operator [SEL_67] (rows=1 width=363)
                          Output:["_col6","_col7","_col8","_col9","_col10"]
                          Filter Operator [FIL_66] (rows=1 width=363)
                            predicate:_col14 is null
                            Map Join Operator [MAPJOIN_113] (rows=1 width=363)
                              Conds:SEL_48._col0=RS_155._col0(Left Outer),HybridGraceHashJoin:true,Output:["_col6","_col7","_col8","_col9","_col10","_col14"]
                            <-Reducer 13 [BROADCAST_EDGE] vectorized
                              BROADCAST [RS_155]
                                PartitionCols:_col0
                                Select Operator [SEL_154] (rows=165374 width=7)
                                  Output:["_col0","_col1"]
                                  Group By Operator [GBY_153] (rows=165374 width=3)
                                    Output:["_col0"],keys:KEY._col0
                                  <-Map 12 [SIMPLE_EDGE] vectorized
                                    SHUFFLE [RS_152]
                                      PartitionCols:_col0
                                      Group By Operator [GBY_151] (rows=165374 width=3)
                                        Output:["_col0"],keys:_col1
                                        Map Join Operator [MAPJOIN_150] (rows=33642830 width=3)
                                          Conds:SEL_149._col0=RS_133._col0(Inner),HybridGraceHashJoin:true,Output:["_col1"]
                                        <-Map 9 [BROADCAST_EDGE] vectorized
                                          BROADCAST [RS_133]
                                            PartitionCols:_col0
                                            Select Operator [SEL_130] (rows=217 width=12)
                                              Output:["_col0"]
                                              Filter Operator [FIL_129] (rows=217 width=12)
                                                predicate:((d_year = 1999) and d_date_sk is not null and d_moy BETWEEN 1 AND 3)
                                                TableScan [TS_12] (rows=73049 width=12)
                                                  default@date_dim,date_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_year","d_moy"]
                                        <-Select Operator [SEL_149] (rows=285115246 width=7)
                                            Output:["_col0","_col1"]
                                            Filter Operator [FIL_148] (rows=285115246 width=7)
                                              predicate:(cs_ship_customer_sk is not null and cs_sold_date_sk is not null)
                                              TableScan [TS_49] (rows=287989836 width=7)
                                                default@catalog_sales,catalog_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["cs_sold_date_sk","cs_ship_customer_sk"]
                            <-Select Operator [SEL_48] (rows=1 width=367)
                                Output:["_col0","_col6","_col7","_col8","_col9","_col10"]
                                Filter Operator [FIL_47] (rows=1 width=367)
                                  predicate:_col12 is null
                                  Map Join Operator [MAPJOIN_112] (rows=62 width=367)
                                    Conds:MAPJOIN_111._col0=RS_147._col0(Left Outer),HybridGraceHashJoin:true,Output:["_col0","_col6","_col7","_col8","_col9","_col10","_col12"]
                                  <-Reducer 11 [BROADCAST_EDGE] vectorized
                                    BROADCAST [RS_147]
                                      PartitionCols:_col0
                                      Select Operator [SEL_146] (rows=168147 width=7)
                                        Output:["_col0","_col1"]
                                        Group By Operator [GBY_145] (rows=168147 width=3)
                                          Output:["_col0"],keys:KEY._col0
                                        <-Map 10 [SIMPLE_EDGE] vectorized
                                          SHUFFLE [RS_144]
                                            PartitionCols:_col0
                                            Group By Operator [GBY_143] (rows=168147 width=3)
                                              Output:["_col0"],keys:_col1
                                              Map Join Operator [MAPJOIN_142] (rows=17104380 width=3)
                                                Conds:SEL_141._col0=RS_132._col0(Inner),HybridGraceHashJoin:true,Output:["_col1"]
                                              <-Map 9 [BROADCAST_EDGE] vectorized
                                                BROADCAST [RS_132]
                                                  PartitionCols:_col0
                                                   Please refer to the previous Select Operator [SEL_130]
                                              <-Select Operator [SEL_141] (rows=143930993 width=7)
                                                  Output:["_col0","_col1"]
                                                  Filter Operator [FIL_140] (rows=143930993 width=7)
                                                    predicate:(ws_bill_customer_sk is not null and ws_sold_date_sk is not null)
                                                    TableScan [TS_19] (rows=144002668 width=7)
                                                      default@web_sales,web_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["ws_sold_date_sk","ws_bill_customer_sk"]
                                  <-Map Join Operator [MAPJOIN_111] (rows=9026 width=363)
                                      Conds:MERGEJOIN_107._col0=RS_139._col0(Left Semi),HybridGraceHashJoin:true,Output:["_col0","_col6","_col7","_col8","_col9","_col10"]
                                    <-Map 8 [BROADCAST_EDGE] vectorized
                                      BROADCAST [RS_139]
                                        PartitionCols:_col0
                                        Group By Operator [GBY_138] (rows=153432 width=2)
                                          Output:["_col0"],keys:_col0
                                          Select Operator [SEL_137] (rows=62428523 width=2)
                                            Output:["_col0"]
                                            Map Join Operator [MAPJOIN_136] (rows=62428523 width=2)
                                              Conds:SEL_135._col0=RS_131._col0(Inner),HybridGraceHashJoin:true,Output:["_col1"]
                                            <-Map 9 [BROADCAST_EDGE] vectorized
                                              BROADCAST [RS_131]
                                                PartitionCols:_col0
                                                 Please refer to the previous Select Operator [SEL_130]
                                            <-Select Operator [SEL_135] (rows=525327388 width=7)
                                                Output:["_col0","_col1"]
                                                Filter Operator [FIL_134] (rows=525327388 width=7)
                                                  predicate:(ss_customer_sk is not null and ss_sold_date_sk is not null)
                                                  TableScan [TS_9] (rows=575995635 width=7)
                                                    default@store_sales,store_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["ss_sold_date_sk","ss_customer_sk"]
                                    <-Merge Join Operator [MERGEJOIN_107] (rows=4605476 width=363)
                                        Conds:RS_36._col1=RS_128._col0(Inner),Output:["_col0","_col6","_col7","_col8","_col9","_col10"]
                                      <-Map 7 [SIMPLE_EDGE] vectorized
                                        SHUFFLE [RS_128]
                                          PartitionCols:_col0
                                          Select Operator [SEL_127] (rows=1861800 width=363)
                                            Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                                            Filter Operator [FIL_126] (rows=1861800 width=363)
                                              predicate:cd_demo_sk is not null
                                              TableScan [TS_6] (rows=1861800 width=363)
                                                default@customer_demographics,customer_demographics,Tbl:COMPLETE,Col:COMPLETE,Output:["cd_demo_sk","cd_gender","cd_marital_status","cd_education_status","cd_purchase_estimate","cd_credit_rating"]
                                      <-Reducer 2 [SIMPLE_EDGE]
                                        SHUFFLE [RS_36]
                                          PartitionCols:_col1
                                          Merge Join Operator [MERGEJOIN_106] (rows=4541258 width=5)
                                            Conds:RS_122._col2=RS_125._col0(Inner),Output:["_col0","_col1"]
                                          <-Map 1 [SIMPLE_EDGE] vectorized
                                            SHUFFLE [RS_122]
                                              PartitionCols:_col2
                                              Select Operator [SEL_121] (rows=77201384 width=11)
                                                Output:["_col0","_col1","_col2"]
                                                Filter Operator [FIL_120] (rows=77201384 width=11)
                                                  predicate:(c_current_addr_sk is not null and c_current_cdemo_sk is not null and c_customer_sk is not null)
                                                  TableScan [TS_0] (rows=80000000 width=11)
                                                    default@customer,c,Tbl:COMPLETE,Col:COMPLETE,Output:["c_customer_sk","c_current_cdemo_sk","c_current_addr_sk"]
                                          <-Map 6 [SIMPLE_EDGE] vectorized
                                            SHUFFLE [RS_125]
                                              PartitionCols:_col0
                                              Select Operator [SEL_124] (rows=2352941 width=90)
                                                Output:["_col0"]
                                                Filter Operator [FIL_123] (rows=2352941 width=90)
                                                  predicate:((ca_state) IN ('CO', 'IL', 'MN') and ca_address_sk is not null)
                                                  TableScan [TS_3] (rows=40000000 width=90)
                                                    default@customer_address,ca,Tbl:COMPLETE,Col:COMPLETE,Output:["ca_address_sk","ca_state"]

