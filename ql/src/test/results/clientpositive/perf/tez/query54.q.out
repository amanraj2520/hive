Warning: Map Join MAPJOIN[190][bigTable=?] in task 'Reducer 4' is a cross product
Warning: Map Join MAPJOIN[191][bigTable=?] in task 'Reducer 24' is a cross product
Warning: Shuffle Join MERGEJOIN[188][tables = [$hdt$_1, $hdt$_2, $hdt$_3, $hdt$_0, $hdt$_4]] in Stage 'Reducer 4' is a cross product
Warning: Shuffle Join MERGEJOIN[192][tables = [$hdt$_1, $hdt$_2, $hdt$_0]] in Stage 'Reducer 5' is a cross product
PREHOOK: query: explain
with my_customers as (
 select distinct c_customer_sk
        , c_current_addr_sk
 from   
        ( select cs_sold_date_sk sold_date_sk,
                 cs_bill_customer_sk customer_sk,
                 cs_item_sk item_sk
          from   catalog_sales
          union all
          select ws_sold_date_sk sold_date_sk,
                 ws_bill_customer_sk customer_sk,
                 ws_item_sk item_sk
          from   web_sales
         ) cs_or_ws_sales,
         item,
         date_dim,
         customer
 where   sold_date_sk = d_date_sk
         and item_sk = i_item_sk
         and i_category = 'Jewelry'
         and i_class = 'consignment'
         and c_customer_sk = cs_or_ws_sales.customer_sk
         and d_moy = 3
         and d_year = 1999
 )
 , my_revenue as (
 select c_customer_sk,
        sum(ss_ext_sales_price) as revenue
 from   my_customers,
        store_sales,
        customer_address,
        store,
        date_dim
 where  c_current_addr_sk = ca_address_sk
        and ca_county = s_county
        and ca_state = s_state
        and ss_sold_date_sk = d_date_sk
        and c_customer_sk = ss_customer_sk
        and d_month_seq between (select distinct d_month_seq+1
                                 from   date_dim where d_year = 1999 and d_moy = 3)
                           and  (select distinct d_month_seq+3
                                 from   date_dim where d_year = 1999 and d_moy = 3)
 group by c_customer_sk
 )
 , segments as
 (select cast((revenue/50) as int) as segment
  from   my_revenue
 )
  select  segment, count(*) as num_customers, segment*50 as segment_base
 from segments
 group by segment
 order by segment, num_customers
 limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@catalog_sales
PREHOOK: Input: default@customer
PREHOOK: Input: default@customer_address
PREHOOK: Input: default@date_dim
PREHOOK: Input: default@item
PREHOOK: Input: default@store
PREHOOK: Input: default@store_sales
PREHOOK: Input: default@web_sales
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain
with my_customers as (
 select distinct c_customer_sk
        , c_current_addr_sk
 from   
        ( select cs_sold_date_sk sold_date_sk,
                 cs_bill_customer_sk customer_sk,
                 cs_item_sk item_sk
          from   catalog_sales
          union all
          select ws_sold_date_sk sold_date_sk,
                 ws_bill_customer_sk customer_sk,
                 ws_item_sk item_sk
          from   web_sales
         ) cs_or_ws_sales,
         item,
         date_dim,
         customer
 where   sold_date_sk = d_date_sk
         and item_sk = i_item_sk
         and i_category = 'Jewelry'
         and i_class = 'consignment'
         and c_customer_sk = cs_or_ws_sales.customer_sk
         and d_moy = 3
         and d_year = 1999
 )
 , my_revenue as (
 select c_customer_sk,
        sum(ss_ext_sales_price) as revenue
 from   my_customers,
        store_sales,
        customer_address,
        store,
        date_dim
 where  c_current_addr_sk = ca_address_sk
        and ca_county = s_county
        and ca_state = s_state
        and ss_sold_date_sk = d_date_sk
        and c_customer_sk = ss_customer_sk
        and d_month_seq between (select distinct d_month_seq+1
                                 from   date_dim where d_year = 1999 and d_moy = 3)
                           and  (select distinct d_month_seq+3
                                 from   date_dim where d_year = 1999 and d_moy = 3)
 group by c_customer_sk
 )
 , segments as
 (select cast((revenue/50) as int) as segment
  from   my_revenue
 )
  select  segment, count(*) as num_customers, segment*50 as segment_base
 from segments
 group by segment
 order by segment, num_customers
 limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@catalog_sales
POSTHOOK: Input: default@customer
POSTHOOK: Input: default@customer_address
POSTHOOK: Input: default@date_dim
POSTHOOK: Input: default@item
POSTHOOK: Input: default@store
POSTHOOK: Input: default@store_sales
POSTHOOK: Input: default@web_sales
POSTHOOK: Output: hdfs://### HDFS PATH ###
Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Map 9 (BROADCAST_EDGE)
Map 10 <- Map 15 (BROADCAST_EDGE), Map 16 (BROADCAST_EDGE), Union 11 (CONTAINS)
Map 14 <- Map 15 (BROADCAST_EDGE), Map 16 (BROADCAST_EDGE), Union 11 (CONTAINS)
Reducer 12 <- Map 17 (SIMPLE_EDGE), Union 11 (SIMPLE_EDGE)
Reducer 13 <- Reducer 12 (SIMPLE_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Reducer 13 (SIMPLE_EDGE)
Reducer 20 <- Map 19 (SIMPLE_EDGE)
Reducer 21 <- Reducer 20 (CUSTOM_SIMPLE_EDGE)
Reducer 22 <- Map 19 (SIMPLE_EDGE)
Reducer 23 <- Map 19 (SIMPLE_EDGE)
Reducer 24 <- Reducer 22 (BROADCAST_EDGE), Reducer 23 (CUSTOM_SIMPLE_EDGE)
Reducer 3 <- Map 18 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 4 <- Map 25 (BROADCAST_EDGE), Reducer 20 (BROADCAST_EDGE), Reducer 21 (XPROD_EDGE), Reducer 3 (XPROD_EDGE)
Reducer 5 <- Reducer 24 (XPROD_EDGE), Reducer 4 (XPROD_EDGE)
Reducer 6 <- Reducer 5 (SIMPLE_EDGE)
Reducer 7 <- Reducer 6 (SIMPLE_EDGE)
Reducer 8 <- Reducer 7 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 8 vectorized
      File Output Operator [FS_277]
        Limit [LIM_276] (rows=100 width=16)
          Number of rows:100
          Select Operator [SEL_275] (rows=372 width=16)
            Output:["_col0","_col1","_col2"]
          <-Reducer 7 [SIMPLE_EDGE] vectorized
            SHUFFLE [RS_274]
              Select Operator [SEL_273] (rows=372 width=16)
                Output:["_col0","_col1","_col2"]
                Group By Operator [GBY_272] (rows=372 width=12)
                  Output:["_col0","_col1"],aggregations:["count(VALUE._col0)"],keys:KEY._col0
                <-Reducer 6 [SIMPLE_EDGE] vectorized
                  SHUFFLE [RS_271]
                    PartitionCols:_col0
                    Group By Operator [GBY_270] (rows=372 width=12)
                      Output:["_col0","_col1"],aggregations:["count()"],keys:_col0
                      Select Operator [SEL_269] (rows=744 width=116)
                        Output:["_col0"]
                        Group By Operator [GBY_268] (rows=744 width=116)
                          Output:["_col0","_col1"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0
                        <-Reducer 5 [SIMPLE_EDGE]
                          SHUFFLE [RS_118]
                            PartitionCols:_col0
                            Group By Operator [GBY_117] (rows=5795760 width=116)
                              Output:["_col0","_col1"],aggregations:["sum(_col4)"],keys:_col0
                              Select Operator [SEL_116] (rows=15581460138 width=127)
                                Output:["_col0","_col4"]
                                Filter Operator [FIL_115] (rows=15581460138 width=127)
                                  predicate:_col11 BETWEEN _col13 AND _col15
                                  Select Operator [SEL_114] (rows=140233141250 width=127)
                                    Output:["_col0","_col4","_col11","_col13","_col15"]
                                    Merge Join Operator [MERGEJOIN_192] (rows=140233141250 width=127)
                                      Conds:(Inner),Output:["_col0","_col2","_col6","_col13","_col15"]
                                    <-Reducer 24 [XPROD_EDGE] vectorized
                                      XPROD_EDGE [RS_267]
                                        Map Join Operator [MAPJOIN_266] (rows=25 width=4)
                                          Conds:(Right Outer),Output:["_col0"]
                                        <-Reducer 22 [BROADCAST_EDGE] vectorized
                                          BROADCAST [RS_262]
                                            Group By Operator [GBY_261] (rows=25 width=4)
                                              Output:["_col0"],keys:KEY._col0
                                            <-Map 19 [SIMPLE_EDGE] vectorized
                                              SHUFFLE [RS_243]
                                                PartitionCols:_col0
                                                Group By Operator [GBY_240] (rows=25 width=4)
                                                  Output:["_col0"],keys:_col0
                                                  Select Operator [SEL_237] (rows=652 width=12)
                                                    Output:["_col0"]
                                                    Filter Operator [FIL_235] (rows=652 width=12)
                                                      predicate:((d_moy = 3) and (d_year = 1999))
                                                      TableScan [TS_63] (rows=73049 width=12)
                                                        default@date_dim,date_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["d_month_seq","d_year","d_moy"]
                                        <-Select Operator [SEL_265] (rows=1 width=8)
                                            Filter Operator [FIL_264] (rows=1 width=8)
                                              predicate:(sq_count_check(_col0) <= 1)
                                              Group By Operator [GBY_263] (rows=1 width=8)
                                                Output:["_col0"],aggregations:["count(VALUE._col0)"]
                                              <-Reducer 23 [CUSTOM_SIMPLE_EDGE] vectorized
                                                PARTITION_ONLY_SHUFFLE [RS_260]
                                                  Group By Operator [GBY_259] (rows=1 width=8)
                                                    Output:["_col0"],aggregations:["count()"]
                                                    Select Operator [SEL_258] (rows=25 width=4)
                                                      Group By Operator [GBY_257] (rows=25 width=4)
                                                        Output:["_col0"],keys:KEY._col0
                                                      <-Map 19 [SIMPLE_EDGE] vectorized
                                                        SHUFFLE [RS_244]
                                                          PartitionCols:_col0
                                                          Group By Operator [GBY_241] (rows=25 width=4)
                                                            Output:["_col0"],keys:_col0
                                                            Select Operator [SEL_238] (rows=652 width=12)
                                                              Output:["_col0"]
                                                               Please refer to the previous Filter Operator [FIL_235]
                                    <-Reducer 4 [XPROD_EDGE]
                                      XPROD_EDGE [RS_112]
                                        Select Operator [SEL_107] (rows=5609325650 width=123)
                                          Output:["_col0","_col4","_col11","_col13"]
                                          Map Join Operator [MAPJOIN_190] (rows=5609325650 width=123)
                                            Conds:(Left Outer),Output:["_col5","_col9","_col12","_col13"]
                                          <-Reducer 20 [BROADCAST_EDGE] vectorized
                                            BROADCAST [RS_247]
                                              Group By Operator [GBY_245] (rows=25 width=4)
                                                Output:["_col0"],keys:KEY._col0
                                              <-Map 19 [SIMPLE_EDGE] vectorized
                                                SHUFFLE [RS_242]
                                                  PartitionCols:_col0
                                                  Group By Operator [GBY_239] (rows=25 width=4)
                                                    Output:["_col0"],keys:_col0
                                                    Select Operator [SEL_236] (rows=652 width=12)
                                                      Output:["_col0"]
                                                       Please refer to the previous Filter Operator [FIL_235]
                                          <-Map Join Operator [MAPJOIN_189] (rows=224373026 width=108)
                                              Conds:MERGEJOIN_188._col7=RS_256._col0(Inner),HybridGraceHashJoin:true,Output:["_col5","_col9","_col12"]
                                            <-Map 25 [BROADCAST_EDGE] vectorized
                                              BROADCAST [RS_256]
                                                PartitionCols:_col0
                                                Select Operator [SEL_255] (rows=73049 width=8)
                                                  Output:["_col0","_col1"]
                                                  Filter Operator [FIL_254] (rows=73049 width=8)
                                                    predicate:d_date_sk is not null
                                                    TableScan [TS_78] (rows=73049 width=8)
                                                      default@date_dim,date_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_month_seq"]
                                            <-Merge Join Operator [MERGEJOIN_188] (rows=224373026 width=107)
                                                Conds:(Inner),Output:["_col5","_col7","_col9"]
                                              <-Reducer 21 [XPROD_EDGE] vectorized
                                                XPROD_EDGE [RS_253]
                                                  Select Operator [SEL_252] (rows=1 width=8)
                                                    Filter Operator [FIL_251] (rows=1 width=8)
                                                      predicate:(sq_count_check(_col0) <= 1)
                                                      Group By Operator [GBY_250] (rows=1 width=8)
                                                        Output:["_col0"],aggregations:["count(VALUE._col0)"]
                                              <-Reducer 3 [XPROD_EDGE]
                                                XPROD_EDGE [RS_98]
                                                  Merge Join Operator [MERGEJOIN_187] (rows=224373026 width=107)
                                                    Conds:RS_95._col5=RS_234._col1(Inner),Output:["_col5","_col7","_col9"]
                                                  <-Map 18 [SIMPLE_EDGE] vectorized
                                                    SHUFFLE [RS_234]
                                                      PartitionCols:_col1
                                                      Select Operator [SEL_233] (rows=525327388 width=114)
                                                        Output:["_col0","_col1","_col2"]
                                                        Filter Operator [FIL_232] (rows=525327388 width=114)
                                                          predicate:(ss_customer_sk is not null and ss_sold_date_sk is not null)
                                                          TableScan [TS_60] (rows=575995635 width=114)
                                                            default@store_sales,store_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["ss_sold_date_sk","ss_customer_sk","ss_ext_sales_price"]
                                                  <-Reducer 2 [SIMPLE_EDGE]
                                                    SHUFFLE [RS_95]
                                                      PartitionCols:_col5
                                                      Merge Join Operator [MERGEJOIN_186] (rows=12738544 width=4)
                                                        Conds:RS_225._col0=RS_231._col1(Inner),Output:["_col5"]
                                                      <-Map 1 [SIMPLE_EDGE] vectorized
                                                        SHUFFLE [RS_225]
                                                          PartitionCols:_col0
                                                          Map Join Operator [MAPJOIN_224] (rows=39720279 width=4)
                                                            Conds:SEL_223._col1, _col2=RS_221._col0, _col1(Inner),HybridGraceHashJoin:true,Output:["_col0"]
                                                          <-Map 9 [BROADCAST_EDGE] vectorized
                                                            BROADCAST [RS_221]
                                                              PartitionCols:_col0, _col1
                                                              Select Operator [SEL_220] (rows=1704 width=184)
                                                                Output:["_col0","_col1"]
                                                                Filter Operator [FIL_219] (rows=1704 width=184)
                                                                  predicate:(s_county is not null and s_state is not null)
                                                                  TableScan [TS_26] (rows=1704 width=184)
                                                                    default@store,store,Tbl:COMPLETE,Col:COMPLETE,Output:["s_county","s_state"]
                                                          <-Select Operator [SEL_223] (rows=40000000 width=188)
                                                              Output:["_col0","_col1","_col2"]
                                                              Filter Operator [FIL_222] (rows=40000000 width=188)
                                                                predicate:(ca_address_sk is not null and ca_county is not null and ca_state is not null)
                                                                TableScan [TS_23] (rows=40000000 width=188)
                                                                  default@customer_address,customer_address,Tbl:COMPLETE,Col:COMPLETE,Output:["ca_address_sk","ca_county","ca_state"]
                                                      <-Reducer 13 [SIMPLE_EDGE] vectorized
                                                        SHUFFLE [RS_231]
                                                          PartitionCols:_col1
                                                          Select Operator [SEL_230] (rows=12738544 width=8)
                                                            Output:["_col0","_col1"]
                                                            Group By Operator [GBY_229] (rows=12738544 width=8)
                                                              Output:["_col0","_col1"],keys:KEY._col0, KEY._col1
                                                            <-Reducer 12 [SIMPLE_EDGE]
                                                              SHUFFLE [RS_57]
                                                                PartitionCols:_col0, _col1
                                                                Group By Operator [GBY_56] (rows=12738544 width=8)
                                                                  Output:["_col0","_col1"],keys:_col10, _col9
                                                                  Merge Join Operator [MERGEJOIN_185] (rows=12738544 width=8)
                                                                    Conds:Union 11._col1=RS_228._col0(Inner),Output:["_col9","_col10"]
                                                                  <-Map 17 [SIMPLE_EDGE] vectorized
                                                                    SHUFFLE [RS_228]
                                                                      PartitionCols:_col0
                                                                      Select Operator [SEL_227] (rows=80000000 width=8)
                                                                        Output:["_col0","_col1"]
                                                                        Filter Operator [FIL_226] (rows=80000000 width=8)
                                                                          predicate:(c_current_addr_sk is not null and c_customer_sk is not null)
                                                                          TableScan [TS_43] (rows=80000000 width=8)
                                                                            default@customer,customer,Tbl:COMPLETE,Col:COMPLETE,Output:["c_customer_sk","c_current_addr_sk"]
                                                                  <-Union 11 [SIMPLE_EDGE]
                                                                    <-Map 10 [CONTAINS] vectorized
                                                                      Reduce Output Operator [RS_290]
                                                                        PartitionCols:_col1
                                                                        Map Join Operator [MAPJOIN_289] (rows=12738544 width=3)
                                                                          Conds:MAPJOIN_288._col2=RS_284._col0(Inner),HybridGraceHashJoin:true,Output:["_col1"]
                                                                        <-Map 16 [BROADCAST_EDGE] vectorized
                                                                          BROADCAST [RS_284]
                                                                            PartitionCols:_col0
                                                                            Select Operator [SEL_283] (rows=4200 width=190)
                                                                              Output:["_col0"]
                                                                              Filter Operator [FIL_282] (rows=4200 width=186)
                                                                                predicate:((i_category = 'Jewelry') and (i_class = 'consignment') and i_item_sk is not null)
                                                                                TableScan [TS_40] (rows=462000 width=186)
                                                                                  default@item,item,Tbl:COMPLETE,Col:COMPLETE,Output:["i_item_sk","i_class","i_category"]
                                                                        <-Map Join Operator [MAPJOIN_288] (rows=145580650 width=7)
                                                                            Conds:SEL_287._col0=RS_280._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2"]
                                                                          <-Map 15 [BROADCAST_EDGE] vectorized
                                                                            BROADCAST [RS_280]
                                                                              PartitionCols:_col0
                                                                              Select Operator [SEL_279] (rows=624 width=12)
                                                                                Output:["_col0"]
                                                                                Filter Operator [FIL_278] (rows=624 width=12)
                                                                                  predicate:((d_moy = 3) and (d_year = 1999) and d_date_sk is not null)
                                                                                  TableScan [TS_37] (rows=73049 width=12)
                                                                                    default@date_dim,date_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_year","d_moy"]
                                                                          <-Select Operator [SEL_287] (rows=285117831 width=11)
                                                                              Output:["_col0","_col1","_col2"]
                                                                              Filter Operator [FIL_286] (rows=285117831 width=11)
                                                                                predicate:(cs_bill_customer_sk is not null and cs_item_sk is not null and cs_sold_date_sk is not null)
                                                                                TableScan [TS_201] (rows=287989836 width=11)
                                                                                  Output:["cs_sold_date_sk","cs_bill_customer_sk","cs_item_sk"]
                                                                    <-Map 14 [CONTAINS] vectorized
                                                                      Reduce Output Operator [RS_295]
                                                                        PartitionCols:_col1
                                                                        Map Join Operator [MAPJOIN_294] (rows=12738544 width=3)
                                                                          Conds:MAPJOIN_293._col2=RS_285._col0(Inner),HybridGraceHashJoin:true,Output:["_col1"]
                                                                        <-Map 16 [BROADCAST_EDGE] vectorized
                                                                          BROADCAST [RS_285]
                                                                            PartitionCols:_col0
                                                                             Please refer to the previous Select Operator [SEL_283]
                                                                        <-Map Join Operator [MAPJOIN_293] (rows=145580650 width=7)
                                                                            Conds:SEL_292._col0=RS_281._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2"]
                                                                          <-Map 15 [BROADCAST_EDGE] vectorized
                                                                            BROADCAST [RS_281]
                                                                              PartitionCols:_col0
                                                                               Please refer to the previous Select Operator [SEL_279]
                                                                          <-Select Operator [SEL_292] (rows=143930993 width=11)
                                                                              Output:["_col0","_col1","_col2"]
                                                                              Filter Operator [FIL_291] (rows=143930993 width=11)
                                                                                predicate:(ws_bill_customer_sk is not null and ws_item_sk is not null and ws_sold_date_sk is not null)
                                                                                TableScan [TS_210] (rows=144002668 width=11)
                                                                                  Output:["ws_sold_date_sk","ws_item_sk","ws_bill_customer_sk"]

