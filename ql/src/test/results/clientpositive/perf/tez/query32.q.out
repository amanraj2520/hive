PREHOOK: query: explain
select  sum(cs_ext_discount_amt)  as `excess discount amount` 
from 
   catalog_sales 
   ,item 
   ,date_dim
where
i_manufact_id = 269
and i_item_sk = cs_item_sk 
and d_date between '1998-03-18' and 
        (cast('1998-03-18' as date) + 90 days)
and d_date_sk = cs_sold_date_sk 
and cs_ext_discount_amt  
     > ( 
         select 
            1.3 * avg(cs_ext_discount_amt) 
         from 
            catalog_sales 
           ,date_dim
         where 
              cs_item_sk = i_item_sk 
          and d_date between '1998-03-18' and
                             (cast('1998-03-18' as date) + 90 days)
          and d_date_sk = cs_sold_date_sk 
      ) 
limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@catalog_sales
PREHOOK: Input: default@date_dim
PREHOOK: Input: default@item
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain
select  sum(cs_ext_discount_amt)  as `excess discount amount` 
from 
   catalog_sales 
   ,item 
   ,date_dim
where
i_manufact_id = 269
and i_item_sk = cs_item_sk 
and d_date between '1998-03-18' and 
        (cast('1998-03-18' as date) + 90 days)
and d_date_sk = cs_sold_date_sk 
and cs_ext_discount_amt  
     > ( 
         select 
            1.3 * avg(cs_ext_discount_amt) 
         from 
            catalog_sales 
           ,date_dim
         where 
              cs_item_sk = i_item_sk 
          and d_date between '1998-03-18' and
                             (cast('1998-03-18' as date) + 90 days)
          and d_date_sk = cs_sold_date_sk 
      ) 
limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@catalog_sales
POSTHOOK: Input: default@date_dim
POSTHOOK: Input: default@item
POSTHOOK: Output: hdfs://### HDFS PATH ###
Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Map 3 (BROADCAST_EDGE), Reducer 5 (BROADCAST_EDGE)
Map 4 <- Map 3 (BROADCAST_EDGE)
Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)
Reducer 5 <- Map 4 (SIMPLE_EDGE), Map 6 (BROADCAST_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 2 vectorized
      File Output Operator [FS_92]
        Limit [LIM_91] (rows=1 width=112)
          Number of rows:100
          Group By Operator [GBY_90] (rows=1 width=112)
            Output:["_col0"],aggregations:["sum(VALUE._col0)"]
          <-Map 1 [CUSTOM_SIMPLE_EDGE] vectorized
            PARTITION_ONLY_SHUFFLE [RS_89]
              Group By Operator [GBY_88] (rows=1 width=112)
                Output:["_col0"],aggregations:["sum(_col2)"]
                Select Operator [SEL_87] (rows=2465 width=112)
                  Output:["_col2"]
                  Filter Operator [FIL_86] (rows=2465 width=112)
                    predicate:(_col2 > CAST( (1.3 * _col6) AS decimal(14,7)))
                    Map Join Operator [MAPJOIN_85] (rows=7397 width=112)
                      Conds:MAPJOIN_84._col1=RS_81._col2(Inner),HybridGraceHashJoin:true,Output:["_col2","_col6"]
                    <-Reducer 5 [BROADCAST_EDGE] vectorized
                      BROADCAST [RS_81]
                        PartitionCols:_col2
                        Map Join Operator [MAPJOIN_80] (rows=97 width=116)
                          Conds:SEL_79._col0=RS_77._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2"]
                        <-Map 6 [BROADCAST_EDGE] vectorized
                          BROADCAST [RS_77]
                            PartitionCols:_col0
                            Select Operator [SEL_76] (rows=669 width=8)
                              Output:["_col0"]
                              Filter Operator [FIL_75] (rows=669 width=7)
                                predicate:((i_manufact_id = 269) and i_item_sk is not null)
                                TableScan [TS_20] (rows=462000 width=7)
                                  default@item,item,Tbl:COMPLETE,Col:COMPLETE,Output:["i_item_sk","i_manufact_id"]
                        <-Select Operator [SEL_79] (rows=6917 width=116)
                            Output:["_col0","_col1"]
                            Group By Operator [GBY_78] (rows=6917 width=124)
                              Output:["_col0","_col1","_col2"],aggregations:["sum(VALUE._col0)","count(VALUE._col1)"],keys:KEY._col0
                            <-Map 4 [SIMPLE_EDGE] vectorized
                              SHUFFLE [RS_74]
                                PartitionCols:_col0
                                Group By Operator [GBY_73] (rows=96838 width=124)
                                  Output:["_col0","_col1","_col2"],aggregations:["sum(_col2)","count(_col2)"],keys:_col1
                                  Map Join Operator [MAPJOIN_72] (rows=31836679 width=110)
                                    Conds:SEL_71._col0=RS_69._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2"]
                                  <-Map 3 [BROADCAST_EDGE] vectorized
                                    BROADCAST [RS_69]
                                      PartitionCols:_col0
                                      Select Operator [SEL_67] (rows=8116 width=98)
                                        Output:["_col0"]
                                        Filter Operator [FIL_66] (rows=8116 width=98)
                                          predicate:(CAST( d_date AS TIMESTAMP) BETWEEN TIMESTAMP'1998-03-18 00:00:00' AND TIMESTAMP'1998-06-16 00:00:00' and d_date_sk is not null)
                                          TableScan [TS_3] (rows=73049 width=98)
                                            default@date_dim,date_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_date"]
                                  <-Select Operator [SEL_71] (rows=286549727 width=119)
                                      Output:["_col0","_col1","_col2"]
                                      Filter Operator [FIL_70] (rows=286549727 width=119)
                                        predicate:(cs_item_sk is not null and cs_sold_date_sk is not null)
                                        TableScan [TS_6] (rows=287989836 width=119)
                                          default@catalog_sales,catalog_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["cs_sold_date_sk","cs_item_sk","cs_ext_discount_amt"]
                    <-Map Join Operator [MAPJOIN_84] (rows=31836679 width=110)
                        Conds:SEL_83._col0=RS_68._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2"]
                      <-Map 3 [BROADCAST_EDGE] vectorized
                        BROADCAST [RS_68]
                          PartitionCols:_col0
                           Please refer to the previous Select Operator [SEL_67]
                      <-Select Operator [SEL_83] (rows=286549727 width=119)
                          Output:["_col0","_col1","_col2"]
                          Filter Operator [FIL_82] (rows=286549727 width=119)
                            predicate:(cs_item_sk is not null and cs_sold_date_sk is not null)
                            TableScan [TS_0] (rows=287989836 width=119)
                              default@catalog_sales,catalog_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["cs_sold_date_sk","cs_item_sk","cs_ext_discount_amt"]

