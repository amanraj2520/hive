Warning: Shuffle Join MERGEJOIN[359][tables = [$hdt$_0, $hdt$_1]] in Stage 'Reducer 3' is a cross product
Warning: Shuffle Join MERGEJOIN[360][tables = [$hdt$_0, $hdt$_1, $hdt$_2]] in Stage 'Reducer 4' is a cross product
Warning: Shuffle Join MERGEJOIN[361][tables = [$hdt$_0, $hdt$_1, $hdt$_2, $hdt$_3]] in Stage 'Reducer 5' is a cross product
Warning: Shuffle Join MERGEJOIN[362][tables = [$hdt$_0, $hdt$_1, $hdt$_2, $hdt$_3, $hdt$_4]] in Stage 'Reducer 6' is a cross product
Warning: Shuffle Join MERGEJOIN[363][tables = [$hdt$_0, $hdt$_1, $hdt$_2, $hdt$_3, $hdt$_4, $hdt$_5]] in Stage 'Reducer 7' is a cross product
Warning: Shuffle Join MERGEJOIN[364][tables = [$hdt$_0, $hdt$_1, $hdt$_2, $hdt$_3, $hdt$_4, $hdt$_5, $hdt$_6]] in Stage 'Reducer 8' is a cross product
Warning: Shuffle Join MERGEJOIN[365][tables = [$hdt$_0, $hdt$_1, $hdt$_2, $hdt$_3, $hdt$_4, $hdt$_5, $hdt$_6, $hdt$_7]] in Stage 'Reducer 9' is a cross product
PREHOOK: query: explain
select  *
from
 (select count(*) h8_30_to_9
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk   
     and ss_hdemo_sk = household_demographics.hd_demo_sk 
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 8
     and time_dim.t_minute >= 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2)) 
     and store.s_store_name = 'ese') s1,
 (select count(*) h9_to_9_30 
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk 
     and time_dim.t_hour = 9 
     and time_dim.t_minute < 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s2,
 (select count(*) h9_30_to_10 
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 9
     and time_dim.t_minute >= 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s3,
 (select count(*) h10_to_10_30
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 10 
     and time_dim.t_minute < 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s4,
 (select count(*) h10_30_to_11
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 10 
     and time_dim.t_minute >= 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s5,
 (select count(*) h11_to_11_30
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk 
     and time_dim.t_hour = 11
     and time_dim.t_minute < 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s6,
 (select count(*) h11_30_to_12
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 11
     and time_dim.t_minute >= 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s7,
 (select count(*) h12_to_12_30
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 12
     and time_dim.t_minute < 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s8
PREHOOK: type: QUERY
PREHOOK: Input: default@household_demographics
PREHOOK: Input: default@store
PREHOOK: Input: default@store_sales
PREHOOK: Input: default@time_dim
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain
select  *
from
 (select count(*) h8_30_to_9
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk   
     and ss_hdemo_sk = household_demographics.hd_demo_sk 
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 8
     and time_dim.t_minute >= 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2)) 
     and store.s_store_name = 'ese') s1,
 (select count(*) h9_to_9_30 
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk 
     and time_dim.t_hour = 9 
     and time_dim.t_minute < 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s2,
 (select count(*) h9_30_to_10 
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 9
     and time_dim.t_minute >= 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s3,
 (select count(*) h10_to_10_30
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 10 
     and time_dim.t_minute < 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s4,
 (select count(*) h10_30_to_11
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 10 
     and time_dim.t_minute >= 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s5,
 (select count(*) h11_to_11_30
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk 
     and time_dim.t_hour = 11
     and time_dim.t_minute < 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s6,
 (select count(*) h11_30_to_12
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 11
     and time_dim.t_minute >= 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s7,
 (select count(*) h12_to_12_30
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 12
     and time_dim.t_minute < 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2))
     and store.s_store_name = 'ese') s8
POSTHOOK: type: QUERY
POSTHOOK: Input: default@household_demographics
POSTHOOK: Input: default@store
POSTHOOK: Input: default@store_sales
POSTHOOK: Input: default@time_dim
POSTHOOK: Output: hdfs://### HDFS PATH ###
Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Map 17 (BROADCAST_EDGE), Map 18 (BROADCAST_EDGE), Map 19 (BROADCAST_EDGE), Map 20 (BROADCAST_EDGE), Map 21 (BROADCAST_EDGE), Map 22 (BROADCAST_EDGE), Map 23 (BROADCAST_EDGE), Map 24 (BROADCAST_EDGE), Map 25 (BROADCAST_EDGE), Map 26 (BROADCAST_EDGE), Map 27 (BROADCAST_EDGE), Map 28 (BROADCAST_EDGE), Map 29 (BROADCAST_EDGE), Map 30 (BROADCAST_EDGE), Map 31 (BROADCAST_EDGE), Map 32 (BROADCAST_EDGE), Map 33 (BROADCAST_EDGE), Map 34 (BROADCAST_EDGE), Map 35 (BROADCAST_EDGE), Map 36 (BROADCAST_EDGE), Map 37 (BROADCAST_EDGE), Map 38 (BROADCAST_EDGE), Map 39 (BROADCAST_EDGE), Map 40 (BROADCAST_EDGE)
Reducer 10 <- Map 1 (CUSTOM_SIMPLE_EDGE)
Reducer 11 <- Map 1 (CUSTOM_SIMPLE_EDGE)
Reducer 12 <- Map 1 (CUSTOM_SIMPLE_EDGE)
Reducer 13 <- Map 1 (CUSTOM_SIMPLE_EDGE)
Reducer 14 <- Map 1 (CUSTOM_SIMPLE_EDGE)
Reducer 15 <- Map 1 (CUSTOM_SIMPLE_EDGE)
Reducer 16 <- Map 1 (CUSTOM_SIMPLE_EDGE)
Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)
Reducer 3 <- Reducer 10 (XPROD_EDGE), Reducer 2 (XPROD_EDGE)
Reducer 4 <- Reducer 11 (XPROD_EDGE), Reducer 3 (XPROD_EDGE)
Reducer 5 <- Reducer 12 (XPROD_EDGE), Reducer 4 (XPROD_EDGE)
Reducer 6 <- Reducer 13 (XPROD_EDGE), Reducer 5 (XPROD_EDGE)
Reducer 7 <- Reducer 14 (XPROD_EDGE), Reducer 6 (XPROD_EDGE)
Reducer 8 <- Reducer 15 (XPROD_EDGE), Reducer 7 (XPROD_EDGE)
Reducer 9 <- Reducer 16 (XPROD_EDGE), Reducer 8 (XPROD_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 9
      File Output Operator [FS_230]
        Select Operator [SEL_229] (rows=1 width=64)
          Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
          Merge Join Operator [MERGEJOIN_365] (rows=1 width=64)
            Conds:(Inner),Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
          <-Reducer 16 [XPROD_EDGE] vectorized
            XPROD_EDGE [RS_519]
              Group By Operator [GBY_518] (rows=1 width=8)
                Output:["_col0"],aggregations:["count(VALUE._col0)"]
              <-Map 1 [CUSTOM_SIMPLE_EDGE] vectorized
                PARTITION_ONLY_SHUFFLE [RS_503]
                  Group By Operator [GBY_495] (rows=1 width=8)
                    Output:["_col0"],aggregations:["count()"]
                    Map Join Operator [MAPJOIN_487] (rows=1806751 width=8)
                      Conds:MAPJOIN_479._col2=RS_461._col0(Inner),HybridGraceHashJoin:true
                    <-Map 40 [BROADCAST_EDGE] vectorized
                      BROADCAST [RS_461]
                        PartitionCols:_col0
                        Select Operator [SEL_460] (rows=155 width=91)
                          Output:["_col0"]
                          Filter Operator [FIL_459] (rows=155 width=92)
                            predicate:((s_store_name = 'ese') and s_store_sk is not null)
                            TableScan [TS_191] (rows=1704 width=92)
                              default@store,store,Tbl:COMPLETE,Col:COMPLETE,Output:["s_store_sk","s_store_name"]
                    <-Map Join Operator [MAPJOIN_479] (rows=2460956 width=0)
                        Conds:MAPJOIN_471._col1=RS_458._col0(Inner),HybridGraceHashJoin:true,Output:["_col2"]
                      <-Map 39 [BROADCAST_EDGE] vectorized
                        BROADCAST [RS_458]
                          PartitionCols:_col0
                          Select Operator [SEL_457] (rows=1091 width=12)
                            Output:["_col0"]
                            Filter Operator [FIL_456] (rows=1091 width=12)
                              predicate:((((hd_dep_count = 3) and (hd_vehicle_count <= 5)) or ((hd_dep_count = 0) and (hd_vehicle_count <= 2)) or ((hd_dep_count = 1) and (hd_vehicle_count <= 3))) and hd_demo_sk is not null)
                              TableScan [TS_188] (rows=7200 width=12)
                                default@household_demographics,household_demographics,Tbl:COMPLETE,Col:COMPLETE,Output:["hd_demo_sk","hd_dep_count","hd_vehicle_count"]
                      <-Map Join Operator [MAPJOIN_471] (rows=16240953 width=0)
                          Conds:SEL_463._col0=RS_455._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2"]
                        <-Map 38 [BROADCAST_EDGE] vectorized
                          BROADCAST [RS_455]
                            PartitionCols:_col0
                            Select Operator [SEL_454] (rows=1515 width=12)
                              Output:["_col0"]
                              Filter Operator [FIL_453] (rows=1515 width=12)
                                predicate:((t_hour = 9) and (t_minute < 30) and t_time_sk is not null)
                                TableScan [TS_185] (rows=86400 width=12)
                                  default@time_dim,time_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["t_time_sk","t_hour","t_minute"]
                        <-Select Operator [SEL_463] (rows=501695814 width=11)
                            Output:["_col0","_col1","_col2"]
                            Filter Operator [FIL_462] (rows=501695814 width=11)
                              predicate:(ss_hdemo_sk is not null and ss_sold_time_sk is not null and ss_store_sk is not null)
                              TableScan [TS_0] (rows=575995635 width=11)
                                default@store_sales,store_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["ss_sold_time_sk","ss_hdemo_sk","ss_store_sk"]
                              <-Map 17 [BROADCAST_EDGE] vectorized
                                BROADCAST [RS_392]
                                  PartitionCols:_col0
                                  Select Operator [SEL_391] (rows=1515 width=12)
                                    Output:["_col0"]
                                    Filter Operator [FIL_390] (rows=1515 width=12)
                                      predicate:((t_hour = 8) and (t_minute >= 30) and t_time_sk is not null)
                                      TableScan [TS_3] (rows=86400 width=12)
                                        default@time_dim,time_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["t_time_sk","t_hour","t_minute"]
                              <-Map 18 [BROADCAST_EDGE] vectorized
                                BROADCAST [RS_395]
                                  PartitionCols:_col0
                                  Select Operator [SEL_394] (rows=1091 width=12)
                                    Output:["_col0"]
                                    Filter Operator [FIL_393] (rows=1091 width=12)
                                      predicate:((((hd_dep_count = 3) and (hd_vehicle_count <= 5)) or ((hd_dep_count = 0) and (hd_vehicle_count <= 2)) or ((hd_dep_count = 1) and (hd_vehicle_count <= 3))) and hd_demo_sk is not null)
                                      TableScan [TS_6] (rows=7200 width=12)
                                        default@household_demographics,household_demographics,Tbl:COMPLETE,Col:COMPLETE,Output:["hd_demo_sk","hd_dep_count","hd_vehicle_count"]
                              <-Map 19 [BROADCAST_EDGE] vectorized
                                BROADCAST [RS_398]
                                  PartitionCols:_col0
                                  Select Operator [SEL_397] (rows=155 width=91)
                                    Output:["_col0"]
                                    Filter Operator [FIL_396] (rows=155 width=92)
                                      predicate:((s_store_name = 'ese') and s_store_sk is not null)
                                      TableScan [TS_9] (rows=1704 width=92)
                                        default@store,store,Tbl:COMPLETE,Col:COMPLETE,Output:["s_store_sk","s_store_name"]
                              <-Map 20 [BROADCAST_EDGE] vectorized
                                BROADCAST [RS_401]
                                  PartitionCols:_col0
                                  Select Operator [SEL_400] (rows=1515 width=12)
                                    Output:["_col0"]
                                    Filter Operator [FIL_399] (rows=1515 width=12)
                                      predicate:((t_hour = 12) and (t_minute < 30) and t_time_sk is not null)
                                      TableScan [TS_29] (rows=86400 width=12)
                                        default@time_dim,time_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["t_time_sk","t_hour","t_minute"]
                              <-Map 21 [BROADCAST_EDGE] vectorized
                                BROADCAST [RS_404]
                                  PartitionCols:_col0
                                  Select Operator [SEL_403] (rows=1091 width=12)
                                    Output:["_col0"]
                                    Filter Operator [FIL_402] (rows=1091 width=12)
                                      predicate:((((hd_dep_count = 3) and (hd_vehicle_count <= 5)) or ((hd_dep_count = 0) and (hd_vehicle_count <= 2)) or ((hd_dep_count = 1) and (hd_vehicle_count <= 3))) and hd_demo_sk is not null)
                                      TableScan [TS_32] (rows=7200 width=12)
                                        default@household_demographics,household_demographics,Tbl:COMPLETE,Col:COMPLETE,Output:["hd_demo_sk","hd_dep_count","hd_vehicle_count"]
                              <-Map 22 [BROADCAST_EDGE] vectorized
                                BROADCAST [RS_407]
                                  PartitionCols:_col0
                                  Select Operator [SEL_406] (rows=155 width=91)
                                    Output:["_col0"]
                                    Filter Operator [FIL_405] (rows=155 width=92)
                                      predicate:((s_store_name = 'ese') and s_store_sk is not null)
                                      TableScan [TS_35] (rows=1704 width=92)
                                        default@store,store,Tbl:COMPLETE,Col:COMPLETE,Output:["s_store_sk","s_store_name"]
                              <-Map 23 [BROADCAST_EDGE] vectorized
                                BROADCAST [RS_410]
                                  PartitionCols:_col0
                                  Select Operator [SEL_409] (rows=1515 width=12)
                                    Output:["_col0"]
                                    Filter Operator [FIL_408] (rows=1515 width=12)
                                      predicate:((t_hour = 11) and (t_minute >= 30) and t_time_sk is not null)
                                      TableScan [TS_55] (rows=86400 width=12)
                                        default@time_dim,time_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["t_time_sk","t_hour","t_minute"]
                              <-Map 24 [BROADCAST_EDGE] vectorized
                                BROADCAST [RS_413]
                                  PartitionCols:_col0
                                  Select Operator [SEL_412] (rows=1091 width=12)
                                    Output:["_col0"]
                                    Filter Operator [FIL_411] (rows=1091 width=12)
                                      predicate:((((hd_dep_count = 3) and (hd_vehicle_count <= 5)) or ((hd_dep_count = 0) and (hd_vehicle_count <= 2)) or ((hd_dep_count = 1) and (hd_vehicle_count <= 3))) and hd_demo_sk is not null)
                                      TableScan [TS_58] (rows=7200 width=12)
                                        default@household_demographics,household_demographics,Tbl:COMPLETE,Col:COMPLETE,Output:["hd_demo_sk","hd_dep_count","hd_vehicle_count"]
                              <-Map 25 [BROADCAST_EDGE] vectorized
                                BROADCAST [RS_416]
                                  PartitionCols:_col0
                                  Select Operator [SEL_415] (rows=155 width=91)
                                    Output:["_col0"]
                                    Filter Operator [FIL_414] (rows=155 width=92)
                                      predicate:((s_store_name = 'ese') and s_store_sk is not null)
                                      TableScan [TS_61] (rows=1704 width=92)
                                        default@store,store,Tbl:COMPLETE,Col:COMPLETE,Output:["s_store_sk","s_store_name"]
                              <-Map 26 [BROADCAST_EDGE] vectorized
                                BROADCAST [RS_419]
                                  PartitionCols:_col0
                                  Select Operator [SEL_418] (rows=1515 width=12)
                                    Output:["_col0"]
                                    Filter Operator [FIL_417] (rows=1515 width=12)
                                      predicate:((t_hour = 11) and (t_minute < 30) and t_time_sk is not null)
                                      TableScan [TS_81] (rows=86400 width=12)
                                        default@time_dim,time_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["t_time_sk","t_hour","t_minute"]
                              <-Map 27 [BROADCAST_EDGE] vectorized
                                BROADCAST [RS_422]
                                  PartitionCols:_col0
                                  Select Operator [SEL_421] (rows=1091 width=12)
                                    Output:["_col0"]
                                    Filter Operator [FIL_420] (rows=1091 width=12)
                                      predicate:((((hd_dep_count = 3) and (hd_vehicle_count <= 5)) or ((hd_dep_count = 0) and (hd_vehicle_count <= 2)) or ((hd_dep_count = 1) and (hd_vehicle_count <= 3))) and hd_demo_sk is not null)
                                      TableScan [TS_84] (rows=7200 width=12)
                                        default@household_demographics,household_demographics,Tbl:COMPLETE,Col:COMPLETE,Output:["hd_demo_sk","hd_dep_count","hd_vehicle_count"]
                              <-Map 28 [BROADCAST_EDGE] vectorized
                                BROADCAST [RS_425]
                                  PartitionCols:_col0
                                  Select Operator [SEL_424] (rows=155 width=91)
                                    Output:["_col0"]
                                    Filter Operator [FIL_423] (rows=155 width=92)
                                      predicate:((s_store_name = 'ese') and s_store_sk is not null)
                                      TableScan [TS_87] (rows=1704 width=92)
                                        default@store,store,Tbl:COMPLETE,Col:COMPLETE,Output:["s_store_sk","s_store_name"]
                              <-Map 29 [BROADCAST_EDGE] vectorized
                                BROADCAST [RS_428]
                                  PartitionCols:_col0
                                  Select Operator [SEL_427] (rows=1515 width=12)
                                    Output:["_col0"]
                                    Filter Operator [FIL_426] (rows=1515 width=12)
                                      predicate:((t_hour = 10) and (t_minute >= 30) and t_time_sk is not null)
                                      TableScan [TS_107] (rows=86400 width=12)
                                        default@time_dim,time_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["t_time_sk","t_hour","t_minute"]
                              <-Map 30 [BROADCAST_EDGE] vectorized
                                BROADCAST [RS_431]
                                  PartitionCols:_col0
                                  Select Operator [SEL_430] (rows=1091 width=12)
                                    Output:["_col0"]
                                    Filter Operator [FIL_429] (rows=1091 width=12)
                                      predicate:((((hd_dep_count = 3) and (hd_vehicle_count <= 5)) or ((hd_dep_count = 0) and (hd_vehicle_count <= 2)) or ((hd_dep_count = 1) and (hd_vehicle_count <= 3))) and hd_demo_sk is not null)
                                      TableScan [TS_110] (rows=7200 width=12)
                                        default@household_demographics,household_demographics,Tbl:COMPLETE,Col:COMPLETE,Output:["hd_demo_sk","hd_dep_count","hd_vehicle_count"]
                              <-Map 31 [BROADCAST_EDGE] vectorized
                                BROADCAST [RS_434]
                                  PartitionCols:_col0
                                  Select Operator [SEL_433] (rows=155 width=91)
                                    Output:["_col0"]
                                    Filter Operator [FIL_432] (rows=155 width=92)
                                      predicate:((s_store_name = 'ese') and s_store_sk is not null)
                                      TableScan [TS_113] (rows=1704 width=92)
                                        default@store,store,Tbl:COMPLETE,Col:COMPLETE,Output:["s_store_sk","s_store_name"]
                              <-Map 32 [BROADCAST_EDGE] vectorized
                                BROADCAST [RS_437]
                                  PartitionCols:_col0
                                  Select Operator [SEL_436] (rows=1515 width=12)
                                    Output:["_col0"]
                                    Filter Operator [FIL_435] (rows=1515 width=12)
                                      predicate:((t_hour = 10) and (t_minute < 30) and t_time_sk is not null)
                                      TableScan [TS_133] (rows=86400 width=12)
                                        default@time_dim,time_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["t_time_sk","t_hour","t_minute"]
                              <-Map 33 [BROADCAST_EDGE] vectorized
                                BROADCAST [RS_440]
                                  PartitionCols:_col0
                                  Select Operator [SEL_439] (rows=1091 width=12)
                                    Output:["_col0"]
                                    Filter Operator [FIL_438] (rows=1091 width=12)
                                      predicate:((((hd_dep_count = 3) and (hd_vehicle_count <= 5)) or ((hd_dep_count = 0) and (hd_vehicle_count <= 2)) or ((hd_dep_count = 1) and (hd_vehicle_count <= 3))) and hd_demo_sk is not null)
                                      TableScan [TS_136] (rows=7200 width=12)
                                        default@household_demographics,household_demographics,Tbl:COMPLETE,Col:COMPLETE,Output:["hd_demo_sk","hd_dep_count","hd_vehicle_count"]
                              <-Map 34 [BROADCAST_EDGE] vectorized
                                BROADCAST [RS_443]
                                  PartitionCols:_col0
                                  Select Operator [SEL_442] (rows=155 width=91)
                                    Output:["_col0"]
                                    Filter Operator [FIL_441] (rows=155 width=92)
                                      predicate:((s_store_name = 'ese') and s_store_sk is not null)
                                      TableScan [TS_139] (rows=1704 width=92)
                                        default@store,store,Tbl:COMPLETE,Col:COMPLETE,Output:["s_store_sk","s_store_name"]
                              <-Map 35 [BROADCAST_EDGE] vectorized
                                BROADCAST [RS_446]
                                  PartitionCols:_col0
                                  Select Operator [SEL_445] (rows=1515 width=12)
                                    Output:["_col0"]
                                    Filter Operator [FIL_444] (rows=1515 width=12)
                                      predicate:((t_hour = 9) and (t_minute >= 30) and t_time_sk is not null)
                                      TableScan [TS_159] (rows=86400 width=12)
                                        default@time_dim,time_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["t_time_sk","t_hour","t_minute"]
                              <-Map 36 [BROADCAST_EDGE] vectorized
                                BROADCAST [RS_449]
                                  PartitionCols:_col0
                                  Select Operator [SEL_448] (rows=1091 width=12)
                                    Output:["_col0"]
                                    Filter Operator [FIL_447] (rows=1091 width=12)
                                      predicate:((((hd_dep_count = 3) and (hd_vehicle_count <= 5)) or ((hd_dep_count = 0) and (hd_vehicle_count <= 2)) or ((hd_dep_count = 1) and (hd_vehicle_count <= 3))) and hd_demo_sk is not null)
                                      TableScan [TS_162] (rows=7200 width=12)
                                        default@household_demographics,household_demographics,Tbl:COMPLETE,Col:COMPLETE,Output:["hd_demo_sk","hd_dep_count","hd_vehicle_count"]
                              <-Map 37 [BROADCAST_EDGE] vectorized
                                BROADCAST [RS_452]
                                  PartitionCols:_col0
                                  Select Operator [SEL_451] (rows=155 width=91)
                                    Output:["_col0"]
                                    Filter Operator [FIL_450] (rows=155 width=92)
                                      predicate:((s_store_name = 'ese') and s_store_sk is not null)
                                      TableScan [TS_165] (rows=1704 width=92)
                                        default@store,store,Tbl:COMPLETE,Col:COMPLETE,Output:["s_store_sk","s_store_name"]
          <-Reducer 8 [XPROD_EDGE]
            XPROD_EDGE [RS_226]
              Merge Join Operator [MERGEJOIN_364] (rows=1 width=56)
                Conds:(Inner),Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"]
              <-Reducer 15 [XPROD_EDGE] vectorized
                XPROD_EDGE [RS_517]
                  Group By Operator [GBY_516] (rows=1 width=8)
                    Output:["_col0"],aggregations:["count(VALUE._col0)"]
                  <-Map 1 [CUSTOM_SIMPLE_EDGE] vectorized
                    PARTITION_ONLY_SHUFFLE [RS_502]
                      Group By Operator [GBY_494] (rows=1 width=8)
                        Output:["_col0"],aggregations:["count()"]
                        Map Join Operator [MAPJOIN_486] (rows=1806751 width=8)
                          Conds:MAPJOIN_478._col2=RS_452._col0(Inner),HybridGraceHashJoin:true
                        <- Please refer to the previous Map 37 [BROADCAST_EDGE]
                        <-Map Join Operator [MAPJOIN_478] (rows=2460956 width=0)
                            Conds:MAPJOIN_470._col1=RS_449._col0(Inner),HybridGraceHashJoin:true,Output:["_col2"]
                          <- Please refer to the previous Map 36 [BROADCAST_EDGE]
                          <-Map Join Operator [MAPJOIN_470] (rows=16240953 width=0)
                              Conds:SEL_463._col0=RS_446._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2"]
                            <- Please refer to the previous Map 35 [BROADCAST_EDGE]
                               Please refer to the previous Select Operator [SEL_463]
              <-Reducer 7 [XPROD_EDGE]
                XPROD_EDGE [RS_223]
                  Merge Join Operator [MERGEJOIN_363] (rows=1 width=48)
                    Conds:(Inner),Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                  <-Reducer 14 [XPROD_EDGE] vectorized
                    XPROD_EDGE [RS_515]
                      Group By Operator [GBY_514] (rows=1 width=8)
                        Output:["_col0"],aggregations:["count(VALUE._col0)"]
                      <-Map 1 [CUSTOM_SIMPLE_EDGE] vectorized
                        PARTITION_ONLY_SHUFFLE [RS_501]
                          Group By Operator [GBY_493] (rows=1 width=8)
                            Output:["_col0"],aggregations:["count()"]
                            Map Join Operator [MAPJOIN_485] (rows=1806751 width=8)
                              Conds:MAPJOIN_477._col2=RS_443._col0(Inner),HybridGraceHashJoin:true
                            <- Please refer to the previous Map 34 [BROADCAST_EDGE]
                            <-Map Join Operator [MAPJOIN_477] (rows=2460956 width=0)
                                Conds:MAPJOIN_469._col1=RS_440._col0(Inner),HybridGraceHashJoin:true,Output:["_col2"]
                              <- Please refer to the previous Map 33 [BROADCAST_EDGE]
                              <-Map Join Operator [MAPJOIN_469] (rows=16240953 width=0)
                                  Conds:SEL_463._col0=RS_437._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2"]
                                <- Please refer to the previous Map 32 [BROADCAST_EDGE]
                                   Please refer to the previous Select Operator [SEL_463]
                  <-Reducer 6 [XPROD_EDGE]
                    XPROD_EDGE [RS_220]
                      Merge Join Operator [MERGEJOIN_362] (rows=1 width=40)
                        Conds:(Inner),Output:["_col0","_col1","_col2","_col3","_col4"]
                      <-Reducer 13 [XPROD_EDGE] vectorized
                        XPROD_EDGE [RS_513]
                          Group By Operator [GBY_512] (rows=1 width=8)
                            Output:["_col0"],aggregations:["count(VALUE._col0)"]
                          <-Map 1 [CUSTOM_SIMPLE_EDGE] vectorized
                            PARTITION_ONLY_SHUFFLE [RS_500]
                              Group By Operator [GBY_492] (rows=1 width=8)
                                Output:["_col0"],aggregations:["count()"]
                                Map Join Operator [MAPJOIN_484] (rows=1806751 width=8)
                                  Conds:MAPJOIN_476._col2=RS_434._col0(Inner),HybridGraceHashJoin:true
                                <- Please refer to the previous Map 31 [BROADCAST_EDGE]
                                <-Map Join Operator [MAPJOIN_476] (rows=2460956 width=0)
                                    Conds:MAPJOIN_468._col1=RS_431._col0(Inner),HybridGraceHashJoin:true,Output:["_col2"]
                                  <- Please refer to the previous Map 30 [BROADCAST_EDGE]
                                  <-Map Join Operator [MAPJOIN_468] (rows=16240953 width=0)
                                      Conds:SEL_463._col0=RS_428._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2"]
                                    <- Please refer to the previous Map 29 [BROADCAST_EDGE]
                                       Please refer to the previous Select Operator [SEL_463]
                      <-Reducer 5 [XPROD_EDGE]
                        XPROD_EDGE [RS_217]
                          Merge Join Operator [MERGEJOIN_361] (rows=1 width=32)
                            Conds:(Inner),Output:["_col0","_col1","_col2","_col3"]
                          <-Reducer 12 [XPROD_EDGE] vectorized
                            XPROD_EDGE [RS_511]
                              Group By Operator [GBY_510] (rows=1 width=8)
                                Output:["_col0"],aggregations:["count(VALUE._col0)"]
                              <-Map 1 [CUSTOM_SIMPLE_EDGE] vectorized
                                PARTITION_ONLY_SHUFFLE [RS_499]
                                  Group By Operator [GBY_491] (rows=1 width=8)
                                    Output:["_col0"],aggregations:["count()"]
                                    Map Join Operator [MAPJOIN_483] (rows=1806751 width=8)
                                      Conds:MAPJOIN_475._col2=RS_425._col0(Inner),HybridGraceHashJoin:true
                                    <- Please refer to the previous Map 28 [BROADCAST_EDGE]
                                    <-Map Join Operator [MAPJOIN_475] (rows=2460956 width=0)
                                        Conds:MAPJOIN_467._col1=RS_422._col0(Inner),HybridGraceHashJoin:true,Output:["_col2"]
                                      <- Please refer to the previous Map 27 [BROADCAST_EDGE]
                                      <-Map Join Operator [MAPJOIN_467] (rows=16240953 width=0)
                                          Conds:SEL_463._col0=RS_419._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2"]
                                        <- Please refer to the previous Map 26 [BROADCAST_EDGE]
                                           Please refer to the previous Select Operator [SEL_463]
                          <-Reducer 4 [XPROD_EDGE]
                            XPROD_EDGE [RS_214]
                              Merge Join Operator [MERGEJOIN_360] (rows=1 width=24)
                                Conds:(Inner),Output:["_col0","_col1","_col2"]
                              <-Reducer 11 [XPROD_EDGE] vectorized
                                XPROD_EDGE [RS_509]
                                  Group By Operator [GBY_508] (rows=1 width=8)
                                    Output:["_col0"],aggregations:["count(VALUE._col0)"]
                                  <-Map 1 [CUSTOM_SIMPLE_EDGE] vectorized
                                    PARTITION_ONLY_SHUFFLE [RS_498]
                                      Group By Operator [GBY_490] (rows=1 width=8)
                                        Output:["_col0"],aggregations:["count()"]
                                        Map Join Operator [MAPJOIN_482] (rows=1806751 width=8)
                                          Conds:MAPJOIN_474._col2=RS_416._col0(Inner),HybridGraceHashJoin:true
                                        <- Please refer to the previous Map 25 [BROADCAST_EDGE]
                                        <-Map Join Operator [MAPJOIN_474] (rows=2460956 width=0)
                                            Conds:MAPJOIN_466._col1=RS_413._col0(Inner),HybridGraceHashJoin:true,Output:["_col2"]
                                          <- Please refer to the previous Map 24 [BROADCAST_EDGE]
                                          <-Map Join Operator [MAPJOIN_466] (rows=16240953 width=0)
                                              Conds:SEL_463._col0=RS_410._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2"]
                                            <- Please refer to the previous Map 23 [BROADCAST_EDGE]
                                               Please refer to the previous Select Operator [SEL_463]
                              <-Reducer 3 [XPROD_EDGE]
                                XPROD_EDGE [RS_211]
                                  Merge Join Operator [MERGEJOIN_359] (rows=1 width=16)
                                    Conds:(Inner),Output:["_col0","_col1"]
                                  <-Reducer 10 [XPROD_EDGE] vectorized
                                    XPROD_EDGE [RS_507]
                                      Group By Operator [GBY_506] (rows=1 width=8)
                                        Output:["_col0"],aggregations:["count(VALUE._col0)"]
                                      <-Map 1 [CUSTOM_SIMPLE_EDGE] vectorized
                                        PARTITION_ONLY_SHUFFLE [RS_497]
                                          Group By Operator [GBY_489] (rows=1 width=8)
                                            Output:["_col0"],aggregations:["count()"]
                                            Map Join Operator [MAPJOIN_481] (rows=1806751 width=8)
                                              Conds:MAPJOIN_473._col2=RS_407._col0(Inner),HybridGraceHashJoin:true
                                            <- Please refer to the previous Map 22 [BROADCAST_EDGE]
                                            <-Map Join Operator [MAPJOIN_473] (rows=2460956 width=0)
                                                Conds:MAPJOIN_465._col1=RS_404._col0(Inner),HybridGraceHashJoin:true,Output:["_col2"]
                                              <- Please refer to the previous Map 21 [BROADCAST_EDGE]
                                              <-Map Join Operator [MAPJOIN_465] (rows=16240953 width=0)
                                                  Conds:SEL_463._col0=RS_401._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2"]
                                                <- Please refer to the previous Map 20 [BROADCAST_EDGE]
                                                   Please refer to the previous Select Operator [SEL_463]
                                  <-Reducer 2 [XPROD_EDGE] vectorized
                                    XPROD_EDGE [RS_505]
                                      Group By Operator [GBY_504] (rows=1 width=8)
                                        Output:["_col0"],aggregations:["count(VALUE._col0)"]
                                      <-Map 1 [CUSTOM_SIMPLE_EDGE] vectorized
                                        PARTITION_ONLY_SHUFFLE [RS_496]
                                          Group By Operator [GBY_488] (rows=1 width=8)
                                            Output:["_col0"],aggregations:["count()"]
                                            Map Join Operator [MAPJOIN_480] (rows=1806751 width=8)
                                              Conds:MAPJOIN_472._col2=RS_398._col0(Inner),HybridGraceHashJoin:true
                                            <- Please refer to the previous Map 19 [BROADCAST_EDGE]
                                            <-Map Join Operator [MAPJOIN_472] (rows=2460956 width=0)
                                                Conds:MAPJOIN_464._col1=RS_395._col0(Inner),HybridGraceHashJoin:true,Output:["_col2"]
                                              <- Please refer to the previous Map 18 [BROADCAST_EDGE]
                                              <-Map Join Operator [MAPJOIN_464] (rows=16240953 width=0)
                                                  Conds:SEL_463._col0=RS_392._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2"]
                                                <- Please refer to the previous Map 17 [BROADCAST_EDGE]
                                                   Please refer to the previous Select Operator [SEL_463]

