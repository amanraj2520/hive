PREHOOK: query: explain
select  ca_zip
       ,sum(cs_sales_price)
 from catalog_sales
     ,customer
     ,customer_address
     ,date_dim
 where cs_bill_customer_sk = c_customer_sk
 	and c_current_addr_sk = ca_address_sk 
 	and ( substr(ca_zip,1,5) in ('85669', '86197','88274','83405','86475',
                                   '85392', '85460', '80348', '81792')
 	      or ca_state in ('CA','WA','GA')
 	      or cs_sales_price > 500)
 	and cs_sold_date_sk = d_date_sk
 	and d_qoy = 2 and d_year = 2000
 group by ca_zip
 order by ca_zip
 limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@catalog_sales
PREHOOK: Input: default@customer
PREHOOK: Input: default@customer_address
PREHOOK: Input: default@date_dim
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain
select  ca_zip
       ,sum(cs_sales_price)
 from catalog_sales
     ,customer
     ,customer_address
     ,date_dim
 where cs_bill_customer_sk = c_customer_sk
 	and c_current_addr_sk = ca_address_sk 
 	and ( substr(ca_zip,1,5) in ('85669', '86197','88274','83405','86475',
                                   '85392', '85460', '80348', '81792')
 	      or ca_state in ('CA','WA','GA')
 	      or cs_sales_price > 500)
 	and cs_sold_date_sk = d_date_sk
 	and d_qoy = 2 and d_year = 2000
 group by ca_zip
 order by ca_zip
 limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@catalog_sales
POSTHOOK: Input: default@customer
POSTHOOK: Input: default@customer_address
POSTHOOK: Input: default@date_dim
POSTHOOK: Output: hdfs://### HDFS PATH ###
Plan optimized by CBO.

Vertex dependency in root stage
Map 7 <- Map 8 (BROADCAST_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 6 (SIMPLE_EDGE)
Reducer 3 <- Map 7 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 4 <- Reducer 3 (SIMPLE_EDGE)
Reducer 5 <- Reducer 4 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 5 vectorized
      File Output Operator [FS_66]
        Limit [LIM_65] (rows=100 width=201)
          Number of rows:100
          Select Operator [SEL_64] (rows=9048 width=201)
            Output:["_col0","_col1"]
          <-Reducer 4 [SIMPLE_EDGE] vectorized
            SHUFFLE [RS_63]
              Group By Operator [GBY_62] (rows=9048 width=201)
                Output:["_col0","_col1"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0
              <-Reducer 3 [SIMPLE_EDGE]
                SHUFFLE [RS_25]
                  PartitionCols:_col0
                  Group By Operator [GBY_24] (rows=886704 width=201)
                    Output:["_col0","_col1"],aggregations:["sum(_col7)"],keys:_col4
                    Top N Key Operator [TNK_44] (rows=87831776 width=285)
                      keys:_col4,sort order:+,top n:100
                      Select Operator [SEL_23] (rows=87831776 width=285)
                        Output:["_col4","_col7"]
                        Filter Operator [FIL_22] (rows=87831776 width=285)
                          predicate:((_col3) IN ('CA', 'WA', 'GA') or (_col7 > 500) or (substr(_col4, 1, 5)) IN ('85669', '86197', '88274', '83405', '86475', '85392', '85460', '80348', '81792'))
                          Merge Join Operator [MERGEJOIN_47] (rows=98448804 width=285)
                            Conds:RS_19._col0=RS_61._col1(Inner),Output:["_col3","_col4","_col7"]
                          <-Map 7 [SIMPLE_EDGE] vectorized
                            SHUFFLE [RS_61]
                              PartitionCols:_col1
                              Map Join Operator [MAPJOIN_60] (rows=98448804 width=114)
                                Conds:SEL_59._col0=RS_57._col0(Inner),HybridGraceHashJoin:true,Output:["_col1","_col2"]
                              <-Map 8 [BROADCAST_EDGE] vectorized
                                BROADCAST [RS_57]
                                  PartitionCols:_col0
                                  Select Operator [SEL_56] (rows=635 width=12)
                                    Output:["_col0"]
                                    Filter Operator [FIL_55] (rows=635 width=12)
                                      predicate:((d_qoy = 2) and (d_year = 2000) and d_date_sk is not null)
                                      TableScan [TS_9] (rows=73049 width=12)
                                        default@date_dim,date_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_year","d_qoy"]
                              <-Select Operator [SEL_59] (rows=285117831 width=119)
                                  Output:["_col0","_col1","_col2"]
                                  Filter Operator [FIL_58] (rows=285117831 width=119)
                                    predicate:(cs_bill_customer_sk is not null and cs_sold_date_sk is not null)
                                    TableScan [TS_6] (rows=287989836 width=119)
                                      default@catalog_sales,catalog_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["cs_sold_date_sk","cs_bill_customer_sk","cs_sales_price"]
                          <-Reducer 2 [SIMPLE_EDGE]
                            SHUFFLE [RS_19]
                              PartitionCols:_col0
                              Merge Join Operator [MERGEJOIN_45] (rows=80000000 width=179)
                                Conds:RS_51._col1=RS_54._col0(Inner),Output:["_col0","_col3","_col4"]
                              <-Map 1 [SIMPLE_EDGE] vectorized
                                SHUFFLE [RS_51]
                                  PartitionCols:_col1
                                  Select Operator [SEL_50] (rows=80000000 width=8)
                                    Output:["_col0","_col1"]
                                    Filter Operator [FIL_49] (rows=80000000 width=8)
                                      predicate:(c_current_addr_sk is not null and c_customer_sk is not null)
                                      TableScan [TS_0] (rows=80000000 width=8)
                                        default@customer,customer,Tbl:COMPLETE,Col:COMPLETE,Output:["c_customer_sk","c_current_addr_sk"]
                              <-Map 6 [SIMPLE_EDGE] vectorized
                                SHUFFLE [RS_54]
                                  PartitionCols:_col0
                                  Select Operator [SEL_53] (rows=40000000 width=179)
                                    Output:["_col0","_col1","_col2"]
                                    Filter Operator [FIL_52] (rows=40000000 width=179)
                                      predicate:ca_address_sk is not null
                                      TableScan [TS_3] (rows=40000000 width=179)
                                        default@customer_address,customer_address,Tbl:COMPLETE,Col:COMPLETE,Output:["ca_address_sk","ca_state","ca_zip"]

